{"version":3,"sources":["firebase.js","Components/useLocalStorage.js","Components/styles/RandomColors.js","Context/AuthContext.js","imgs/ezb3.png","Components/Signup.js","Components/Login.js","Components/CompleteDetails.js","Components/PopUpProject.js","Components/Dashboard.js","Components/NavBar.js","Components/SideBar.js","Components/PrivateRoute.js","Components/InnerCompleteDetails.js","Components/ForgotPassword.js","Components/UpdateProfile.js","Components/PublicRoute.js","Components/Tabs/NPV.js","Components/PopUpProductDetails.js","Components/PopUpProducts.js","Components/Tabs/Inventory.js","Components/popUptask.js","Components/PopUpNote.js","Components/LineChart.js","Components/PopUpAssign.js","Components/PopUpTaskDetails.js","Components/PopUpEmpDetailsAssigned.js","Components/PopUpTaskDetailsWorker.js","Components/Tabs/CurrentWork.js","Components/Tabs/GanttChart.js","Components/Tabs/ProjectSettings.js","Components/ProjectPage.js","Components/PopUpAddEmployee.js","Components/PopUpClients.js","Components/PopUpEmail.js","Components/PopUpEditClient.js","Components/ContactsPage.js","Components/ContractsPage.js","Components/CalendarScheduler.js","Components/Calendar.js","Components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","db","firestore","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","colors","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","userDetails","setUserDetails","loading","setLoading","projects","setProjects","alert","useAlert","selectedCompanyEmployee","setSelectedCompanyEmployee","selectedCompanyClients","setSelectedCompanyClients","selectedProject","setSelectedProject","selectedProjectTasks","setSelectedProjectTasks","companiesData","setCompaniesData","selectCompany","setSelectCompany","userNotifications","setUserNotifications","selectedProjectNotes","setSelectedProjectNotes","allCompanyTasks","setAllCompanyTasks","selectedProjectInventory","setSelectedProjectInventory","setSelectedCompany","company","a","collection","doc","id","onSnapshot","querySnapshot","data","emp","users","forEach","user","push","getCompanyProjects","GetClients","initialGetCompanies","items","get","then","email","getCompanies","temp","sort","sortAlphabetical","b","bandA","projectName","toUpperCase","bandB","comparison","initialGetCompanyProjects","startDate","endDate","description","assigned","name","displayName","type","photoURL","companyName","set","uid","success","catch","updateDetails","project","e","delete","getAllProjectsTasks","removeItem","taskName","taskDescripiton","subTasks","complete","getProjectTasks","message","task","workers","selectedWorker","lates","late","sub","undefined","i","length","createNotification","Math","floor","msg","date","format","Date","dateOfCreation","creator","getProjectNotes","note","price","sellingPrice","quantity","unitsSold","productName","productPrice","productSellingPrice","productQuantity","productUnitsSold","getProjectInventory","prod","prodId","units","firstName","lastName","updateProfile","phone","details","insertCompanyToFirestore","initialUpdateDetails","fetchUserDetails","getUserNotifications","initialGetClients","initialGetAllProjectsTasks","companyProjects","index","title","color","belongsTo","exists","checkEmployeeExist","ClientName","ClientEmail","EmployeeName","EmployeeEmail","EmployeeType","Projects","comp","AssignedProjects","response","GetEmployee","names","variables","Name","Subject","reciever","emailJS","send","status","text","user1","filter","tempProjects","projectTasks","updatedTask","j","client","creationDate","read","noti","sortTime","getTime","not","useEffect","onAuthStateChanged","signup","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","authLogin","signInWithPopup","result","checkUserExist","insertDetailsToFirestore","insertProjectToFirestore","setSelectedProject1","setUserNotificationsRead","insertTaskToFirestore","handleSubTaskChange","insertNoteToFirestore","insertClientToFirestore","insertEmployeeToFirestore","deleteEmployee","deleteClient","insertProductToFirestore","sortInventory","deleteProduct","updateProduct","deleteTask","deleteNote","updateProject","deleteProject","updateClient","deleteNotification","handleSubTaskChangeWorker","Provider","style","position","top","left","height","width","timeout","Signup","firstNameref","useRef","lastNameref","mobileRef","companyRef","emailRef","passwordRef","passwordConfirmRef","setError","history","useHistory","preventDefault","current","companies","Card","className","Body","alt","src","logo","Alert","variant","Form","onSubmit","Group","Label","Control","ref","required","Button","disabled","to","Login","borderRadius","onClick","CompleteDetails","split","PopupProject","setStartDate","setEndDate","ProjectName","ProjectDescription","trigger","xmlns","backgroundColor","fill","viewBox","d","modal","nested","close","onChange","onDateChange","minDate","maxDate","dateFormat","monthFormat","startDatePlaceholder","endDatePlaceholder","startWeekDay","highlightToday","handleSubmit","Dashboard","componentRef","formattedData","label","projectData","calculateProgress","isAssigned","viewDetails","calculateDateLeft","prStartDate","prEndDate","currentDate","parseInt","completeCounter","taskCounter","getDayPercentage","textAlign","padding","itemsToShow","marginTop","map","marginBottom","ProgressBar","now","toFixed","abs","display","exportComponentAsPNG","overflow","paddingRight","chartType","loader","rootProps","NavBar","props","handleCollapsedChange","countNotification","count","justifyContent","justifyItems","fillRule","Brand","href","marginRight","marginLeft","alignRight","Toggle","Menu","Item","as","onSelect","margin","drop","fontSize","readNotifications","background","right","fluid","md","handleDeleteNotification","fill-rule","border","Aside","collapsed","toggled","handleToggleSidebar","breakPoint","onToggle","zIndex","iconShape","icon","PrivateRouteLayout","Component","component","rest","setCollapsed","setToggled","render","SideBar","PrivateRoute","options","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","repulse","speed","particles","links","collisions","move","direction","outMode","random","straight","number","density","value_area","shape","detectRetina","Container","minHeight","maxWidth","ForgotPassword","setMessage","UpdateProfile","promises","Promise","all","finally","defaultValue","placeholder","PublicRoute","NPV","Future","Discount","firstYear","secYear","thirdYear","forthYear","fifthYear","setNpv","Currency","setCurrency","valArr","npv","disc","pow","calculateNpv","InputGroup","Prepend","Text","FormControl","custom","Event","target","PopUpProductDetails","checkOwner","handleSelect","PopUpProducts","ProductName","ProductPrice","ProductSellingPrice","ProductQuantity","Productsold","sellingP","sold","Inventory","Selected","setSelected","isOwner","sortBestSelling","sortHighestPrice","sortLowestPrice","sortMostQuantity","sortLeastQuantity","sortHighestProfit","DropdownButton","ButtonGroup","Dropdown","eventKey","handleDelete","PopUptask","subtasklist","setSubtasklist","taskDiscription","subTaskName","joined","found","concat","addItem","Row","Col","newList","Task","handleRemove","PopUpNote","LineChart","dateList","finalData","completionDate","formattedDateList","slice","createArray","r","c","Array","x","tempData","counter","k","l","lastModified","test","hAxis","vAxis","series","PopUpAssign","selected","userList","setUsers","updateUserType","contentStyle","temp2","PopUpTaskDetails","updated","setUpdated","taskCopy","setTaskCopy","taskCopyFinal","setTaskCopyFinal","handleClick","check","checkComplete","handleSelectWorker","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","subs","PopUpEmpDetailsAssigned","Emp","tasks","majorTasks","taskObj","completeDate","majorTask","dublicate","majorTaskName","v","findIndex","t","PopUpTaskDetailsWorker","projectAssigned","assignedUsers","CurrentWork","calculateSubProgress","alignItems","alignContent","maxHeight","bottom","worker","GanttChart","formattedTask","calculateTaskProgress","ProjectSettings","DeleteConfirmation","updatedProject","ProjectPage","PopUpAddEmployee","Employee","setEmployee","projectlist","setProjectlist","PopUpAddClient","Email","readOnly","rows","PopUpEditClient","ContactsPage","setEmail","email1","setEmail1","setClient","selectRow","clickToSelect","row","isSelect","rowIndex","selectRow2","keyField","columns","dataField","pagination","paginationFactory","ContractsPage","content","setcontent","subtitle","setsubtitle","settitle","save","setsave","styles","body","fixed","author","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","fontFamily","image","marginVertical","marginHorizontal","header","pageNumber","palette","action","active","textCenter","firstRoom","secondRoom","thirdRoom","backgroundSize","commandButton","Header","withStyles","appointmentData","restProps","classes","CalendarScheduler","state","this","Content","buildStyles","rotation","strokeLinecap","textSize","pathColor","textColor","trailColor","Paper","defaultCurrentViewName","appointmentComponent","Appointment","contentComponent","headerComponent","showCloseButton","Calendar","taskTemp","projectsTemp","allTasks","App","positions","BOTTOM_CENTER","offset","transition","transitions","SCALE","template","AlertTemplate","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"khBAcMA,G,OAAMC,IAASC,cAXE,CACrBC,OAAQ,0CACRC,WAAY,0BACZC,YAAa,8CACbC,UAAW,UACXC,cAAe,sBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAKJC,EAAW,IAAIV,IAASW,KAAKC,mBAC7BC,EAAKd,EAAIe,YACTH,EAAOZ,EAAIY,O,SCmBTI,MAnCf,SAAyBC,EAAKC,GAAc,MAGJC,oBAAS,WAC7C,IAEE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAGP,OADAC,QAAQC,IAAIF,GACLR,MAZ+B,mBAGnCW,EAHmC,KAGtBC,EAHsB,KAiC1C,MAAO,CAACD,EAfS,SAACE,GAChB,IAEE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEnDD,EAAeE,GAEfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,O,kBC/BLU,EAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,2CC9QIC,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAGb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACHxB,qBADG,mBAClCyB,EADkC,KACrBC,EADqB,OAEH7B,EAAgB,cAAe,IAF5B,mBAElC8B,EAFkC,KAErBC,EAFqB,OAGX5B,oBAAS,GAHE,mBAGlC6B,EAHkC,KAGzBC,EAHyB,OAITjC,EAAgB,kBAAmB,IAJ1B,mBAIlCkC,EAJkC,KAIxBC,EAJwB,KAKnCC,EAAQC,cAL2B,EAMqBrC,EAC5D,0BACA,IARuC,mBAMlCsC,EANkC,KAMTC,EANS,OAUmBvC,EAC1D,yBACA,IAZuC,mBAUlCwC,EAVkC,KAUVC,EAVU,OAcKzC,EAC5C,kBACA,I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","file":"static/js/main.d4a217e9.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyASZ4Kixswbss5lNzM3xSUbKnJZl8-9rus\",\r\n  authDomain: \"ezb-dev.firebaseapp.com\",\r\n  databaseURL: \"https://ezb-dev-default-rtdb.firebaseio.com\",\r\n  projectId: \"ezb-dev\",\r\n  storageBucket: \"ezb-dev.appspot.com\",\r\n  messagingSenderId: \"353004365627\",\r\n  appId: \"1:353004365627:web:40352e4910fc0804d3f91e\",\r\n  measurementId: \"G-P7JDKD93NJ\",\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const db = app.firestore();\r\nexport const auth = app.auth();\r\n\r\nexport default app;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\nexport default useLocalStorage;\r\n","export const colors = [\r\n  \"#63b598\",\r\n  \"#ce7d78\",\r\n  \"#ea9e70\",\r\n  \"#a48a9e\",\r\n  \"#6ca8b8\",\r\n  \"#4a5691\",\r\n  \"#0d5ac1\",\r\n  \"#f205e6\",\r\n  \"#1c0365\",\r\n  \"#14a9ad\",\r\n  \"#7a4cf9\",\r\n  \"#a4e43f\",\r\n  \"#d298e2\",\r\n  \"#6119d0\",\r\n  \"#d2737d\",\r\n  \"#c0a43c\",\r\n  \"#f2510e\",\r\n  \"#651be6\",\r\n  \"#79806e\",\r\n  \"#61da5e\",\r\n  \"#cd2f00\",\r\n  \"#9348af\",\r\n  \"#01ac53\",\r\n  \"#c5a4fb\",\r\n  \"#996635\",\r\n  \"#b11573\",\r\n  \"#4bb473\",\r\n  \"#75d89e\",\r\n  \"#2f3f94\",\r\n  \"#2f7b99\",\r\n  \"#da967d\",\r\n  \"#34891f\",\r\n  \"#b0d87b\",\r\n  \"#ca4751\",\r\n  \"#7e50a8\",\r\n  \"#c4d647\",\r\n  \"#e0eeb8\",\r\n  \"#11dec1\",\r\n  \"#289812\",\r\n  \"#566ca0\",\r\n  \"#ffdbe1\",\r\n  \"#2f1179\",\r\n  \"#935b6d\",\r\n  \"#916988\",\r\n  \"#513d98\",\r\n  \"#aead3a\",\r\n  \"#9e6d71\",\r\n  \"#4b5bdc\",\r\n  \"#0cd36d\",\r\n  \"#250662\",\r\n  \"#cb5bea\",\r\n  \"#228916\",\r\n  \"#ac3e1b\",\r\n  \"#df514a\",\r\n  \"#539397\",\r\n  \"#880977\",\r\n  \"#f697c1\",\r\n  \"#ba96ce\",\r\n  \"#679c9d\",\r\n  \"#c6c42c\",\r\n  \"#5d2c52\",\r\n  \"#48b41b\",\r\n  \"#e1cf3b\",\r\n  \"#5be4f0\",\r\n  \"#57c4d8\",\r\n  \"#a4d17a\",\r\n  \"#225b8\",\r\n  \"#be608b\",\r\n  \"#96b00c\",\r\n  \"#088baf\",\r\n  \"#f158bf\",\r\n  \"#e145ba\",\r\n  \"#ee91e3\",\r\n  \"#05d371\",\r\n  \"#5426e0\",\r\n  \"#4834d0\",\r\n  \"#802234\",\r\n  \"#6749e8\",\r\n  \"#0971f0\",\r\n  \"#8fb413\",\r\n  \"#b2b4f0\",\r\n  \"#c3c89d\",\r\n  \"#c9a941\",\r\n  \"#41d158\",\r\n  \"#fb21a3\",\r\n  \"#51aed9\",\r\n  \"#5bb32d\",\r\n  \"#807fb\",\r\n  \"#21538e\",\r\n  \"#89d534\",\r\n  \"#d36647\",\r\n  \"#7fb411\",\r\n  \"#0023b8\",\r\n  \"#3b8c2a\",\r\n  \"#986b53\",\r\n  \"#f50422\",\r\n  \"#983f7a\",\r\n  \"#ea24a3\",\r\n  \"#79352c\",\r\n  \"#521250\",\r\n  \"#c79ed2\",\r\n  \"#d6dd92\",\r\n  \"#e33e52\",\r\n  \"#b2be57\",\r\n  \"#fa06ec\",\r\n  \"#1bb699\",\r\n  \"#6b2e5f\",\r\n  \"#64820f\",\r\n  \"#1c271\",\r\n  \"#21538e\",\r\n  \"#89d534\",\r\n  \"#d36647\",\r\n  \"#7fb411\",\r\n  \"#0023b8\",\r\n  \"#3b8c2a\",\r\n  \"#986b53\",\r\n  \"#f50422\",\r\n  \"#983f7a\",\r\n  \"#ea24a3\",\r\n  \"#79352c\",\r\n  \"#521250\",\r\n  \"#c79ed2\",\r\n  \"#d6dd92\",\r\n  \"#e33e52\",\r\n  \"#b2be57\",\r\n  \"#fa06ec\",\r\n  \"#1bb699\",\r\n  \"#6b2e5f\",\r\n  \"#64820f\",\r\n  \"#1c271\",\r\n  \"#9cb64a\",\r\n  \"#996c48\",\r\n  \"#9ab9b7\",\r\n  \"#06e052\",\r\n  \"#e3a481\",\r\n  \"#0eb621\",\r\n  \"#fc458e\",\r\n  \"#b2db15\",\r\n  \"#aa226d\",\r\n  \"#792ed8\",\r\n  \"#73872a\",\r\n  \"#520d3a\",\r\n  \"#cefcb8\",\r\n  \"#a5b3d9\",\r\n  \"#7d1d85\",\r\n  \"#c4fd57\",\r\n  \"#f1ae16\",\r\n  \"#8fe22a\",\r\n  \"#ef6e3c\",\r\n  \"#243eeb\",\r\n  \"#1dc18\",\r\n  \"#dd93fd\",\r\n  \"#3f8473\",\r\n  \"#e7dbce\",\r\n  \"#421f79\",\r\n  \"#7a3d93\",\r\n  \"#635f6d\",\r\n  \"#93f2d7\",\r\n  \"#9b5c2a\",\r\n  \"#15b9ee\",\r\n  \"#0f5997\",\r\n  \"#409188\",\r\n  \"#911e20\",\r\n  \"#1350ce\",\r\n  \"#10e5b1\",\r\n  \"#fff4d7\",\r\n  \"#cb2582\",\r\n  \"#ce00be\",\r\n  \"#32d5d6\",\r\n  \"#17232\",\r\n  \"#608572\",\r\n  \"#c79bc2\",\r\n  \"#00f87c\",\r\n  \"#77772a\",\r\n  \"#6995ba\",\r\n  \"#fc6b57\",\r\n  \"#f07815\",\r\n  \"#8fd883\",\r\n  \"#060e27\",\r\n  \"#96e591\",\r\n  \"#21d52e\",\r\n  \"#d00043\",\r\n  \"#b47162\",\r\n  \"#1ec227\",\r\n  \"#4f0f6f\",\r\n  \"#1d1d58\",\r\n  \"#947002\",\r\n  \"#bde052\",\r\n  \"#e08c56\",\r\n  \"#28fcfd\",\r\n  \"#bb09b\",\r\n  \"#36486a\",\r\n  \"#d02e29\",\r\n  \"#1ae6db\",\r\n  \"#3e464c\",\r\n  \"#a84a8f\",\r\n  \"#911e7e\",\r\n  \"#3f16d9\",\r\n  \"#0f525f\",\r\n  \"#ac7c0a\",\r\n  \"#b4c086\",\r\n  \"#c9d730\",\r\n  \"#30cc49\",\r\n  \"#3d6751\",\r\n  \"#fb4c03\",\r\n  \"#640fc1\",\r\n  \"#62c03e\",\r\n  \"#d3493a\",\r\n  \"#88aa0b\",\r\n  \"#406df9\",\r\n  \"#615af0\",\r\n  \"#4be47\",\r\n  \"#2a3434\",\r\n  \"#4a543f\",\r\n  \"#79bca0\",\r\n  \"#a8b8d4\",\r\n  \"#00efd4\",\r\n  \"#7ad236\",\r\n  \"#7260d8\",\r\n  \"#1deaa7\",\r\n  \"#06f43a\",\r\n  \"#823c59\",\r\n  \"#e3d94c\",\r\n  \"#dc1c06\",\r\n  \"#f53b2a\",\r\n  \"#b46238\",\r\n  \"#2dfff6\",\r\n  \"#a82b89\",\r\n  \"#1a8011\",\r\n  \"#436a9f\",\r\n  \"#1a806a\",\r\n  \"#4cf09d\",\r\n  \"#c188a2\",\r\n  \"#67eb4b\",\r\n  \"#b308d3\",\r\n  \"#fc7e41\",\r\n  \"#af3101\",\r\n  \"#ff065\",\r\n  \"#71b1f4\",\r\n  \"#a2f8a5\",\r\n  \"#e23dd0\",\r\n  \"#d3486d\",\r\n  \"#00f7f9\",\r\n  \"#474893\",\r\n  \"#3cec35\",\r\n  \"#1c65cb\",\r\n  \"#5d1d0c\",\r\n  \"#2d7d2a\",\r\n  \"#ff3420\",\r\n  \"#5cdd87\",\r\n  \"#a259a4\",\r\n  \"#e4ac44\",\r\n  \"#1bede6\",\r\n  \"#8798a4\",\r\n  \"#d7790f\",\r\n  \"#b2c24f\",\r\n  \"#de73c2\",\r\n  \"#d70a9c\",\r\n  \"#25b67\",\r\n  \"#88e9b8\",\r\n  \"#c2b0e2\",\r\n  \"#86e98f\",\r\n  \"#ae90e2\",\r\n  \"#1a806b\",\r\n  \"#436a9e\",\r\n  \"#0ec0ff\",\r\n  \"#f812b3\",\r\n  \"#b17fc9\",\r\n  \"#8d6c2f\",\r\n  \"#d3277a\",\r\n  \"#2ca1ae\",\r\n  \"#9685eb\",\r\n  \"#8a96c6\",\r\n  \"#dba2e6\",\r\n  \"#76fc1b\",\r\n  \"#608fa4\",\r\n  \"#20f6ba\",\r\n  \"#07d7f6\",\r\n  \"#dce77a\",\r\n  \"#77ecca\",\r\n];\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth, db, provider } from \"../firebase\";\r\nimport { format } from \"date-fns\";\r\nimport useLocalStorage from \"../Components/useLocalStorage.js\";\r\nimport emailJS from \"emailjs-com\";\r\nimport { colors } from \"../Components/styles/RandomColors.js\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [userDetails, setUserDetails] = useLocalStorage(\"userDetails\", []);\r\n  const [loading, setLoading] = useState(true);\r\n  const [projects, setProjects] = useLocalStorage(\"CompanyProjects\", []);\r\n  const alert = useAlert();\r\n  const [selectedCompanyEmployee, setSelectedCompanyEmployee] = useLocalStorage(\r\n    \"selectedCompanyEmployee\",\r\n    {}\r\n  );\r\n  const [selectedCompanyClients, setSelectedCompanyClients] = useLocalStorage(\r\n    \"selectedCompanyClients\",\r\n    {}\r\n  );\r\n  const [selectedProject, setSelectedProject] = useLocalStorage(\r\n    \"selectedProject\",\r\n    {}\r\n  );\r\n  const [selectedProjectTasks, setSelectedProjectTasks] = useLocalStorage(\r\n    \"selectedProjectTasks\",\r\n    {}\r\n  );\r\n  const [companiesData, setCompaniesData] = useLocalStorage(\r\n    \"companiesData\",\r\n    {}\r\n  );\r\n  const [selectCompany, setSelectCompany] = useLocalStorage(\r\n    \"selectedCompany\",\r\n    {}\r\n  );\r\n  const [userNotifications, setUserNotifications] = useLocalStorage(\r\n    \"notifications\",\r\n    {}\r\n  );\r\n  const [selectedProjectNotes, setSelectedProjectNotes] = useLocalStorage(\r\n    \"selectedProjectNotes\",\r\n    {}\r\n  );\r\n\r\n  const [allCompanyTasks, setAllCompanyTasks] = useLocalStorage(\r\n    \"allCompanyTasks\",\r\n    []\r\n  );\r\n\r\n  const [\r\n    selectedProjectInventory,\r\n    setSelectedProjectInventory,\r\n  ] = useLocalStorage(\"selectedProjectInventory\", {});\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"userDetails\");\r\n    localStorage.removeItem(\"CompanyProjects\");\r\n    localStorage.removeItem(\"companiesData\");\r\n    localStorage.removeItem(\"selectedCompany\");\r\n    localStorage.removeItem(\"selectedProject\");\r\n    localStorage.removeItem(\"selectedProjectTasks\");\r\n    localStorage.removeItem(\"notifications\");\r\n    localStorage.removeItem(\"selectedProjectNotes\");\r\n    localStorage.removeItem(\"selectedProjectInventory\");\r\n    localStorage.removeItem(\"selectedCompanyEmployee\");\r\n    localStorage.removeItem(\"selectedCompanyClients\");\r\n    localStorage.removeItem(\"allCompanyTasks\");\r\n\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return auth.currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return auth.currentUser.updatePassword(password);\r\n  }\r\n\r\n  async function setSelectedCompany(company) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(\"\" + company.id)\r\n        .onSnapshot((querySnapshot) => {\r\n          console.log(querySnapshot.data());\r\n          console.log(\"company changed\");\r\n          setSelectCompany(querySnapshot.data());\r\n          let emp = [];\r\n          querySnapshot.data().users.forEach((user) => {\r\n            emp.push(user);\r\n          });\r\n          setSelectedCompanyEmployee(emp);\r\n          getCompanyProjects(querySnapshot.data().id);\r\n          GetClients(querySnapshot.data().id);\r\n\r\n          // getAllProjectsTasks(company);\r\n        });\r\n    }\r\n  }\r\n\r\n  async function initialGetCompanies() {\r\n    let items = [];\r\n    if (auth.currentUser) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((company) => {\r\n            company.data().users.forEach((user) => {\r\n              if (user.email === auth.currentUser.email) {\r\n                let item = company.data();\r\n                item.id = company.id;\r\n                items.push(item);\r\n                console.log(user.email);\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n      console.log(items);\r\n\r\n      setCompaniesData(items);\r\n      setSelectedCompany(items[0]);\r\n      await getCompanyProjects(items[0].id);\r\n\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n\r\n  async function getCompanies() {\r\n    let items = [];\r\n    if (auth.currentUser) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            doc.data().users.forEach((user) => {\r\n              if (user.email === auth.currentUser.email) {\r\n                console.log(user.email);\r\n                items.push(doc.data());\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n      setCompaniesData(items);\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n\r\n  async function getCompanyProjects(id) {\r\n    console.log(\"getCompanyProjects\");\r\n\r\n    if (auth.currentUser) {\r\n      db.collection(\"Companies/\" + id + \"/Projects\").onSnapshot((temp) => {\r\n        const items = [];\r\n        temp.forEach((doc) => {\r\n          let item = doc.data();\r\n          item.id = doc.id;\r\n          items.push(item);\r\n        });\r\n        setProjects(items.sort(sortAlphabetical));\r\n      });\r\n    }\r\n  }\r\n\r\n  function sortAlphabetical(a, b) {\r\n    const bandA = a.projectName.toUpperCase();\r\n    const bandB = b.projectName.toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (bandA > bandB) {\r\n      comparison = 1;\r\n    } else if (bandA < bandB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  async function initialGetCompanyProjects() {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies/\" + selectCompany.id + \"/Projects\")\r\n        .onSnapshot((temp) => {\r\n          const items = [];\r\n          temp.forEach((doc) => {\r\n            items.push(doc.data());\r\n          });\r\n          setProjects(items.sort(sortAlphabetical));\r\n        });\r\n    }\r\n  }\r\n\r\n  //input: project details\r\n\r\n  async function insertProjectToFirestore(\r\n    projectName,\r\n    startDate,\r\n    endDate,\r\n    description\r\n  ) {\r\n    const assigned = [];\r\n    assigned.push({\r\n      email: auth.currentUser.email,\r\n      name: auth.currentUser.displayName,\r\n      type: \"owner\",\r\n      photoURL: auth.currentUser.photoURL,\r\n    });\r\n    companiesData.forEach((company) => {\r\n      if (company.companyName === selectCompany.companyName) {\r\n        company.users.forEach((user) => {\r\n          if (user.email === auth.currentUser.email) {\r\n            if (user.type === \"owner\") {\r\n              db.collection(\"Companies/\" + selectCompany.id + \"/Projects\")\r\n                .doc()\r\n                .set({\r\n                  companyName: selectCompany.companyName,\r\n                  id: selectCompany.id,\r\n                  uid: \"\" + auth.currentUser.uid,\r\n                  email: \"\" + auth.currentUser.email,\r\n                  projectName: \"\" + projectName,\r\n                  startDate: \"\" + startDate,\r\n                  endDate: \"\" + endDate,\r\n                  description: \"\" + description,\r\n                  assigned: assigned,\r\n                })\r\n                .then(() => {\r\n                  console.log(\"Document successfully written!\");\r\n                  alert.success(\"Project Added Successfully!\");\r\n                  getCompanyProjects(company.id);\r\n                })\r\n                .catch((error) => {\r\n                  console.error(\"Error writing document: \", error);\r\n                  alert.error(\"Failed to Add Project!\");\r\n                });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    await updateDetails();\r\n  }\r\n  //output: added project to firestore and Success message\r\n\r\n  //input: project details\r\n  async function updateProject(project) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .set(project)\r\n        .then(() => {\r\n          updateDetails();\r\n          setSelectedProject(project);\r\n          alert.success(\"Successfully Updated Project!\");\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed to Update Project!\");\r\n        });\r\n    }\r\n  }\r\n  //output: edited project in firestore and Success message\r\n\r\n  //input: project to be deleted\r\n  async function deleteProject(project) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(project.id)\r\n        .delete()\r\n        .then(() => {\r\n          updateDetails();\r\n          getAllProjectsTasks(selectCompany);\r\n          localStorage.removeItem(\"selectedProjectNotes\");\r\n          localStorage.removeItem(\"selectedProjectInventory\");\r\n          localStorage.removeItem(\"selectedProjectTasks\");\r\n          localStorage.removeItem(\"selectedProject\");\r\n          alert.success(\"Successfully Deleted Project!\");\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed to Delete Project!\");\r\n        });\r\n    }\r\n  }\r\n  //output: deleted project in firestore and Success message\r\n\r\n  //input: Task details\r\n  async function insertTaskToFirestore(\r\n    taskName,\r\n    taskDescripiton,\r\n    startDate,\r\n    endDate,\r\n    subTasks\r\n  ) {\r\n    if (auth.currentUser) {\r\n      await db;\r\n      db.collection(\"Companies\")\r\n        .doc(\"\" + selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(\"\" + selectedProject.id)\r\n        .collection(\"Tasks\")\r\n        .doc(\"\" + taskName)\r\n        .set({\r\n          taskName: taskName,\r\n          taskDescripiton: taskDescripiton,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          complete: false,\r\n          subTasks: subTasks,\r\n          assigned: [],\r\n        })\r\n        .then(() => {\r\n          console.log(\"task written succesfully\");\r\n          getProjectTasks(selectedProject);\r\n          alert.success(\"Task Successfully Added!\");\r\n          getAllProjectsTasks(selectCompany);\r\n        })\r\n        .catch((e) => {\r\n          console.error(e.message);\r\n          alert.success(\"Failed to Add Task!\");\r\n        });\r\n    }\r\n  }\r\n\r\n  //output: insert task in firestore and Success message and update selected project\r\n\r\n  //input: Task to be deleted\r\n  async function deleteTask(task) {\r\n    if (auth.currentUser) {\r\n      await db;\r\n      db.collection(\"Companies\")\r\n        .doc(\"\" + selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(\"\" + selectedProject.id)\r\n        .collection(\"Tasks\")\r\n        .doc(\"\" + task.taskName)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"task written succesfully\");\r\n          getProjectTasks(selectedProject);\r\n          getAllProjectsTasks(selectCompany);\r\n          alert.success(\"Task Successfully Deleted!\");\r\n        })\r\n        .catch((e) => {\r\n          console.error(e.message);\r\n          alert.error(\"Failed to Delete Task!\");\r\n        });\r\n    }\r\n  }\r\n  //output: delete task in firestore and Success message and update selected project\r\n\r\n  //input: selected project to get tasks\r\n  async function getProjectTasks(project) {\r\n    let items = [];\r\n    if (auth.currentUser && project) {\r\n      items = [];\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(project.id)\r\n        .collection(\"Tasks\")\r\n        .onSnapshot((querySnapshot) => {\r\n          querySnapshot.forEach((task) => {\r\n            items.push(task.data());\r\n          });\r\n          setSelectedProjectTasks(items);\r\n          items = [];\r\n        });\r\n\r\n      items = [];\r\n    }\r\n    setLoading(false);\r\n  }\r\n  //output: get all selected project tasks and update the selected project tasks state\r\n\r\n  //input: selected task new details\r\n  async function handleSubTaskChange(task) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Tasks\")\r\n        .doc(task.taskName)\r\n        .set(task)\r\n        .then(() => {\r\n          console.log(\"subtask succesfully edited\");\r\n          getProjectTasks(selectedProject);\r\n          alert.success(\"Task Successfully Updated!\");\r\n          getAllProjectsTasks(selectCompany);\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Task Failed to Update!\");\r\n        });\r\n    }\r\n  }\r\n  //output: update task details and subtasks progress in firestore and display msg\r\n\r\n  //input: selected task new details **FOR WORKER ROLE**\r\n  async function handleSubTaskChangeWorker(task, workers, selectedWorker) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Tasks\")\r\n        .doc(task.taskName)\r\n        .set(task)\r\n        .then(() => {\r\n          console.log(\"subtask succesfully edited\");\r\n          getProjectTasks(selectedProject);\r\n          alert.success(\"Task Successfully Updated!\");\r\n          getAllProjectsTasks(selectCompany);\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Task Failed to Update!\");\r\n        });\r\n      let lates = [];\r\n      let late = false;\r\n      task.subTasks.forEach((sub) => {\r\n        if (sub.late !== undefined) {\r\n          late = true;\r\n          lates.push(sub.name);\r\n        }\r\n      });\r\n\r\n      if (late) {\r\n        for (let i = 0; i < workers.length; i++) {\r\n          if (\r\n            workers[i].type === \"owner\" ||\r\n            workers[i].type === \"Administrator\"\r\n          ) {\r\n            createNotification(\r\n              workers[i].email,\r\n              \"Worker: \" +\r\n                selectedWorker.name +\r\n                \" Have Completed \" +\r\n                lates +\r\n                \" \" +\r\n                Math.floor(task.subTasks[0].late) +\r\n                \" Days Later Than Scheduled, in Project: \" +\r\n                selectedProject.projectName\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //output: update task details and subtasks progress in firestore and display msg **FOR WORKER ROLE**\r\n\r\n  //input: message from user\r\n  async function insertNoteToFirestore(msg) {\r\n    if (auth.currentUser) {\r\n      let date = format(new Date(), \"MMM-dd HH:m\");\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Notes\")\r\n        .doc()\r\n        .set({\r\n          msg: msg,\r\n          dateOfCreation: date,\r\n          creator: {\r\n            name: auth.currentUser.displayName,\r\n            uid: auth.currentUser.uid,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n          },\r\n        })\r\n        .then(() => {\r\n          alert.success(\"Successfully Added Note!\");\r\n        })\r\n        .catch((e) => {\r\n          console.error(e);\r\n          alert.error(\"Failed Adding Note!\");\r\n        });\r\n      getProjectNotes(selectedProject);\r\n    }\r\n  }\r\n  //output: insert new note and update the page to show new note\r\n\r\n  //input: note to be deleted\r\n  async function deleteNote(note) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Notes\")\r\n        .doc(note.id)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"note deleted succesfully\");\r\n          getProjectNotes(selectedProject);\r\n          alert.success(\"Successfully Deleted Note!\");\r\n        })\r\n        .catch((e) => {\r\n          console.error(e);\r\n          alert.error(\"Failed Deleting Note!\");\r\n        });\r\n    }\r\n  }\r\n  //output: delete the note and update the page to show updated notes\r\n\r\n  //input: selected project to get notes from\r\n  async function getProjectNotes(project) {\r\n    let items = [];\r\n    if (auth.currentUser && project) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(project.id)\r\n        .collection(\"Notes\")\r\n        .onSnapshot((querySnapshot) => {\r\n          querySnapshot.forEach((note) => {\r\n            let item = note.data();\r\n            item.id = note.id;\r\n            items.push(item);\r\n          });\r\n          setSelectedProjectNotes(items);\r\n          items = [];\r\n        });\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n  //output: save the notes of the project in state and display them\r\n\r\n  //input: product details **ONLY OWNER ROLE CAN INSERT**\r\n  async function insertProductToFirestore(\r\n    name,\r\n    price,\r\n    sellingPrice,\r\n    quantity,\r\n    unitsSold\r\n  ) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Inventory\")\r\n        .doc()\r\n        .set({\r\n          productName: name,\r\n          productPrice: price,\r\n          productSellingPrice: sellingPrice,\r\n          productQuantity: quantity,\r\n          productUnitsSold: unitsSold,\r\n        })\r\n        .then(() => {\r\n          alert.success(\"Successfully Added Product!\");\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Adding Product!\");\r\n        });\r\n      getProjectInventory(selectedProject);\r\n    }\r\n  }\r\n  //output: insert product to firestore and update the page to show new products and display success message\r\n\r\n  //input: proudct to be deleted **ONLY OWNER ROLE CAN DELETE**\r\n  async function deleteProduct(prod) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Inventory\")\r\n        .doc(prod.id)\r\n        .delete()\r\n        .then(() => {\r\n          alert.success(\"Successfully Deleted Product!\");\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Deleting Product!\");\r\n        });\r\n      getProjectInventory(selectedProject);\r\n    }\r\n  }\r\n  //output: delete product from firestore and update the page to show updated products and display success message\r\n\r\n  //input: proudct to be updated **ONLY OWNER ROLE CAN DELETE**\r\n  async function updateProduct(\r\n    prodId,\r\n    name,\r\n    quantity,\r\n    price,\r\n    sellingPrice,\r\n    units\r\n  ) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(selectedProject.id)\r\n        .collection(\"Inventory\")\r\n        .doc(prodId)\r\n        .set({\r\n          productName: name,\r\n          productPrice: price,\r\n          productSellingPrice: sellingPrice,\r\n          productQuantity: quantity,\r\n          productUnitsSold: units,\r\n        })\r\n        .then(() => {\r\n          alert.success(\"Successfully Updated Product!\");\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Updating Product!\");\r\n        });\r\n      getProjectInventory(selectedProject);\r\n    }\r\n  }\r\n  //output: update product in firestore and update the page to show updated products and display success message\r\n\r\n  //input: selected project to fetch inventory from firestore\r\n  async function getProjectInventory(project) {\r\n    let items = [];\r\n    if (auth.currentUser && project) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Projects\")\r\n        .doc(project.id)\r\n        .collection(\"Inventory\")\r\n        .onSnapshot((querySnapshot) => {\r\n          querySnapshot.forEach((note) => {\r\n            let item = note.data();\r\n            item.id = note.id;\r\n            items.push(item);\r\n          });\r\n          setSelectedProjectInventory(items);\r\n          items = [];\r\n        });\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n  //output: save inventory in state and display them in inventory tab of project\r\n\r\n  function sortInventory(temp) {\r\n    setSelectedProjectInventory(temp);\r\n  }\r\n\r\n  async function updateProfile(firstName, lastName) {\r\n    await auth.currentUser\r\n      .updateProfile({\r\n        displayName: firstName + \" \" + lastName,\r\n      })\r\n      .then(function () {\r\n        console.log(\"success\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"failed\");\r\n      });\r\n  }\r\n\r\n  async function insertDetailsToFirestore(\r\n    firstName,\r\n    lastName,\r\n    phone,\r\n    companyName\r\n  ) {\r\n    var details = {\r\n      email: \"\" + auth.currentUser.email,\r\n      firstName: \"\" + firstName,\r\n      lastName: \"\" + lastName,\r\n      phone: \"\" + phone,\r\n      companyName: companyName,\r\n      uid: \"\" + auth.currentUser.uid,\r\n      photoURL: auth.currentUser.photoURL,\r\n    };\r\n\r\n    await db\r\n      .collection(\"Users\")\r\n      .doc(\"\" + auth.currentUser.email)\r\n      .set(details)\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n\r\n    await insertCompanyToFirestore(companyName[0]);\r\n    await initialUpdateDetails();\r\n  }\r\n\r\n  async function initialUpdateDetails() {\r\n    setLoading(true);\r\n    await fetchUserDetails();\r\n    await getUserNotifications();\r\n    await initialGetCompanies();\r\n    await initialGetCompanyProjects();\r\n    await initialGetClients();\r\n    await initialGetAllProjectsTasks(selectCompany);\r\n    await updateDetails();\r\n\r\n    console.log(auth.currentUser);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function initialGetAllProjectsTasks(company) {\r\n    let companyProjects = [];\r\n\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies/\" + company.id + \"/Projects\")\r\n        .get()\r\n        .then((temp) => {\r\n          temp.forEach((doc) => {\r\n            let item = doc.data();\r\n            item.id = doc.id;\r\n            companyProjects.push(item);\r\n          });\r\n        });\r\n\r\n      for (let index = 0; index < companyProjects.length; index++) {\r\n        await db\r\n          .collection(\"Companies\")\r\n          .doc(company.id)\r\n          .collection(\"Projects\")\r\n          .doc(companyProjects[index].id)\r\n          .collection(\"Tasks\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let items = [];\r\n            let temp;\r\n            querySnapshot.forEach((task) => {\r\n              temp = task.data();\r\n              items.push({\r\n                assigned: temp.assigned,\r\n                complete: temp.complete,\r\n                endDate: temp.endDate,\r\n                startDate: temp.startDate,\r\n                subTasks: temp.subTasks,\r\n                taskDescripiton: temp.taskDescripiton,\r\n                title: temp.taskName,\r\n                color: colors[index],\r\n                belongsTo: companyProjects[index],\r\n              });\r\n            });\r\n            setAllCompanyTasks(items);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getAllProjectsTasks(company) {\r\n    let companyProjects = [];\r\n\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies/\" + company.id + \"/Projects\")\r\n        .get()\r\n        .then((temp) => {\r\n          temp.forEach((doc) => {\r\n            let item = doc.data();\r\n            item.id = doc.id;\r\n            companyProjects.push(item);\r\n          });\r\n        });\r\n\r\n      let items = [];\r\n      for (let index = 0; index < companyProjects.length; index++) {\r\n        await db\r\n          .collection(\"Companies\")\r\n          .doc(company.id)\r\n          .collection(\"Projects\")\r\n          .doc(companyProjects[index].id)\r\n          .collection(\"Tasks\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((task) => {\r\n              let temp = task.data();\r\n              items.push({\r\n                assigned: temp.assigned,\r\n                complete: temp.complete,\r\n                endDate: temp.endDate,\r\n                startDate: temp.startDate,\r\n                subTasks: temp.subTasks,\r\n                taskDescripiton: temp.taskDescripiton,\r\n                title: temp.taskName,\r\n                color: colors[index],\r\n                belongsTo: companyProjects[index],\r\n              });\r\n            });\r\n          });\r\n      }\r\n\r\n      setAllCompanyTasks(items);\r\n      setLoading(false);\r\n      items = [];\r\n    }\r\n  }\r\n\r\n  async function updateDetails() {\r\n    await fetchUserDetails;\r\n    await getCompanies();\r\n    await getCompanyProjects(selectCompany.id);\r\n    await getAllProjectsTasks(selectCompany);\r\n  }\r\n\r\n  async function insertCompanyToFirestore(companyName) {\r\n    setLoading(true);\r\n    var users = [\r\n      {\r\n        uid: auth.currentUser.uid,\r\n        name: auth.currentUser.displayName,\r\n        email: auth.currentUser.email,\r\n        type: \"owner\",\r\n        photoURL: auth.currentUser.photoURL,\r\n      },\r\n    ];\r\n\r\n    var projects = [];\r\n\r\n    var company = {\r\n      companyName: companyName,\r\n      users: users,\r\n      projects: projects,\r\n    };\r\n\r\n    await db\r\n      .collection(\"Companies\")\r\n      .doc()\r\n      .set(company)\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n\r\n    let items = [];\r\n\r\n    await db\r\n      .collection(\"Companies\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          doc.data().users.forEach((user) => {\r\n            if (\r\n              user.email === auth.currentUser.email &&\r\n              companyName === doc.data().companyName\r\n            ) {\r\n              var item = doc.data();\r\n              item.id = doc.id;\r\n              items.push(item);\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n    company.id = items[0].id;\r\n\r\n    await db\r\n      .collection(\"Companies/\")\r\n      .doc(items[0].id)\r\n      .set(company)\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n\r\n    setSelectedCompany(company);\r\n    items = [];\r\n  }\r\n\r\n  async function fetchUserDetails() {\r\n    var details = [];\r\n\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Users\")\r\n        .doc(\"\" + auth.currentUser.email)\r\n        .get()\r\n        .then((doc) => {\r\n          const data = doc.data();\r\n          if (data !== undefined) {\r\n            console.log(\"logged in succesfully with set\");\r\n            details = data;\r\n            console.log(details);\r\n            setUserDetails(details);\r\n            console.log(userDetails);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  async function checkUserExist() {\r\n    var exists = -1;\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Users\")\r\n        .doc(\"\" + auth.currentUser.email)\r\n        .get()\r\n        .then((doc) => {\r\n          const data = doc.data();\r\n          console.log(data);\r\n          if (data !== undefined) {\r\n            exists = 1;\r\n          } else {\r\n            exists = 0;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    return exists;\r\n  }\r\n\r\n  async function checkEmployeeExist(email) {\r\n    var exists = -1;\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Users\")\r\n        .doc(\"\" + email)\r\n        .get()\r\n        .then((doc) => {\r\n          const data = doc.data();\r\n          if (data !== undefined) {\r\n            exists = data;\r\n          } else {\r\n            exists = 0;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    return exists;\r\n  }\r\n\r\n  async function insertClientToFirestore(ClientName, ClientEmail) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies/\" + selectCompany.id + \"/Clients\")\r\n        .doc()\r\n        .set({\r\n          ClientName: ClientName,\r\n          ClientEmail: ClientEmail,\r\n        })\r\n        .then(() => {\r\n          alert.success(\"Successfully Added Client!\");\r\n          GetClients(selectCompany.id);\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Adding Client!\");\r\n        });\r\n    }\r\n  }\r\n\r\n  async function insertEmployeeToFirestore(\r\n    EmployeeName,\r\n    EmployeeEmail,\r\n    EmployeeType,\r\n    Projects\r\n  ) {\r\n    if (auth.currentUser) {\r\n      const exists = await checkEmployeeExist(EmployeeEmail);\r\n      console.log(exists);\r\n      if (exists === -1 || exists === 0) {\r\n        let temp = [];\r\n        Projects.forEach((project) => {\r\n          temp.push({ projectName: project.projectName, type: EmployeeType });\r\n        });\r\n        let comp = {};\r\n        let user = {\r\n          name: EmployeeName,\r\n          type: EmployeeType,\r\n          email: EmployeeEmail,\r\n          AssignedProjects: temp,\r\n        };\r\n        await db\r\n          .collection(\"Companies\")\r\n          .doc(selectCompany.id)\r\n          .get()\r\n          .then((response) => {\r\n            comp = response.data();\r\n            comp.users.push(user);\r\n            console.log(comp);\r\n            db.collection(\"Companies\")\r\n              .doc(selectCompany.id)\r\n              .set(comp)\r\n              .then(() => {\r\n                console.log(\"employee successfuly inserted\");\r\n                alert.success(\"Successfully Added Employee\");\r\n              });\r\n          });\r\n\r\n        GetEmployee(selectCompany.id);\r\n\r\n        Projects.forEach((project) => {\r\n          project.assigned.push(user);\r\n          db.collection(\"Companies\")\r\n            .doc(selectCompany.id)\r\n            .collection(\"Projects\")\r\n            .doc(project.id)\r\n            .set({\r\n              projectName: project.projectName,\r\n              companyName: project.companyName,\r\n              description: project.description,\r\n              uid: project.uid,\r\n              email: project.email,\r\n              id: project.id,\r\n              startDate: project.startDate,\r\n              endDate: project.endDate,\r\n              assigned: project.assigned,\r\n            });\r\n        });\r\n        setSelectedCompany(selectCompany);\r\n        let names = [];\r\n        Projects.forEach((project) => {\r\n          names.push(project.projectName);\r\n        });\r\n        let variables = {\r\n          msg:\r\n            \"Hello \" +\r\n            EmployeeName +\r\n            \", <br><br> You have been invited by \" +\r\n            currentUser.displayName +\r\n            \", to work at their company \" +\r\n            selectCompany.companyName +\r\n            \" as a/an \" +\r\n            EmployeeType +\r\n            \" for the following project/s: \" +\r\n            names +\r\n            \".<br><br>We have noticed that you do not have an account at EZB Development, to accept the invitation please go to the following link: http://localhost:3000/ and signup<br><br>Thank you.<br><br>**PLEASE DO NOT REPLY TO THIS EMAIL**\",\r\n          Name: \"EZB Development\",\r\n          Subject: \"Invitation to \" + selectCompany.companyName,\r\n          reciever: EmployeeEmail,\r\n        };\r\n        emailJS\r\n          .send(\r\n            \"Gmail\",\r\n            \"Development_email\",\r\n            variables,\r\n            \"user_Ufgqez1YDtVtHo6gPiYox\"\r\n          )\r\n          .then(\r\n            function (response) {\r\n              console.log(\"SUCCESS!\", response.status, response.text);\r\n            },\r\n            function (error) {\r\n              console.log(\"FAILED...\", error);\r\n            }\r\n          );\r\n      } else {\r\n        let temp = [];\r\n        Projects.forEach((project) => {\r\n          temp.push({ projectName: project.projectName, type: EmployeeType });\r\n        });\r\n        let comp = {};\r\n\r\n        let user = {\r\n          name: exists.firstName + \" \" + exists.lastName,\r\n          email: EmployeeEmail,\r\n          phone: exists.phone,\r\n          AssignedProjects: temp,\r\n          photoURL: exists.photoURL,\r\n        };\r\n\r\n        await db\r\n          .collection(\"Companies\")\r\n          .doc(selectCompany.id)\r\n          .get()\r\n          .then((response) => {\r\n            comp = response.data();\r\n            comp.users.push(user);\r\n            console.log(comp);\r\n            db.collection(\"Companies\")\r\n              .doc(selectCompany.id)\r\n              .set(comp)\r\n              .then(() => {\r\n                console.log(\"employee successfuly inserted\");\r\n                alert.success(\"Successfully Added Employee\");\r\n              });\r\n          });\r\n\r\n        GetEmployee(selectCompany.id);\r\n\r\n        let user1 = {\r\n          name: exists.firstName + \" \" + exists.lastName,\r\n          email: EmployeeEmail,\r\n          type: EmployeeType,\r\n          photoURL: exists.photoURL,\r\n        };\r\n        Projects.forEach((project) => {\r\n          project.assigned.push(user1);\r\n          db.collection(\"Companies\")\r\n            .doc(selectCompany.id)\r\n            .collection(\"Projects\")\r\n            .doc(project.id)\r\n            .set({\r\n              projectName: project.projectName,\r\n              companyName: project.companyName,\r\n              description: project.description,\r\n              uid: project.uid,\r\n              email: project.email,\r\n              id: project.id,\r\n              startDate: project.startDate,\r\n              endDate: project.endDate,\r\n              assigned: project.assigned,\r\n            });\r\n        });\r\n\r\n        setSelectedCompany(selectCompany);\r\n\r\n        let names = [];\r\n        Projects.forEach((project) => {\r\n          names.push(project.projectName);\r\n        });\r\n        createNotification(\r\n          EmployeeEmail,\r\n          currentUser.displayName +\r\n            \" Have added you to their company \" +\r\n            selectCompany.companyName +\r\n            \" as a \" +\r\n            EmployeeType +\r\n            \" at the following project/s: \" +\r\n            names\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async function deleteEmployee(email) {\r\n    if (auth.currentUser) {\r\n      const temp = selectedCompanyEmployee.filter(\r\n        (user) => user.email !== email\r\n      );\r\n      let comp = selectCompany;\r\n      comp.users = temp;\r\n      let tempProjects = [];\r\n      projects.forEach((project) => {\r\n        project.assigned = project.assigned.filter(\r\n          (user) => user.email !== email\r\n        );\r\n        tempProjects.push(project);\r\n      });\r\n\r\n      for (let i = 0; i < tempProjects.length; i++) {\r\n        let projectTasks = [];\r\n        let updatedTask;\r\n        await db\r\n          .collection(\"Companies\")\r\n          .doc(selectCompany.id)\r\n          .collection(\"Projects\")\r\n          .doc(tempProjects[i].id)\r\n          .collection(\"Tasks\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((task) => {\r\n              updatedTask = task.data();\r\n              updatedTask.subTasks.forEach((sub) => {\r\n                if (sub.assigned !== undefined) {\r\n                  if (sub.assigned.email === email) {\r\n                    console.log(\"deleted\");\r\n                    delete sub.assigned;\r\n                  }\r\n                }\r\n              });\r\n              projectTasks.push(updatedTask);\r\n            });\r\n\r\n            for (let j = 0; j < projectTasks.length; j++) {\r\n              db.collection(\"Companies\")\r\n                .doc(selectCompany.id)\r\n                .collection(\"Projects\")\r\n                .doc(tempProjects[i].id)\r\n                .collection(\"Tasks\")\r\n                .doc(projectTasks[j].taskName)\r\n                .set(projectTasks[j]);\r\n            }\r\n          });\r\n      }\r\n\r\n      console.log(tempProjects);\r\n      for (let i = 0; i < tempProjects.length; i++) {\r\n        await db\r\n          .collection(\"Companies\")\r\n          .doc(selectCompany.id)\r\n          .collection(\"Projects\")\r\n          .doc(tempProjects[i].id)\r\n          .set(tempProjects[i]);\r\n      }\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .set(comp)\r\n        .then(() => {\r\n          console.log(\"employee successfully deleted\");\r\n          alert.success(\"Successfully Deleted Employee!\");\r\n          GetEmployee(selectCompany.id);\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Deleting Employee!\");\r\n        });\r\n    }\r\n  }\r\n\r\n  async function updateClient(name, email, id) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Clients\")\r\n        .doc(id)\r\n        .set({\r\n          ClientEmail: email,\r\n          ClientName: name,\r\n          id: id,\r\n        })\r\n        .then(() => {\r\n          alert.success(\"Successfully Updated Client!\");\r\n          GetClients(selectCompany.id);\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Updating Client!\");\r\n        });\r\n    }\r\n  }\r\n\r\n  async function deleteClient(email) {\r\n    let temp;\r\n    selectedCompanyClients.forEach((client) => {\r\n      if (email === client.ClientEmail) {\r\n        temp = client;\r\n      }\r\n    });\r\n\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Companies/\" + selectCompany.id + \"/Clients\")\r\n        .doc(temp.id)\r\n        .delete()\r\n        .then(() => {\r\n          alert.success(\"Successfully Deleted Client!\");\r\n        })\r\n        .catch((e) => {\r\n          alert.error(\"Failed Deleting Client!\");\r\n        });\r\n      GetClients(selectCompany.id);\r\n    }\r\n  }\r\n\r\n  async function GetEmployee(id) {\r\n    let items = [];\r\n    if (auth.currentUser) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(id)\r\n        .onSnapshot((querySnapshot) => {\r\n          querySnapshot.data().users.forEach((user) => {\r\n            items.push(user);\r\n          });\r\n          setSelectedCompanyEmployee(items);\r\n          items = [];\r\n        });\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n\r\n  async function GetClients(id) {\r\n    let items = [];\r\n    if (auth.currentUser) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(id)\r\n        .collection(\"Clients\")\r\n\r\n        .onSnapshot((querySnapshot) => {\r\n          querySnapshot.forEach((note) => {\r\n            let item = note.data();\r\n            item.id = note.id;\r\n            items.push(item);\r\n          });\r\n          setSelectedCompanyClients(items);\r\n          items = [];\r\n        });\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n\r\n  async function initialGetClients() {\r\n    let items = [];\r\n    if (auth.currentUser) {\r\n      items = [];\r\n\r\n      await db\r\n        .collection(\"Companies\")\r\n        .doc(selectCompany.id)\r\n        .collection(\"Clients\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((note) => {\r\n            let item = note.data();\r\n            item.id = note.id;\r\n            items.push(item);\r\n          });\r\n          setSelectedCompanyClients(items);\r\n          items = [];\r\n        });\r\n      items = [];\r\n    }\r\n    items = [];\r\n  }\r\n\r\n  async function createNotification(email, message) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Users/\" + email + \"/Notifications\")\r\n        .doc()\r\n        .set({\r\n          message: message,\r\n          creationDate: format(new Date(), \"MMM-dd HH:m\"),\r\n          read: false,\r\n        })\r\n        .then(() => {\r\n          console.log(\"notification succesfully written\");\r\n        });\r\n    }\r\n  }\r\n\r\n  async function deleteNotification(noti) {\r\n    if (auth.currentUser) {\r\n      await db\r\n        .collection(\"Users\")\r\n        .doc(auth.currentUser.email)\r\n        .collection(\"Notifications\")\r\n        .doc(noti.id)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"notification successfully deleted\");\r\n          getUserNotifications();\r\n        });\r\n    }\r\n  }\r\n\r\n  async function getUserNotifications() {\r\n    if (auth.currentUser) {\r\n      let items = [];\r\n      await db\r\n        .collection(\"Users/\" + auth.currentUser.email + \"/Notifications\")\r\n        .onSnapshot((doc) => {\r\n          items = [];\r\n          doc.forEach((temp) => {\r\n            let item = temp.data();\r\n            item.id = temp.id;\r\n            items.push(item);\r\n          });\r\n\r\n          setUserNotifications(items.sort(sortTime));\r\n        });\r\n    }\r\n  }\r\n  function sortTime(a, b) {\r\n    if (new Date(a.creationDate).getTime() < new Date(b.creationDate).getTime())\r\n      return 1;\r\n    if (new Date(a.creationDate).getTime() > new Date(b.creationDate).getTime())\r\n      return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  async function setUserNotificationsRead(items) {\r\n    if (auth.currentUser) {\r\n      await items.forEach((not) => {\r\n        db.collection(\"Users/\" + auth.currentUser.email + \"/Notifications\")\r\n          .doc(not.id)\r\n          .set({\r\n            creationDate: not.creationDate,\r\n            message: not.message,\r\n            read: true,\r\n          });\r\n      });\r\n\r\n      getUserNotifications();\r\n    }\r\n  }\r\n\r\n  function authLogin() {\r\n    return auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {})\r\n      .catch((error) => {});\r\n  }\r\n\r\n  async function setSelectedProject1(project) {\r\n    setLoading(true);\r\n    localStorage.removeItem(\"selectedProject\");\r\n    localStorage.removeItem(\"selectedProjectTasks\");\r\n    localStorage.removeItem(\"selectedProjectNotes\");\r\n    await setSelectedProject(project);\r\n    getProjectTasks(project);\r\n    getProjectNotes(project);\r\n    getProjectInventory(project);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    authLogin,\r\n    auth,\r\n    checkUserExist,\r\n    updateProfile,\r\n    insertDetailsToFirestore,\r\n    insertProjectToFirestore,\r\n    getCompanyProjects,\r\n    projects,\r\n    selectedProject,\r\n    setSelectedProject1,\r\n    insertCompanyToFirestore,\r\n    fetchUserDetails,\r\n    userDetails,\r\n    companiesData,\r\n    selectCompany,\r\n    setSelectCompany,\r\n    setSelectedCompany,\r\n    updateDetails,\r\n    initialUpdateDetails,\r\n    createNotification,\r\n    userNotifications,\r\n    setUserNotificationsRead,\r\n    insertTaskToFirestore,\r\n    selectedProjectTasks,\r\n    handleSubTaskChange,\r\n    insertNoteToFirestore,\r\n    selectedProjectNotes,\r\n    insertClientToFirestore,\r\n    selectedCompanyClients,\r\n    selectedCompanyEmployee,\r\n    insertEmployeeToFirestore,\r\n    deleteEmployee,\r\n    deleteClient,\r\n    insertProductToFirestore,\r\n    getProjectInventory,\r\n    selectedProjectInventory,\r\n    sortInventory,\r\n    deleteProduct,\r\n    updateProduct,\r\n    deleteTask,\r\n    deleteNote,\r\n    allCompanyTasks,\r\n    updateProject,\r\n    deleteProject,\r\n    updateClient,\r\n    deleteNotification,\r\n    handleSubTaskChangeWorker,\r\n    setLoading,\r\n    getAllProjectsTasks,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children ? (\r\n        children\r\n      ) : (\r\n        <div style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }}>\r\n          <Loader\r\n            height={100}\r\n            width={100}\r\n            type=\"TailSpin\"\r\n            color=\"#F5A494\"\r\n            timeout={10000} //3 secs\r\n          />\r\n        </div>\r\n      )}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ezb3.f0c8eb7a.png\";","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport logo from \"../imgs/ezb3.png\";\r\n\r\nexport default function Signup() {\r\n  const firstNameref = useRef();\r\n  const lastNameref = useRef();\r\n  const mobileRef = useRef();\r\n  const companyRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const {\r\n    signup,\r\n    insertDetailsToFirestore,\r\n    updateProfile,\r\n    initialUpdateDetails,\r\n  } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match!\");\r\n    }\r\n    if (\r\n      passwordRef.current.value.length < 8 ||\r\n      passwordConfirmRef.current.value.length < 8\r\n    ) {\r\n      return setError(\"Password should at least be 8 characters long!\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      await updateProfile(\r\n        firstNameref.current.value,\r\n        lastNameref.current.value\r\n      );\r\n\r\n      var companies = [companyRef.current.value];\r\n      console.log(\"before insert\");\r\n      await insertDetailsToFirestore(\r\n        firstNameref.current.value,\r\n        lastNameref.current.value,\r\n        mobileRef.current.value,\r\n        companies\r\n      );\r\n      console.log(\"after fetch\");\r\n      console.log(\"before fetch\");\r\n      await initialUpdateDetails();\r\n      console.log(\"after fetch\");\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      setError(e.message);\r\n      console.log(e);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"main-shadow\">\r\n        <Card.Body>\r\n          <img\r\n            alt=\"\"\r\n            src={logo}\r\n            width=\"210vh\"\r\n            height=\"100%\"\r\n            className=\"center-img mb-4\"\r\n          />\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"fname\">\r\n              <Form.Label>First Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"Name\"\r\n                ref={firstNameref}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"lname\">\r\n              <Form.Label>Last Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"Name\"\r\n                ref={lastNameref}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email:</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"phone\">\r\n              <Form.Label>Mobile Phone:</Form.Label>\r\n              <Form.Control\r\n                type=\"phone\"\r\n                ref={mobileRef}\r\n                required\r\n                className=\"button-bg\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"company\">\r\n              <Form.Label>Company Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                ref={companyRef}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password:</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation:</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={loading}\r\n              type=\"submit\"\r\n              variant=\"light\"\r\n              className=\"w-100 button-bg mt-3\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <div className=\"w-100 text-center mt-2 mb-3\">\r\n          Already Have An Account?{\" \"}\r\n          <Link to=\"/login\" className=\"a-login\">\r\n            Log In\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport \"./styles/Login.css\";\r\nimport logo from \"../imgs/ezb3.png\";\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login, authLogin, checkUserExist, initialUpdateDetails } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function responseGoogle() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await authLogin();\r\n      var exists = await checkUserExist();\r\n\r\n      if (exists === 1) {\r\n        await initialUpdateDetails();\r\n        history.push(\"/\");\r\n      } else if (exists === 0) {\r\n        history.push(\"/complete-details\");\r\n      } else {\r\n      }\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      await initialUpdateDetails();\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to log in!\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"main-shadow\">\r\n        <Card.Body>\r\n          <img\r\n            alt=\"\"\r\n            src={logo}\r\n            width=\"210vh\"\r\n            height=\"100%\"\r\n            className=\"center-img mb-4\"\r\n          />\r\n          <h2 className=\"text-center mb-4\">Log In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                required\r\n                className=\"form-control button-bg\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              disabled={loading}\r\n              variant=\"light\"\r\n              type=\"submit\"\r\n              className=\"w-100 button-bg mt-3\"\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\" className=\"a-login\">\r\n              Forgot Password?\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <h5>Or</h5>\r\n          </div>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <GoogleButton\r\n              style={{ borderRadius: \"4px\" }}\r\n              className=\"w-100 text-center mt-2\"\r\n              onClick={responseGoogle}\r\n            ></GoogleButton>\r\n          </div>\r\n        </Card.Body>\r\n        <div className=\"w-100 text-center mt-2 mb-3 \">\r\n          Dont Have An Account?{\" \"}\r\n          <Link to=\"/signup\" className=\"a-login\">\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\nimport { useAuth } from \"../Context/AuthContext.js\";\r\n\r\nexport default function CompleteDetails() {\r\n  const mobileRef = useRef();\r\n  const companyRef = useRef();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { insertDetailsToFirestore } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      var name = auth.currentUser.displayName.split(\" \");\r\n\r\n      var companies = [companyRef.current.value];\r\n\r\n      insertDetailsToFirestore(\r\n        name[0],\r\n        name[1],\r\n        mobileRef.current.value,\r\n        companies\r\n      );\r\n      // await checkUserExist();\r\n      // await getCompanies();\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to submit Details!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fulls\">\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Complete Details</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"company\">\r\n              <Form.Label>Company Name:</Form.Label>\r\n              <Form.Control type=\"text\" ref={companyRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"phone\">\r\n              <Form.Label>Mobile Phone:</Form.Label>\r\n              <Form.Control\r\n                type=\"phone\"\r\n                ref={mobileRef}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n              Continue\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { RangeDatePicker } from \"react-google-flight-datepicker\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport { format } from \"date-fns\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopupProject() {\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const { insertProjectToFirestore } = useAuth();\r\n  const ProjectName = useRef();\r\n  const ProjectDescription = useRef();\r\n  const [error, setError] = useState(\"\");\r\n//adds the project to database\r\n  function handleSubmit() {\r\n    if (startDate === undefined || endDate === undefined) {\r\n      return setError(\"Please Enter Date!\");\r\n    }\r\n\r\n    insertProjectToFirestore(\r\n      ProjectName.current.value,\r\n      startDate,\r\n      endDate,\r\n      ProjectDescription.current.value\r\n    );\r\n\r\n    setError(\"\");\r\n  }\r\n//formatting dates\r\n  function onDateChange(startDate, endDate) {\r\n    if (startDate && endDate) {\r\n      console.log(startDate);\r\n      setStartDate(format(startDate, \"MMM-dd-yyyy\"));\r\n      setEndDate(format(endDate, \"MMM-dd-yyyy\"));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100\"\r\n          style={{ borderRadius: \"50%\", backgroundColor: \"#f0e9e9\" }}\r\n          height=\"100\"\r\n          fill=\"#F5A494\"\r\n          className=\"bi bi-plus svgOnClick\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n        </svg>\r\n      }\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Project</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form>\r\n              <Form.Group id=\"ProjectName\">\r\n                <Form.Label>Project Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ProjectName}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"ProjectDescription\">\r\n                <Form.Label>Project Description:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ProjectDescription}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"ProjectDate\">\r\n                <RangeDatePicker\r\n                  className=\"datePicker my-own-class-name w-100\"\r\n                  onChange={(startDate, endDate) =>\r\n                    onDateChange(startDate, endDate)\r\n                  }\r\n                  minDate={new Date(1900, 0, 1)}\r\n                  maxDate={new Date(2100, 0, 1)}\r\n                  dateFormat=\"DD MM YYYY\"\r\n                  monthFormat=\"MMM YYYY\"\r\n                  startDatePlaceholder=\"Start Date\"\r\n                  endDatePlaceholder=\"End Date\"\r\n                  disabled={false}\r\n                  startWeekDay=\"sunday\"\r\n                  highlightToday=\"true\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                  className=\"w-50  mt-3\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PopUp from \"./PopUpProject\";\r\nimport { Card, ProgressBar } from \"react-bootstrap\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport { Chart } from \"react-google-charts\";\r\nexport default function Dashboard() {\r\n  const {\r\n    projects,\r\n    setSelectedProject1,\r\n    selectCompany,\r\n    allCompanyTasks,\r\n    userDetails,\r\n  } = useAuth();\r\n  const history = useHistory();\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n  const componentRef = useRef();\r\n  const defaultSettings = [\r\n    { type: \"string\", label: \"Task ID\" },\r\n    { type: \"string\", label: \"Task Name\" },\r\n    { type: \"date\", label: \"Start Date\" },\r\n    { type: \"date\", label: \"End Date\" },\r\n    { type: \"number\", label: \"Duration\" },\r\n    { type: \"number\", label: \"Percent Complete\" },\r\n    { type: \"string\", label: \"Dependencies\" },\r\n  ];\r\n\r\n  let formattedData = [];\r\n  formattedData.push(defaultSettings);\r\n\r\n  if (projects !== undefined)\r\n    for (let index = 0; index < projects.length; index++) {\r\n      let projectData = [\r\n        \"\" + projects[index].projectName,\r\n        \"\" + projects[index].projectName,\r\n        new Date(projects[index].startDate),\r\n        new Date(projects[index].endDate),\r\n        null,\r\n        \"\" + calculateProgress(projects[index]),\r\n        null,\r\n      ];\r\n      formattedData.push(projectData);\r\n    }\r\n\r\n  useEffect(() => {\r\n    for (let index = 0; index < selectCompany.users.length; index++) {\r\n      if (selectCompany.users[index].email === userDetails.email) {\r\n        setCurrentUser(selectCompany.users[index]);\r\n      }\r\n    }\r\n  }, [selectCompany, currentUser, allCompanyTasks, userDetails.email]);\r\n\r\n  function isAssigned(project) {\r\n    let assigned = false;\r\n    for (let i = 0; i < project.assigned.length; i++) {\r\n      if (project.assigned[i].email === currentUser.email) {\r\n        assigned = true;\r\n      }\r\n    }\r\n    return assigned;\r\n  }\r\n\r\n  function viewDetails(project) {\r\n    setSelectedProject1(project);\r\n    history.push(\r\n      selectCompany.companyName + \"/projects/\" + project.projectName\r\n    );\r\n  }\r\n\r\n  function calculateDateLeft(prStartDate, prEndDate) {\r\n    // var startDate = new Date(prStartDate);\r\n    var endDate = new Date(prEndDate);\r\n    var currentDate = new Date();\r\n\r\n    return parseInt(\r\n      (endDate.getTime() - currentDate.getTime()) / (1000 * 3600 * 24)\r\n    );\r\n  }\r\n\r\n  function calculateProgress(project) {\r\n    let completeCounter = 0;\r\n    let taskCounter = 0;\r\n    for (let i = 0; i < allCompanyTasks.length; i++) {\r\n      if (allCompanyTasks[i].belongsTo.projectName === project.projectName) {\r\n        taskCounter++;\r\n        if (allCompanyTasks[i].complete) {\r\n          completeCounter++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return taskCounter > 0 ? (completeCounter / taskCounter) * 100 : 0;\r\n  }\r\n\r\n  function getDayPercentage(project) {\r\n    var startDate = new Date(project.startDate);\r\n    var endDate = new Date(project.endDate);\r\n    var currentDate = new Date();\r\n\r\n    let daysLeft = parseInt(\r\n      (currentDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24)\r\n    );\r\n    let totalDays = parseInt(\r\n      (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24)\r\n    );\r\n\r\n    return (daysLeft / totalDays) * 100;\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", textAlign: \"center\", padding: \"50px\" }}>\r\n      {projects.length > 0 ? (\r\n        <>\r\n          {currentUser.type !== undefined ? (\r\n            <>\r\n              {currentUser.type === \"owner\" ? (\r\n                <Carousel itemsToShow={4}>\r\n                  <Card\r\n                    className=\"main-shadow  m-3 text-center\"\r\n                    style={{ width: \"250px\", height: \"300px\" }}\r\n                  >\r\n                    <Card.Body>\r\n                      <h2>Add Project</h2>\r\n                      <div style={{ marginTop: \"25%\" }}>\r\n                        <PopUp>Details</PopUp>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                  {projects.map((project) => (\r\n                    <Card\r\n                      key={project.projectName}\r\n                      className=\"main-shadow  m-3 text-center\"\r\n                      style={{ width: \"250px\", height: \"300px\" }}\r\n                    >\r\n                      <Card.Body>\r\n                        <h2>{project.projectName}</h2>\r\n                        <h6 style={{ marginBottom: \"-10px\" }}>\r\n                          Completion Progress\r\n                        </h6>\r\n                        <ProgressBar\r\n                          variant={\"YOU_PICK_A_NAME\"}\r\n                          className=\"mt-3 mb-3\"\r\n                          now={calculateProgress(project)}\r\n                          label={\r\n                            calculateProgress(project) !== 100\r\n                              ? calculateProgress(project).toFixed(2) + \"%\"\r\n                              : calculateProgress(project) + \"%\"\r\n                          }\r\n                        ></ProgressBar>\r\n                        <h6 style={{ marginBottom: \"-10px\" }}>\r\n                          {calculateDateLeft(\r\n                            project.startDate,\r\n                            project.endDate\r\n                          ) > 0\r\n                            ? calculateDateLeft(\r\n                                project.startDate,\r\n                                project.endDate\r\n                              ) + \" Days Left\"\r\n                            : Math.abs(\r\n                                calculateDateLeft(\r\n                                  project.startDate,\r\n                                  project.endDate\r\n                                )\r\n                              ) + \" Days Behind\"}\r\n                        </h6>\r\n                        <ProgressBar\r\n                          variant={\"YOU_PICK_A_NAME\"}\r\n                          className=\"mt-3 mb-3\"\r\n                          style={{ marginBottom: \"100px\" }}\r\n                          now={getDayPercentage(project)}\r\n                          label={\r\n                            getDayPercentage(project) !== 100\r\n                              ? getDayPercentage(project).toFixed(2) + \"%\"\r\n                              : getDayPercentage(project) + \"%\"\r\n                          }\r\n                        ></ProgressBar>\r\n\r\n                        <h6 style={{ marginBottom: \"0\", marginTop: \"-8px\" }}>\r\n                          Started on\r\n                        </h6>\r\n                        <h5>{project.startDate}</h5>\r\n                        <Button onClick={() => viewDetails(project)}>\r\n                          Details\r\n                        </Button>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  ))}\r\n                </Carousel>\r\n              ) : (\r\n                <div style={{ display: \"none\" }}></div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <Carousel itemsToShow={4}>\r\n              {projects.map((project) => (\r\n                <Card\r\n                  key={project.projectName}\r\n                  className=\"main-shadow  m-3 text-center\"\r\n                  style={{ width: \"250px\", height: \"300px\" }}\r\n                >\r\n                  <Card.Body>\r\n                    <h2>{project.projectName}</h2>\r\n                    <h6 style={{ marginBottom: \"-10px\" }}>\r\n                      Completion Progress\r\n                    </h6>\r\n                    <ProgressBar\r\n                      variant={\"YOU_PICK_A_NAME\"}\r\n                      className=\"mt-3 mb-3\"\r\n                      now={calculateProgress(project)}\r\n                      label={\r\n                        calculateProgress(project) !== 100\r\n                          ? calculateProgress(project).toFixed(2) + \"%\"\r\n                          : calculateProgress(project) + \"%\"\r\n                      }\r\n                    ></ProgressBar>\r\n                    <h6 style={{ marginBottom: \"-10px\" }}>\r\n                      {calculateDateLeft(project.startDate, project.endDate) > 0\r\n                        ? calculateDateLeft(\r\n                            project.startDate,\r\n                            project.endDate\r\n                          ) + \" Days Left\"\r\n                        : Math.abs(\r\n                            calculateDateLeft(\r\n                              project.startDate,\r\n                              project.endDate\r\n                            )\r\n                          ) + \" Days Behind\"}\r\n                    </h6>\r\n                    <ProgressBar\r\n                      variant={\"YOU_PICK_A_NAME\"}\r\n                      className=\"mt-3 mb-3\"\r\n                      style={{ marginBottom: \"100px\" }}\r\n                      now={getDayPercentage(project)}\r\n                      label={\r\n                        getDayPercentage(project) !== 100\r\n                          ? getDayPercentage(project).toFixed(2) + \"%\"\r\n                          : getDayPercentage(project) + \"%\"\r\n                      }\r\n                    ></ProgressBar>\r\n\r\n                    <h6 style={{ marginBottom: \"0\", marginTop: \"-8px\" }}>\r\n                      Started on\r\n                    </h6>\r\n                    <h5>{project.startDate}</h5>\r\n                    {isAssigned(project) ? (\r\n                      <Button onClick={() => viewDetails(project)}>\r\n                        Details\r\n                      </Button>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n            </Carousel>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Carousel>\r\n          <Card\r\n            className=\"main-shadow  m-3 text-center\"\r\n            style={{ width: \"250px\", height: \"300px\" }}\r\n          >\r\n            <Card.Body>\r\n              <h2>Add Project</h2>\r\n              <PopUp></PopUp>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel>\r\n      )}\r\n      <div>\r\n        <div className=\"mr-3 mb-2\" style={{ textAlign: \"right\" }}>\r\n          {formattedData.length > 1 ? (\r\n            <Button onClick={() => exportComponentAsPNG(componentRef)}>\r\n              Export as Image\r\n            </Button>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        <h5>Gannt Chart of the projects</h5>\r\n        <div\r\n          ref={componentRef}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"52vh\",\r\n            overflow: \"auto\",\r\n            paddingRight: \"50px\",\r\n          }}\r\n        >\r\n          {formattedData.length > 1 ? (\r\n            <Chart\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              chartType=\"Gantt\"\r\n              loader={<div>Loading Chart</div>}\r\n              data={formattedData}\r\n              rootProps={{ \"data-testid\": \"1\" }}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <h5>You have no Projects to be Displayed in Gantt Chart</h5>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as reactBootstrap from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n// import { Dropdown } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./styles/NavBar.css\";\r\nimport logo from \"../imgs/ezb3.png\";\r\n\r\nfunction NavBar(props) {\r\n  // collapsed,\r\n  // rtl,\r\n  // image,\r\n  // handleToggleSidebar,\r\n\r\n  const handleCollapsedChange = props.handleCollapsedChange;\r\n  const {\r\n    currentUser,\r\n    companiesData,\r\n    selectCompany,\r\n    setSelectedCompany,\r\n    userNotifications,\r\n    setUserNotificationsRead,\r\n    logout,\r\n    deleteNotification,\r\n    getAllProjectsTasks,\r\n    setLoading,\r\n  } = useAuth();\r\n\r\n  function countNotification() {\r\n    let count = 0;\r\n    userNotifications.forEach((not) => {\r\n      if (not.read === false) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  function readNotifications() {\r\n    let items = [];\r\n    userNotifications.forEach((not) => {\r\n      not.read = true;\r\n      items.push(not);\r\n    });\r\n    setUserNotificationsRead(items);\r\n  }\r\n\r\n  function handleDeleteNotification(noti) {\r\n    deleteNotification(noti);\r\n  }\r\n\r\n  function handleLogout() {\r\n    logout();\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <reactBootstrap.Navbar\r\n      variant=\"light\"\r\n      className=\"bg-color text-center\"\r\n      style={{\r\n        height: \"6vh\",\r\n      }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"32\"\r\n        height=\"32\"\r\n        fill=\"currentColor\"\r\n        className=\"bi bi-list btn-toggle\"\r\n        viewBox=\"0 0 16 16\"\r\n        style={{\r\n          justifyContent: \"center\",\r\n          justifyItems: \"center\",\r\n        }}\r\n        onClick={handleCollapsedChange}\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\r\n        />\r\n      </svg>\r\n\r\n      <reactBootstrap.Navbar.Brand\r\n        href=\"/\"\r\n        style={{\r\n          justifyContent: \"center\",\r\n          justifyItems: \"center\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"100vh\"\r\n          height=\"100%\"\r\n          className=\"d-inline-block align-top ml-3\"\r\n        />\r\n      </reactBootstrap.Navbar.Brand>\r\n      <div\r\n        style={{\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          justifyContent: \"center\",\r\n          justifyItems: \"center\",\r\n        }}\r\n      >\r\n        <h2 style={{ display: \"flex\" }}>\r\n          {selectCompany !== undefined\r\n            ? selectCompany.companyName\r\n            : \"<<Loading>>\"}\r\n          {companiesData.length > 1 ? (\r\n            <div className=\"dropDown\">\r\n              <reactBootstrap.Dropdown\r\n                alignRight={true}\r\n                variant=\"menu\"\r\n                id=\"dropdown-menu-align-right\"\r\n                title=\"\"\r\n              >\r\n                <reactBootstrap.Dropdown.Toggle\r\n                  split\r\n                  variant=\"menu ml-2\"\r\n                  id=\"dropdown-custom-2\"\r\n                />\r\n\r\n                <reactBootstrap.Dropdown.Menu>\r\n                  {companiesData.map((company) => (\r\n                    <div key={company.companyName}>\r\n                      <reactBootstrap.Dropdown.Item\r\n                        as=\"button\"\r\n                        onSelect={() => {\r\n                          setLoading(true);\r\n                          localStorage.removeItem(\"selectedProject\");\r\n                          localStorage.removeItem(\"selectedProjectNotes\");\r\n                          localStorage.removeItem(\"selectedProjectTasks\");\r\n                          localStorage.removeItem(\"selectedCompanyEmployee\");\r\n                          localStorage.removeItem(\"selectedCompanyClients\");\r\n                          setSelectedCompany(company);\r\n                          getAllProjectsTasks(company);\r\n                          history.push(\"/\");\r\n                        }}\r\n                      >\r\n                        {company.companyName.length > 0 ? (\r\n                          <h6>{company.companyName}</h6>\r\n                        ) : (\r\n                          \"<<Loading>>\"\r\n                        )}\r\n                      </reactBootstrap.Dropdown.Item>\r\n                      <hr style={{ width: \"100%\", margin: \"0\" }} />\r\n                    </div>\r\n                  ))}\r\n                </reactBootstrap.Dropdown.Menu>\r\n              </reactBootstrap.Dropdown>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </h2>\r\n      </div>\r\n      <reactBootstrap.Dropdown\r\n        style={{ marginRight: \"10px\", marginLeft: \"auto\" }}\r\n        drop=\"left\"\r\n      >\r\n        <reactBootstrap.Dropdown.Toggle\r\n          variant=\"transperant\"\r\n          style={{ fontSize: \"0px\" }}\r\n          id=\"dropdown-basic\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"26\"\r\n            height=\"26\"\r\n            fillRule=\"currentColor\"\r\n            className=\"bi bi-bell\"\r\n            viewBox=\"0 0 16 16\"\r\n            onClick={() => readNotifications()}\r\n          >\r\n            <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zM8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6z\" />\r\n          </svg>\r\n          <div>\r\n            {countNotification() > 0 ? (\r\n              <h6\r\n                style={{\r\n                  background: \"red\",\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  right: \"0\",\r\n                  borderRadius: \"50%\",\r\n                  padding: \"2px\",\r\n                  color: \"white\",\r\n                  width: \"20px\",\r\n                  height: \"20px\",\r\n                }}\r\n              >\r\n                {countNotification()}\r\n              </h6>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </reactBootstrap.Dropdown.Toggle>\r\n\r\n        <reactBootstrap.Dropdown.Menu>\r\n          <reactBootstrap.Container fluid>\r\n            <div style={{ width: \"420px\", height: \"350px\", overflow: \"auto\" }}>\r\n              {userNotifications.length > 0 ? (\r\n                <div style={{ width: \"100%\" }}>\r\n                  {userNotifications.map((noti) => (\r\n                    <reactBootstrap.Row\r\n                      style={{ width: \"100%\", marginBottom: \"5px\" }}\r\n                      key={new Date(noti.creationDate).getTime()}\r\n                    >\r\n                      <reactBootstrap.Col md={11}>\r\n                        <h6 style={{ fontSize: \"15px\" }}>{noti.message}</h6>\r\n                      </reactBootstrap.Col>\r\n                      <reactBootstrap.Col md={1}>\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"18\"\r\n                          height=\"18\"\r\n                          fill=\"#F5A494\"\r\n                          className=\"bi bi-trash svgOnClick\"\r\n                          viewBox=\"0 0 16 16\"\r\n                          onClick={() => {\r\n                            handleDeleteNotification(noti);\r\n                          }}\r\n                        >\r\n                          <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                          <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                          />\r\n                        </svg>\r\n                      </reactBootstrap.Col>\r\n                      <hr\r\n                        style={{\r\n                          border: \"1px solid lightgray\",\r\n                          width: \"100%\",\r\n                          margin: \"0\",\r\n                        }}\r\n                      />\r\n                    </reactBootstrap.Row>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div>No Notifications...</div>\r\n              )}\r\n            </div>\r\n          </reactBootstrap.Container>\r\n        </reactBootstrap.Dropdown.Menu>\r\n      </reactBootstrap.Dropdown>\r\n\r\n      <div style={{ marginRight: \"-10px\" }}>\r\n        <reactBootstrap.Dropdown\r\n          style={{ marginRight: \"32px\", marginLeft: \"auto\" }}\r\n          drop=\"left\"\r\n        >\r\n          <reactBootstrap.Dropdown.Toggle\r\n            variant=\"transperant\"\r\n            style={{ fontSize: \"0px\" }}\r\n            id=\"dropdown-basic\"\r\n          >\r\n            {currentUser.photoURL ? (\r\n              <img\r\n                style={{ borderRadius: \"50%\", width: \"35px\" }}\r\n                src={currentUser.photoURL}\r\n                alt=\"Profile_Picture\"\r\n              ></img>\r\n            ) : (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"35\"\r\n                height=\"35\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-person-circle\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </reactBootstrap.Dropdown.Toggle>\r\n          <reactBootstrap.Dropdown.Menu>\r\n            <div>\r\n              <reactBootstrap.Dropdown.Item\r\n                onClick={() => history.push(\"/profile-details\")}\r\n                as=\"button\"\r\n              >\r\n                <h6>Details</h6>\r\n              </reactBootstrap.Dropdown.Item>\r\n              <reactBootstrap.Dropdown.Item\r\n                as=\"button\"\r\n                onClick={() => handleLogout()}\r\n              >\r\n                <h6>Logout</h6>\r\n              </reactBootstrap.Dropdown.Item>\r\n            </div>\r\n          </reactBootstrap.Dropdown.Menu>\r\n        </reactBootstrap.Dropdown>\r\n      </div>\r\n    </reactBootstrap.Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  // SubMenu,\r\n  //SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Aside = ({ collapsed, toggled, handleToggleSidebar }) => {\r\n  return (\r\n    <ProSidebar\r\n      collapsed={collapsed}\r\n      toggled={toggled}\r\n      breakPoint=\"md\"\r\n      onToggle={handleToggleSidebar}\r\n      width=\"240px\"\r\n      style={{ zIndex: \"1\" }}\r\n    >\r\n      {/* <SidebarHeader>\r\n        <div\r\n          style={{\r\n            padding: \"24px\",\r\n            textTransform: \"uppercase\",\r\n            fontWeight: \"bold\",\r\n            fontSize: 14,\r\n            letterSpacing: \"1px\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n          }}\r\n        ></div>\r\n      </SidebarHeader> */}\r\n\r\n      <SidebarContent>\r\n        <Menu iconShape=\"circle\">\r\n          <MenuItem\r\n            className=\"mb-3\"\r\n            style={{ fontSize: \"24px\" }}\r\n            icon={\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-house-door\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\" />\r\n              </svg>\r\n            }\r\n          >\r\n            Home\r\n            <Link to=\"/\" />\r\n          </MenuItem>\r\n          <MenuItem\r\n            className=\"mb-3\"\r\n            style={{ fontSize: \"24px\" }}\r\n            icon={\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-calendar-week\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-5 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z\" />\r\n                <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z\" />\r\n              </svg>\r\n            }\r\n          >\r\n            Calendar\r\n            <Link to=\"/calendar\" />\r\n          </MenuItem>\r\n          <MenuItem\r\n            className=\"mb-3\"\r\n            style={{ fontSize: \"24px\" }}\r\n            icon={\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-people\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8zm-7.978-1A.261.261 0 0 1 7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002a.274.274 0 0 1-.014.002H7.022zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0zM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816zM4.92 10A5.493 5.493 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275zM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\" />\r\n              </svg>\r\n            }\r\n          >\r\n            Contacts <Link to=\"/clients\" />\r\n          </MenuItem>\r\n          <MenuItem\r\n            style={{ fontSize: \"24px\" }}\r\n            className=\"mb-3\"\r\n            icon={\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-file-text\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1H5z\" />\r\n                <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z\" />\r\n              </svg>\r\n            }\r\n          >\r\n            Contracts <Link to=\"/contracts\" />\r\n          </MenuItem>\r\n        </Menu>\r\n        <Menu iconShape=\"circle\"></Menu>\r\n      </SidebarContent>\r\n\r\n      <SidebarFooter style={{ textAlign: \"center\" }}>\r\n        {/* <div\r\n          className=\"sidebar-btn-wrapper\"\r\n          style={{\r\n            padding: \"20px 24px\",\r\n          }}\r\n        >\r\n          <a\r\n            href=\"https://github.com/azouaoui-med/react-pro-sidebar\"\r\n            target=\"_blank\"\r\n            className=\"sidebar-btn\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaGithub />\r\n          </a>\r\n        </div> */}\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import { React, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport NavBar from \"./NavBar\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"./styles/SideBar.scss\";\r\nexport default function PrivateRouteLayout({ component: Component, ...rest }) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n  const { companyName } = useAuth();\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleCollapsedChange = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const handleToggleSidebar = (value) => {\r\n    setToggled(value);\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? (\r\n          <>\r\n            <NavBar\r\n              toggled={toggled}\r\n              collapsed={collapsed}\r\n              handleToggleSidebar={handleToggleSidebar}\r\n              handleCollapsedChange={handleCollapsedChange}\r\n              companyName={companyName + \"\"}\r\n            ></NavBar>\r\n\r\n            <div className=\"app\">\r\n              <div>\r\n                <SideBar\r\n                  collapsed={collapsed}\r\n                  toggled={toggled}\r\n                  handleToggleSidebar={handleToggleSidebar}\r\n                />\r\n              </div>\r\n              <div style={{ overflow: \"auto\", width: \"100%\" }}>\r\n                <Component {...props} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import { React } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Particles from \"react-tsparticles\";\r\nimport \"./styles/particles.css\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? (\r\n          <>\r\n            <div className=\"defaultParticles\">\r\n              {\" \"}\r\n              <Particles\r\n                id=\"tsparticles\"\r\n                options={{\r\n                  background: {\r\n                    color: {\r\n                      value: \"#ebe8e7\",\r\n                    },\r\n                  },\r\n                  fpsLimit: 60,\r\n                  interactivity: {\r\n                    detectsOn: \"canvas\",\r\n\r\n                    events: {\r\n                      onClick: {\r\n                        enable: true,\r\n                        mode: \"push\",\r\n                      },\r\n                      onHover: {\r\n                        enable: true,\r\n                        mode: \"repulse\",\r\n                      },\r\n                      resize: true,\r\n                    },\r\n                    modes: {\r\n                      bubble: {\r\n                        distance: 400,\r\n                        duration: 2,\r\n                        opacity: 0.8,\r\n                        size: 40,\r\n                      },\r\n                      push: {\r\n                        quantity: 4,\r\n                      },\r\n                      repulse: {\r\n                        distance: 150,\r\n                        duration: 0.4,\r\n                        speed: 0.1,\r\n                      },\r\n                    },\r\n                  },\r\n                  particles: {\r\n                    color: {\r\n                      value: \"#f7a392\",\r\n                    },\r\n                    links: {\r\n                      color: \"black\",\r\n                      distance: 150,\r\n                      enable: false,\r\n                      opacity: 0.5,\r\n                      width: 1,\r\n                    },\r\n                    collisions: {\r\n                      enable: true,\r\n                    },\r\n                    move: {\r\n                      direction: \"none\",\r\n                      enable: true,\r\n                      outMode: \"bounce\",\r\n                      random: false,\r\n                      speed: 1.5,\r\n                      straight: false,\r\n                    },\r\n                    number: {\r\n                      density: {\r\n                        enable: true,\r\n                        value_area: 800,\r\n                      },\r\n                      value: 80,\r\n                    },\r\n                    opacity: {\r\n                      value: 0.5,\r\n                    },\r\n                    shape: {\r\n                      type: \"circle\",\r\n                    },\r\n                    size: {\r\n                      random: true,\r\n                      value: 10,\r\n                    },\r\n                  },\r\n                  detectRetina: true,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <Container\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              style={{ minHeight: \"100vh\" }}\r\n            >\r\n              <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                <Component {...props} />\r\n              </div>\r\n            </Container>\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../imgs/ezb3.png\";\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check your inbox for further instructions\");\r\n    } catch {\r\n      setError(\"Failed To Reset Password!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"main-shadow\">\r\n        <Card.Body>\r\n          <img\r\n            alt=\"\"\r\n            src={logo}\r\n            width=\"210vh\"\r\n            height=\"100%\"\r\n            className=\"center-img mb-4\"\r\n          />\r\n          <h2 className=\"text-center mb-4\">Forgot Password</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                className=\"button-bg\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              disabled={loading}\r\n              type=\"submit\"\r\n              variant=\"light\"\r\n              className=\"w-100 button-bg mt-3\"\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/login\" className=\"a-login\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </Card.Body><div className=\"w-100 text-center mt-2 mb-3\">\r\n        Dont Have An Account?{\" \"}\r\n        <Link to=\"/signup\" className=\"a-login\">\r\n          Sign Up\r\n        </Link>\r\n      </div>\r\n      </Card>\r\n      \r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match!\");\r\n    }\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed To Update Account\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Particles from \"react-tsparticles\";\r\nimport \"./styles/particles.css\";\r\n\r\nexport default function PublicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return (\r\n          <>\r\n            <div className=\"defaultParticles\">\r\n              {\" \"}\r\n              <Particles\r\n                id=\"tsparticles\"\r\n                options={{\r\n                  background: {\r\n                    color: {\r\n                      value: \"#ebe8e7\",\r\n                    },\r\n                  },\r\n                  fpsLimit: 60,\r\n                  interactivity: {\r\n                    detectsOn: \"canvas\",\r\n\r\n                    events: {\r\n                      onClick: {\r\n                        enable: true,\r\n                        mode: \"push\",\r\n                      },\r\n                      onHover: {\r\n                        enable: true,\r\n                        mode: \"repulse\",\r\n                      },\r\n                      resize: true,\r\n                    },\r\n                    modes: {\r\n                      bubble: {\r\n                        distance: 400,\r\n                        duration: 2,\r\n                        opacity: 0.8,\r\n                        size: 40,\r\n                      },\r\n                      push: {\r\n                        quantity: 4,\r\n                      },\r\n                      repulse: {\r\n                        distance: 150,\r\n                        duration: 0.4,\r\n                        speed: 0.1\r\n                      },\r\n                    },\r\n                  },\r\n                  particles: {\r\n                    color: {\r\n                      value: \"#f7a392\",\r\n                    },\r\n                    links: {\r\n                      color: \"black\",\r\n                      distance: 150,\r\n                      enable: false,\r\n                      opacity: 0.5,\r\n                      width: 1,\r\n                    },\r\n                    collisions: {\r\n                      enable: true,\r\n                    },\r\n                    move: {\r\n                      direction: \"none\",\r\n                      enable: true,\r\n                      outMode: \"bounce\",\r\n                      random: false,\r\n                      speed: 1.5,\r\n                      straight: false,\r\n                    },\r\n                    number: {\r\n                      density: {\r\n                        enable: true,\r\n                        value_area: 800,\r\n                      },\r\n                      value: 80,\r\n                    },\r\n                    opacity: {\r\n                      value: 0.5,\r\n                    },\r\n                    shape: {\r\n                      type: \"circle\",\r\n                    },\r\n                    size: {\r\n                      random: true,\r\n                      value: 10,\r\n                    },\r\n                  },\r\n                  detectRetina: true,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <Container\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              style={{ minHeight: \"100vh\" }}\r\n            >\r\n              <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                <Component {...props} />\r\n              </div>\r\n            </Container>\r\n          </>\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"../styles/npv.css\";\r\nexport default function NPV() {\r\n  const Future = useRef();\r\n  const Discount = useRef();\r\n  const firstYear = useRef();\r\n  const secYear = useRef();\r\n  const thirdYear = useRef();\r\n  const forthYear = useRef();\r\n  const fifthYear = useRef();\r\n  const [NPV, setNpv] = useState(0);\r\n  const [Currency, setCurrency] = useState(\"$\");\r\n  function calculateNpv() {\r\n    var valArr = [\r\n      firstYear.current.value,\r\n      secYear.current.value,\r\n      thirdYear.current.value,\r\n      forthYear.current.value,\r\n      fifthYear.current.value,\r\n    ];\r\n    var npv = 0;\r\n\r\n    const disc = Discount.current.value / 100;\r\n    for (let index = 0; index < valArr.length; index++) {\r\n      if (valArr[index] > 0) {\r\n        npv += valArr[index] / Math.pow(disc + 1, index + 1);\r\n      }\r\n    }\r\n    npv = npv - Future.current.value;\r\n\r\n    setNpv(npv.toFixed(2));\r\n  }\r\n  useEffect(() => {}, [NPV]);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    calculateNpv();\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <div className=\"text-center\">\r\n        <Form className=\"form\" onSubmit={handleSubmit}>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Initial investment:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:200000000$\"\r\n              ref={Future}\r\n              required\r\n            />\r\n            <InputGroup.Prepend>\r\n              <Form.Control\r\n                style={{ marginLeft: \"10px\" }}\r\n                as=\"select\"\r\n                className=\"mr-sm-2\"\r\n                id=\"inlineFormCustomSelect\"\r\n                custom\r\n                onChange={(Event) => setCurrency(Event.target.value)}\r\n                required\r\n              >\r\n                <option value=\"Please select currency\">Currency</option>\r\n                <option value=\"SR\">SR</option>\r\n                <option value=\"£\">POUND</option>\r\n                <option value=\"$\">DOLLAR</option>\r\n                <option value=\"€\">EURO</option>\r\n              </Form.Control>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Discount Rate:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:20%\"\r\n              ref={Discount}\r\n              required\r\n            />\r\n            <InputGroup.Prepend className=\"mr-2\">\r\n              <InputGroup.Text>%</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n          <Form.Label>Cash Flow:</Form.Label>\r\n          {/* Years start------------------------------------------------ */}\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Year 1: {Currency}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:200000000\"\r\n              ref={firstYear}\r\n              required\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Year 2: {Currency}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:200000000\"\r\n              ref={secYear}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Year 3: {Currency}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:200000000\"\r\n              ref={thirdYear}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Year 4: {Currency}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:200000000\"\r\n              ref={forthYear}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Year 5: {Currency}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Ex:200000000\"\r\n              ref={fifthYear}\r\n            />\r\n          </InputGroup>\r\n          {/* Years Ends------------------------------------------------ */}\r\n          <div className=\"text-center mb-1\">\r\n            <Button\r\n              variant=\"light\"\r\n              className=\"w-50 button-bg mt-3\"\r\n              type=\"submit\"\r\n            >\r\n              Calculate\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div className=\"form text-center\" style={{ marginTop: \"23%\" }}>\r\n        <p  style={{border:'2px solid gray',background:'white',borderRadius:\"20px\"}}>NPV: {NPV + \" \" + Currency}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport React, { useRef } from \"react\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpProductDetails(props) {\r\n  const name = useRef();\r\n  const quantity = useRef();\r\n  const price = useRef();\r\n  const sellingPrice = useRef();\r\n  const units = useRef();\r\n  const { updateProduct } = useAuth();\r\n\r\n  function handleSubmit() {\r\n    updateProduct(\r\n      props.prod.id,\r\n      name.current.value,\r\n      quantity.current.value,\r\n      price.current.value,\r\n      sellingPrice.current.value,\r\n      units.current.value\r\n    );\r\n    props.handleSelect(\"Alphabetical\");\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button disabled={!props.checkOwner()}>Edit</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Note</h2>\r\n            {/* {error && <Alert variant=\"danger\">{error}</Alert>} */}\r\n            <Form>\r\n              <Form.Group id=\"Name\">\r\n                <Form.Label>Product Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  ref={name}\r\n                  defaultValue={props.prod.productName}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"Quantity\">\r\n                <Form.Label>Product Quantity:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  ref={quantity}\r\n                  defaultValue={props.prod.productQuantity}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"price\">\r\n                <Form.Label>Product Price:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  ref={price}\r\n                  defaultValue={props.prod.productPrice}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"sellingPrice\">\r\n                <Form.Label>Product Selling Price:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  ref={sellingPrice}\r\n                  defaultValue={props.prod.productSellingPrice}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"units\">\r\n                <Form.Label>Units Sold:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  ref={units}\r\n                  defaultValue={props.prod.productUnitsSold}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport React, { useRef } from \"react\";\r\n\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\n\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpProducts(props) {\r\n  const ProductName = useRef();\r\n  const ProductPrice = useRef();\r\n  const ProductSellingPrice = useRef();\r\n  const ProductQuantity = useRef();\r\n  const Productsold = useRef();\r\n\r\n  const { insertProductToFirestore } = useAuth();\r\n\r\n  function handleSubmit() {\r\n    const name = ProductName.current.value;\r\n    const price = ProductPrice.current.value;\r\n    const sellingP = ProductSellingPrice.current.value;\r\n    const quantity = ProductQuantity.current.value;\r\n    const sold = Productsold.current.value;\r\n\r\n    insertProductToFirestore(name, price, sellingP, quantity, sold);\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button disabled={!props.checkOwner()}> Add Product</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Product</h2>\r\n            {/* {error && <Alert variant=\"danger\">{error}</Alert>} */}\r\n            <Form>\r\n              <Form.Group id=\"ProductName\">\r\n                <Form.Label>Product Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ProductName}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"ProductPrice\">\r\n                <Form.Label>Product Price:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ProductPrice}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"ProductSPrice\">\r\n                <Form.Label>Product Selling Price:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ProductSellingPrice}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"ProductQuantity\">\r\n                <Form.Label>Product Quantity:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ProductQuantity}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"Productsold\">\r\n                <Form.Label>Units Sold:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={Productsold}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ButtonGroup,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\nimport PopUpProductDetails from \"../PopUpProductDetails.js\";\r\n\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport PopUpProducts from \"../PopUpProducts\";\r\nexport default function Inventory() {\r\n  const [Selected, setSelected] = useState(\"\");\r\n  const {\r\n    selectedProjectInventory,\r\n    sortInventory,\r\n    deleteProduct,\r\n    selectedProject,\r\n    userDetails,\r\n  } = useAuth();\r\n\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    for (let index = 0; index < selectedProject.assigned.length; index++) {\r\n      if (selectedProject.assigned[index].email === userDetails.email) {\r\n        setCurrentUser(selectedProject.assigned[index]);\r\n      }\r\n    }\r\n  }, [currentUser, userDetails.email, selectedProject.assigned]);\r\n\r\n  function checkOwner() {\r\n    let isOwner = false;\r\n    if (currentUser.type !== undefined) {\r\n      if (currentUser.type === \"owner\") {\r\n        isOwner = true;\r\n      }\r\n    }\r\n\r\n    return isOwner;\r\n  }\r\n\r\n  function handleDelete(prod) {\r\n    deleteProduct(prod);\r\n  }\r\n\r\n  function handleSelect(sort) {\r\n    setSelected(sort);\r\n    let temp = selectedProjectInventory;\r\n    switch (sort) {\r\n      case \"Best Selling\":\r\n        temp = temp.sort(sortBestSelling);\r\n        sortInventory(temp);\r\n        break;\r\n\r\n      case \"Alphabetical\":\r\n        temp = temp.sort(sortAlphabetical);\r\n        sortInventory(temp);\r\n        break;\r\n\r\n      case \"Highest Price\":\r\n        temp = temp.sort(sortHighestPrice);\r\n        sortInventory(temp);\r\n        break;\r\n\r\n      case \"Lowest Price\":\r\n        temp = temp.sort(sortLowestPrice);\r\n        sortInventory(temp);\r\n        break;\r\n\r\n      case \"Most Quantity\":\r\n        temp = temp.sort(sortMostQuantity);\r\n        sortInventory(temp);\r\n        break;\r\n\r\n      case \"Least Quantity\":\r\n        temp = temp.sort(sortLeastQuantity);\r\n        sortInventory(temp);\r\n        break;\r\n      case \"Highest Profit\":\r\n        temp = temp.sort(sortHighestProfit);\r\n        sortInventory(temp);\r\n        break;\r\n\r\n      default:\r\n        temp = temp.sort(sortAlphabetical);\r\n        sortInventory(temp);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function sortBestSelling(a, b) {\r\n    if (parseInt(a.productUnitsSold) < parseInt(b.productUnitsSold)) return 1;\r\n    if (parseInt(a.productUnitsSold) > parseInt(b.productUnitsSold)) return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  function sortAlphabetical(a, b) {\r\n    const bandA = a.productName.toUpperCase();\r\n    const bandB = b.productName.toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (bandA > bandB) {\r\n      comparison = 1;\r\n    } else if (bandA < bandB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  function sortHighestPrice(a, b) {\r\n    if (a.productPrice < b.productPrice) return 1;\r\n    if (a.productPrice > b.productPrice) return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  function sortLowestPrice(a, b) {\r\n    if (a.productPrice > b.productPrice) return 1;\r\n    if (a.productPrice < b.productPrice) return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  function sortMostQuantity(a, b) {\r\n    if (parseInt(a.productQuantity) < parseInt(b.productQuantity)) return 1;\r\n    if (parseInt(a.productQuantity) > parseInt(b.productQuantity)) return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  function sortLeastQuantity(a, b) {\r\n    if (parseInt(a.productQuantity) > parseInt(b.productQuantity)) return 1;\r\n    if (parseInt(a.productQuantity) < parseInt(b.productQuantity)) return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  function sortHighestProfit(a, b) {\r\n    if (\r\n      a.productSellingPrice * a.productUnitsSold <\r\n      b.productSellingPrice * b.productUnitsSold\r\n    )\r\n      return 1;\r\n    if (\r\n      a.productSellingPrice * a.productUnitsSold >\r\n      b.productSellingPrice * b.productUnitsSold\r\n    )\r\n      return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  useEffect(() => {}, [Selected]);\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"inline-flex\" }}>\r\n        <h4 className=\"ml-3\">Products</h4>\r\n        <div style={{ position: \"absolute\", right: \"50px\" }}>\r\n          <PopUpProducts checkOwner={checkOwner} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"text-center\">\r\n        <DropdownButton\r\n          as={ButtonGroup}\r\n          key=\"right\"\r\n          id={`dropdown-button-drop-right`}\r\n          drop=\"right\"\r\n          variant=\"secondary\"\r\n          title={`Sort ${Selected}`}\r\n        >\r\n          <Dropdown.Item\r\n            eventKey=\"1\"\r\n            onSelect={() => handleSelect(\"Alphabetical\")}\r\n          >\r\n            Alphabatical\r\n          </Dropdown.Item>\r\n\r\n          <Dropdown.Item\r\n            eventKey=\"2\"\r\n            onSelect={() => {\r\n              handleSelect(\"Best Selling\");\r\n            }}\r\n          >\r\n            Best Selling\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            eventKey=\"4\"\r\n            onSelect={() => {\r\n              handleSelect(\"Highest Price\");\r\n            }}\r\n          >\r\n            Highest Price\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            eventKey=\"5\"\r\n            onSelect={() => {\r\n              handleSelect(\"Lowest Price\");\r\n            }}\r\n          >\r\n            Lowest Price\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            eventKey=\"6\"\r\n            onSelect={() => {\r\n              handleSelect(\"Most Quantity\");\r\n            }}\r\n          >\r\n            Most Quantity\r\n          </Dropdown.Item>\r\n\r\n          <Dropdown.Item\r\n            eventKey=\"7\"\r\n            onSelect={() => {\r\n              handleSelect(\"Least Quantity\");\r\n            }}\r\n          >\r\n            Least Quantity\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            eventKey=\"8\"\r\n            onSelect={() => {\r\n              handleSelect(\"Highest Profit\");\r\n            }}\r\n          >\r\n            Highest Profit\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n\r\n        <Container fluid style={{ width: \"100%\", height: \"100%\" }}>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ overflow: \"auto\", height: \"900px\" }}\r\n          >\r\n            {selectedProjectInventory.length > 0 ? (\r\n              <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                  {selectedProjectInventory.map((prod) => (\r\n                    <div>\r\n                      <Card\r\n                        style={{\r\n                          width: \"250px\",\r\n                          height: \"350px\",\r\n                          margin: \"25px\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            right: \"-35px\",\r\n                            top: \"5px\",\r\n                            position: \"absolute\",\r\n                          }}\r\n                        >\r\n                          {checkOwner() ? (\r\n                            <Dropdown\r\n                              style={{\r\n                                marginRight: \"32px\",\r\n                                marginLeft: \"auto\",\r\n                              }}\r\n                              drop=\"down\"\r\n                            >\r\n                              <Dropdown.Toggle\r\n                                variant=\"transperant\"\r\n                                style={{ fontSize: \"0px\" }}\r\n                                id=\"dropdown-basic\"\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"20\"\r\n                                  height=\"20\"\r\n                                  fill=\"currentColor\"\r\n                                  className=\"bi bi-three-dots-vertical\"\r\n                                  viewBox=\"0 0 16 16\"\r\n                                >\r\n                                  <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n                                </svg>\r\n                              </Dropdown.Toggle>\r\n                              <Dropdown.Menu>\r\n                                <div>\r\n                                  <Dropdown.Item\r\n                                    as=\"button\"\r\n                                    onClick={() => {\r\n                                      handleDelete(prod);\r\n                                    }}\r\n                                  >\r\n                                    <h6>Delete Product</h6>\r\n                                  </Dropdown.Item>\r\n                                </div>\r\n                              </Dropdown.Menu>\r\n                            </Dropdown>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <h2>{prod.productName}</h2>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <h5>Quantity: {prod.productQuantity}</h5>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <h5>Price: ${prod.productPrice}</h5>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <h5>Selling Price: ${prod.productSellingPrice}</h5>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <h5>Units Sold: {prod.productUnitsSold}</h5>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <h5>\r\n                            Profit: $\r\n                            {prod.productUnitsSold * prod.productSellingPrice}\r\n                          </h5>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <PopUpProductDetails\r\n                            prod={prod}\r\n                            checkOwner={checkOwner}\r\n                            handleSelect={handleSelect}\r\n                          ></PopUpProductDetails>\r\n                        </div>\r\n                      </Card>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Alert,\r\n  Col,\r\n  Container,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { RangeDatePicker } from \"react-google-flight-datepicker\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport { format } from \"date-fns\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUptask() {\r\n  let [subtasklist, setSubtasklist] = useState([]);\r\n  const { insertTaskToFirestore, selectedProject } = useAuth();\r\n  let taskName = useRef();\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const taskDiscription = useRef();\r\n  let subTaskName = useState();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  function handleSubmit() {\r\n    if (startDate === undefined || endDate === undefined) {\r\n      return setError(\"Please Enter Date!\");\r\n    }\r\n    if (\r\n      new Date(startDate).getTime() <\r\n        new Date(selectedProject.startDate).getTime() ||\r\n      new Date(endDate).getTime() > new Date(selectedProject.endDate).getTime()\r\n    ) {\r\n      return setError(\r\n        <p>\r\n          Please Enter Correct Dates!\r\n          <br />\r\n          Note: Dates should be within Project period\r\n        </p>\r\n      );\r\n    }\r\n    insertTaskToFirestore(\r\n      taskName.current.value,\r\n      taskDiscription.current.value,\r\n      startDate,\r\n      endDate,\r\n      subtasklist\r\n    );\r\n    setSubtasklist([]);\r\n\r\n    setError(\"\");\r\n  }\r\n\r\n  function addItem() {\r\n    //checking the text field is not empty\r\n    if (subTaskName.value !== \"\") {\r\n      var joined = [];\r\n      if (subtasklist.length > 0) {\r\n        var found = -1;\r\n        for (let index = 0; index < subtasklist.length; index++) {\r\n          if (subTaskName.value === subtasklist[index].name) {\r\n            found = 1;\r\n          }\r\n        }\r\n        if (found === -1) {\r\n          joined = subtasklist.concat({\r\n            name: subTaskName.value,\r\n            complete: false,\r\n          });\r\n          setSubtasklist(joined);\r\n          subTaskName.value = \"\";\r\n        } else {\r\n          return setError(\"Duplicate SubTask Was Entered!\");\r\n        }\r\n      } else {\r\n        joined = subtasklist.concat({\r\n          name: subTaskName.value,\r\n          complete: false,\r\n        });\r\n\r\n        setSubtasklist(joined);\r\n        subTaskName.value = \"\";\r\n      }\r\n    }\r\n    setError(\"\");\r\n  }\r\n\r\n  function onDateChange(startDate, endDate) {\r\n    if (startDate && endDate) {\r\n      setStartDate(format(startDate, \"MMM-dd-yyyy\"));\r\n      setEndDate(format(endDate, \"MMM-dd-yyyy\"));\r\n    }\r\n  }\r\n\r\n  function handleRemove(task) {\r\n    const newList = subtasklist.filter((Task) => Task.name !== task);\r\n    setSubtasklist(newList);\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button> Add Task</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Task</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"taskName\">\r\n                <Form.Label>Task Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={taskName}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"taskDiscription\">\r\n                <Form.Label>Task Description:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={taskDiscription}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"ProjectDate\">\r\n                <RangeDatePicker\r\n                  className=\"datePickerTask\"\r\n                  onChange={(startDate, endDate) =>\r\n                    onDateChange(startDate, endDate)\r\n                  }\r\n                  minDate={new Date(1900, 0, 1)}\r\n                  maxDate={new Date(2100, 0, 1)}\r\n                  dateFormat=\"DD MM YYYY\"\r\n                  monthFormat=\"MMM YYYY\"\r\n                  startDatePlaceholder=\"Start Date\"\r\n                  endDatePlaceholder=\"End Date\"\r\n                  disabled={false}\r\n                  startWeekDay=\"sunday\"\r\n                  highlightToday=\"true\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Label style={{ display: \"unset\" }}>\r\n                SubTask name:\r\n              </Form.Label>\r\n              <Form.Group id=\"taskDiscription\" style={{ display: \"flex\" }}>\r\n                <Form.Control\r\n                  ref={(a) => (subTaskName = a)}\r\n                  placeholder=\"enter task\"\r\n                  className=\"form-control button-bg\"\r\n                  style={{ width: \"50%\" }}\r\n                />\r\n\r\n                <Button\r\n                  style={{ width: \"50%\" }}\r\n                  onClick={(e) => {\r\n                    addItem();\r\n                  }}\r\n                >\r\n                  Add SubTask\r\n                </Button>\r\n              </Form.Group>\r\n              <div style={{ height: \"150px\", overflow: \"auto\", width: \"100%\" }}>\r\n                {subtasklist.length > 0 ? (\r\n                  <Container fluid style={{ width: \"95%\" }}>\r\n                    {subtasklist.map((sub) => (\r\n                      <Row>\r\n                        <Col md={10}>{sub.name}</Col>\r\n                        <Col md={1}>\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"22\"\r\n                            height=\"22\"\r\n                            fill=\"#F5A494\"\r\n                            className=\"bi bi-trash svgOnClick\"\r\n                            viewBox=\"0 0 16 16\"\r\n                            onClick={() => handleRemove(sub.name)}\r\n                          >\r\n                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                            <path\r\n                              fill-rule=\"evenodd\"\r\n                              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                            />\r\n                          </svg>\r\n                        </Col>\r\n                      </Row>\r\n                    ))}\r\n                  </Container>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    setSubtasklist([]);\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport React, { useRef } from \"react\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpNote() {\r\n  const note = useRef();\r\n  const { insertNoteToFirestore } = useAuth();\r\n\r\n  function handleSubmit() {\r\n    insertNoteToFirestore(note.current.value);\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button> Add Note</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Note</h2>\r\n            {/* {error && <Alert variant=\"danger\">{error}</Alert>} */}\r\n            <Form>\r\n              <Form.Group id=\"Note\">\r\n                <Form.Label>Note:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  ref={note}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useAuth } from \"../Context/AuthContext.js\";\r\nexport default function LineChart() {\r\n  const {\r\n    selectedProjectTasks,\r\n    selectedProject,\r\n    userDetails,\r\n  } = useAuth();\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n  let dateList = [];\r\n  let finalData = [];\r\n\r\n  useEffect(() => {\r\n    for (let index = 0; index < selectedProject.assigned.length; index++) {\r\n      if (selectedProject.assigned[index].email === userDetails.email) {\r\n        setCurrentUser(selectedProject.assigned[index]);\r\n      }\r\n    }\r\n  }, [selectedProject.assigned, userDetails.email]);\r\n\r\n  if (currentUser.type === \"Worker\") {\r\n    //check if project has tasks\r\n    if (selectedProjectTasks.length > 0) {\r\n      selectedProjectTasks.forEach((task) => {\r\n        task.subTasks.forEach((sub) => {\r\n          //check if sub task is complete and add the completion date\r\n          if (sub.complete) {\r\n            if (sub.completionDate) {\r\n              dateList.push(new Date(sub.completionDate));\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      let formattedDateList = [];\r\n      //sort the dates from oldest to most recent\r\n      formattedDateList = dateList.slice().sort((a, b) => a - b);\r\n\r\n      //**FOR WORKER ROLE ONLY** Stricting the view of worker to only show their own performance without showing other people who are assigned in the project\r\n      let users = [currentUser.email];\r\n\r\n      //add the users to options index that is required by google charts api\r\n      let formattedData = [[\"x\"]];\r\n      users.forEach((user) => {\r\n        formattedData[0].push(user);\r\n      });\r\n\r\n      //create empty two dimensional arrays with same length of users array and date array\r\n      let createArray = (r, c) => [...Array(r)].map((x) => Array(c).fill(0));\r\n      let tempData = createArray(formattedDateList.length, users.length);\r\n      finalData = createArray(formattedDateList.length + 1, users.length);\r\n\r\n      //looping through the dates of subtasks completion\r\n      for (let i = 0; i < formattedDateList.length; i++) {\r\n        let counter = 0;\r\n        //looping through the users **IN THIS CASE ONLY 1 USER EXISTS WHICH IS THE WORKER**\r\n        for (let j = 0; j < users.length; j++) {\r\n          counter = 0;\r\n          //loop through all tasks and their subtasks \"nested loops\"\r\n          for (let k = 0; k < selectedProjectTasks.length; k++) {\r\n            for (let l = 0; l < selectedProjectTasks[k].subTasks.length; l++) {\r\n              //check if subtask is complete\r\n              if (selectedProjectTasks[k].subTasks[l].complete) {\r\n                //check if the last modified is the same as the user of j in the users array\r\n                if (\r\n                  selectedProjectTasks[k].subTasks[l].lastModified.email ===\r\n                  users[j]\r\n                ) {\r\n                  //only for reinsurance that the sub task is completed\r\n                  //\"completed sub task will have a completion date, otherwise the date will be removed\"\r\n                  if (\r\n                    selectedProjectTasks[k].subTasks[l].completionDate !== null\r\n                  ) {\r\n                    //checking if the completion date equals the date we formatted earlier\r\n                    if (\r\n                      new Date(\r\n                        selectedProjectTasks[k].subTasks[l].completionDate\r\n                      ).getTime() === formattedDateList[i].getTime()\r\n                    ) {\r\n                      //if all conditions are true we will increse the counter of user progress\r\n                      counter++;\r\n                    } else {\r\n                    }\r\n                  }\r\n                } else {\r\n                }\r\n              } else {\r\n                break;\r\n              }\r\n            }\r\n\r\n            // inserting the formatted performance and date of each user to be used in google charts api\r\n            tempData[i][j] = counter;\r\n          }\r\n        }\r\n      }\r\n      //copying the options parameters into the final data array\r\n      finalData[0][0] = formattedData[0][0];\r\n      //copying the user email from users array into the options parameter\r\n      for (let i = 0; i < users.length; i++) {\r\n        finalData[0][i + 1] = formattedData[0][i + 1];\r\n      }\r\n\r\n      // copying completion date and progress of each user into the final data\r\n      //note: each date has a specific index with all users performance\r\n      for (let j = 0; j < users.length; j++) {\r\n        for (let i = 0; i < formattedDateList.length; i++) {\r\n          finalData[i + 1][0] = formattedDateList[i];\r\n          finalData[i + 1][j + 1] = tempData[i][j];\r\n        }\r\n      }\r\n    } else {\r\n      //if project has no tasks we display no tasks\r\n      finalData = [\r\n        [\"x\", \"No Tasks\"],\r\n        [new Date(), 0],\r\n      ];\r\n    }\r\n  } else {\r\n    //this else is for the other roles (Owner, and administrator)\r\n    //the only difference here that we are taking into consideration all users\r\n    //since the owner or admin have the authority to see all workers progress\r\n    \r\n    if (selectedProjectTasks.length > 0) {\r\n      selectedProjectTasks.forEach((task) => {\r\n        task.subTasks.forEach((sub) => {\r\n          if (sub.complete) {\r\n            if (sub.completionDate) {\r\n              dateList.push(new Date(sub.completionDate));\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      let formattedDateList = [];\r\n\r\n      formattedDateList = dateList.slice().sort((a, b) => a - b);\r\n\r\n      //here we are taking all the users who are assigned in the project\r\n      //instead of taking only 1 user which was the worker\r\n      let users = [];\r\n      selectedProject.assigned.forEach((user) => {\r\n        users.push(user.email);\r\n      });\r\n\r\n      let formattedData = [[\"x\"]];\r\n      users.forEach((user) => {\r\n        formattedData[0].push(user);\r\n      });\r\n\r\n      let test = (r, c) => [...Array(r)].map((x) => Array(c).fill(0));\r\n      let tempData = test(formattedDateList.length, users.length);\r\n      finalData = test(formattedDateList.length + 1, users.length);\r\n\r\n      for (let i = 0; i < formattedDateList.length; i++) {\r\n        let counter = 0;\r\n        for (let j = 0; j < users.length; j++) {\r\n          counter = 0;\r\n          for (let k = 0; k < selectedProjectTasks.length; k++) {\r\n            for (let l = 0; l < selectedProjectTasks[k].subTasks.length; l++) {\r\n              if (selectedProjectTasks[k].subTasks[l].complete) {\r\n                if (\r\n                  selectedProjectTasks[k].subTasks[l].lastModified.email ===\r\n                  users[j]\r\n                ) {\r\n                  if (\r\n                    selectedProjectTasks[k].subTasks[l].completionDate !== null\r\n                  ) {\r\n                    if (\r\n                      new Date(\r\n                        selectedProjectTasks[k].subTasks[l].completionDate\r\n                      ).getTime() === formattedDateList[i].getTime()\r\n                    ) {\r\n                      counter++;\r\n                    } else {\r\n                    }\r\n                  }\r\n                } else {\r\n                }\r\n              } else {\r\n                break;\r\n              }\r\n            }\r\n\r\n            tempData[i][j] = counter;\r\n          }\r\n        }\r\n      }\r\n      finalData[0][0] = formattedData[0][0];\r\n      for (let i = 0; i < users.length; i++) {\r\n        finalData[0][i + 1] = formattedData[0][i + 1];\r\n      }\r\n      for (let j = 0; j < users.length; j++) {\r\n        for (let i = 0; i < formattedDateList.length; i++) {\r\n          finalData[i + 1][0] = formattedDateList[i];\r\n          finalData[i + 1][j + 1] = tempData[i][j];\r\n        }\r\n      }\r\n    } else {\r\n      finalData = [\r\n        [\"x\", \"No Tasks\"],\r\n        [new Date(), 0],\r\n      ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Chart\r\n      width={\"99%\"}\r\n      height={\"400px\"}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={finalData}\r\n      options={{\r\n        hAxis: {\r\n          title: \"Time\",\r\n        },\r\n        vAxis: {\r\n          title: \"Tasks\",\r\n        },\r\n        series: {},\r\n      }}\r\n      rootProps={{ \"data-testid\": \"2\" }}\r\n    />\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Alert,\r\n  Dropdown,\r\n  DropdownButton,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpAssign(props) {\r\n  const [error, setError] = useState(\"\");\r\n  const [selected, setSelected] = useState();\r\n  const {\r\n    selectCompany,\r\n    selectedProject,\r\n    updateProject,\r\n    createNotification,\r\n  } = useAuth();\r\n  let [userList] = useState([]);\r\n  let found = false;\r\n  let [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < selectCompany.users.length; i++) {\r\n      console.log(selectCompany.users.length);\r\n      for (let j = 0; j < selectedProject.assigned.length; j++) {\r\n        if (\r\n          selectCompany.users[i].email === selectedProject.assigned[j].email\r\n        ) {\r\n          found = true;\r\n          break;\r\n        } else {\r\n        }\r\n      }\r\n      if (!found) {\r\n        userList.push(selectCompany.users[i]);\r\n      }\r\n      found = false;\r\n    }\r\n  }, []);\r\n\r\n  function updateUserType(user, type) {\r\n    let temp = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      temp.push(users[i]);\r\n    }\r\n    for (let i = 0; i < temp.length; i++) {\r\n      if (temp[i].email === user.email) {\r\n        temp[i].type = type;\r\n      }\r\n    }\r\n    setUsers(temp);\r\n    setError(\"\");\r\n  }\r\n\r\n  function addItem() {\r\n    if (selected !== null) {\r\n      var joined = [];\r\n      if (users.length > 0) {\r\n        var found = -1;\r\n        for (let index = 0; index < users.length; index++) {\r\n          if (selected.email === users[index].email) {\r\n            found = 1;\r\n          }\r\n        }\r\n        if (found === -1) {\r\n          joined = users.concat(selected);\r\n          setUsers(joined);\r\n        } else {\r\n          return setError(\"Duplicate Employee Was Entered!\");\r\n        }\r\n      } else {\r\n        joined = users.concat(selected);\r\n\r\n        setUsers(joined);\r\n      }\r\n    }\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleRemove(temp) {\r\n    const newList = users.filter((temp2) => temp2.email !== temp.email);\r\n\r\n    setUsers(newList);\r\n  }\r\n\r\n  function handleSelect(user) {\r\n    setSelected(user);\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleSubmit() {\r\n    let temp = {\r\n      companyName: selectedProject.companyName,\r\n      description: selectedProject.description,\r\n      email: selectedProject.email,\r\n      endDate: selectedProject.endDate,\r\n      startDate: selectedProject.startDate,\r\n      id: selectedProject.id,\r\n      projectName: selectedProject.projectName,\r\n      uid: selectedProject.uid,\r\n      assigned: selectedProject.assigned,\r\n    };\r\n\r\n    for (let i = 0; i < users.length; i++) {\r\n      temp.assigned.push(users[i]);\r\n    }\r\n\r\n    updateProject(temp);\r\n\r\n    for (let i = 0; i < users.length; i++) {\r\n      createNotification(\r\n        users[i].email,\r\n        \"You Have Been Added To Project \" +\r\n          selectedProject.projectName +\r\n          \" As a \" +\r\n          users[i].type +\r\n          \" In Company \" +\r\n          selectCompany.companyName +\r\n          \".\"\r\n      );\r\n    }\r\n\r\n    setError(\"\");\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button>Add Worker</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n      contentStyle={{ marginTop: \"10%\" }}\r\n    >\r\n      {(close) => (\r\n        <Card\r\n          className=\"main-shadow\"\r\n          style={{ width: \"500px\", height: \"600px\" }}\r\n        >\r\n          <Card.Body>\r\n            <div\r\n              style={{\r\n                right: \"10px\",\r\n                top: \"10px\",\r\n                position: \"absolute\",\r\n              }}\r\n            ></div>\r\n            <div>\r\n              <h2 className=\"text-center mb-4\">{} Add Worker</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form>\r\n                <Form.Group style={{ display: \"inline-flex\", width: \"100%\" }}>\r\n                  <DropdownButton\r\n                    as={ButtonGroup}\r\n                    key=\"right\"\r\n                    id={`dropdown-button-drop-right`}\r\n                    drop=\"right\"\r\n                    style={{ width: \"50%\", margin: \"20px\" }}\r\n                    title={\r\n                      selected !== undefined\r\n                        ? selected.name\r\n                        : \"Select an Employee\"\r\n                    }\r\n                  >\r\n                    {userList.length > 0 ? (\r\n                      <div>\r\n                        {userList.map((temp) => (\r\n                          <Dropdown.Item\r\n                            onSelect={() => {\r\n                              handleSelect(temp);\r\n                            }}\r\n                          >\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div style={{ width: \"90%\" }}>{temp.name}</div>\r\n                            </div>\r\n                          </Dropdown.Item>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </DropdownButton>\r\n\r\n                  <Button\r\n                    style={{ width: \"50%\", margin: \"20px\" }}\r\n                    onClick={(e) => {\r\n                      addItem();\r\n                    }}\r\n                  >\r\n                    Assign Worker\r\n                  </Button>\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col>\r\n                    <Container\r\n                      fluid\r\n                      style={{\r\n                        height: \"200px\",\r\n                        overflow: \"auto\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {users.length > 0 ? (\r\n                        <div>\r\n                          {users.map((user) => (\r\n                            <Row style={{ margin: \"10px 0 10px 0\" }}>\r\n                              <Col>{user.name}</Col>\r\n                              <Col>\r\n                                <DropdownButton\r\n                                  as={ButtonGroup}\r\n                                  key=\"right\"\r\n                                  id={`dropdown-button-drop-right`}\r\n                                  drop=\"right\"\r\n                                  title={\r\n                                    user.type !== undefined\r\n                                      ? user.type\r\n                                      : \"Select Role\"\r\n                                  }\r\n                                >\r\n                                  {props.currentUser.type === \"owner\" ? (\r\n                                    <div>\r\n                                      <Dropdown.Item\r\n                                        onSelect={() => {\r\n                                          user.type = \"Administrator\";\r\n                                          updateUserType(user, \"Administrator\");\r\n                                        }}\r\n                                      >\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                          <div style={{ width: \"90%\" }}>\r\n                                            {\"Administrator\"}\r\n                                          </div>\r\n                                        </div>\r\n                                      </Dropdown.Item>\r\n                                      <Dropdown.Item\r\n                                        onSelect={() => {\r\n                                          user.type = \"Worker\";\r\n                                          updateUserType(user, \"Worker\");\r\n                                        }}\r\n                                      >\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                          <div style={{ width: \"90%\" }}>\r\n                                            {\"Worker\"}\r\n                                          </div>\r\n                                        </div>\r\n                                      </Dropdown.Item>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div>\r\n                                      <Dropdown.Item\r\n                                        onSelect={() => {\r\n                                          user.type = \"Worker\";\r\n                                          updateUserType(user, \"Worker\");\r\n                                        }}\r\n                                      >\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                          <div style={{ width: \"90%\" }}>\r\n                                            {\"Worker\"}\r\n                                          </div>\r\n                                        </div>\r\n                                      </Dropdown.Item>\r\n                                    </div>\r\n                                  )}\r\n                                </DropdownButton>\r\n                              </Col>\r\n                              <Col>\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"22\"\r\n                                  height=\"22\"\r\n                                  fill=\"#F5A494\"\r\n                                  className=\"bi bi-trash svgOnClick\"\r\n                                  onClick={() => {\r\n                                    handleRemove(user);\r\n                                  }}\r\n                                  viewBox=\"0 0 16 16\"\r\n                                >\r\n                                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                  <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                                  />\r\n                                </svg>\r\n                              </Col>\r\n                            </Row>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n                    </Container>\r\n                  </Col>\r\n                  <Col md={12} style={{ marginTop: \"15px\" }}>\r\n                    <div className=\"text-center\">\r\n                      <Button\r\n                        className=\"w-50  mt-3\"\r\n                        onClick={() => {\r\n                          if (users.length === 0) {\r\n                            setError(\"Please Select An Employee To Assign\");\r\n                          } else {\r\n                            let found = false;\r\n                            for (let i = 0; i < users.length; i++) {\r\n                              if (users[i].type === undefined) {\r\n                                found = true;\r\n                              }\r\n                            }\r\n\r\n                            if (found) {\r\n                              setError(\"Please Assign a Role to All Employees\");\r\n                            } else {\r\n                              handleSubmit();\r\n                              close();\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <div className=\"text-center\">\r\n                      <Button\r\n                        className=\"w-50  mt-3\"\r\n                        onClick={() => {\r\n                          close();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { auth } from \"../firebase.js\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Alert,\r\n  Dropdown,\r\n  Tooltip,\r\n  OverlayTrigger,\r\n  DropdownButton,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport { format } from \"date-fns\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpTaskDetails(props) {\r\n  const task = props.task;\r\n  const [updated, setUpdated] = useState(false);\r\n  let [taskCopy, setTaskCopy] = useState(task);\r\n  let [subtasklist, setSubtasklist] = useState(task.subTasks);\r\n  let subTaskName = useState();\r\n  const { deleteTask, selectedProject } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [taskCopyFinal, setTaskCopyFinal] = useState(taskCopy);\r\n  const handleSubTaskChange = props.handleSubTaskChange;\r\n\r\n  function handleClick(sub) {\r\n    let check = true;\r\n    let items = [];\r\n    if (taskCopy.subTasks.length > 0) {\r\n      taskCopy.subTasks.forEach((temp) => {\r\n        if (sub.name === temp.name) {\r\n          temp.complete = !sub.complete;\r\n          temp.lastModified = {\r\n            name: auth.currentUser.displayName,\r\n            uid: auth.currentUser.uid,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n          };\r\n          if (sub.complete) {\r\n            temp.completionDate = format(new Date(), \"MMM-dd-yyyy HH:mm\");\r\n          } else {\r\n            temp.completionDate = null;\r\n          }\r\n          items.push(temp);\r\n        } else {\r\n          items.push(temp);\r\n        }\r\n      });\r\n    }\r\n    if (taskCopy.subTasks.length > 0) {\r\n      taskCopy.subTasks.forEach((item) => {\r\n        if (item.complete) {\r\n        } else {\r\n          check = false;\r\n        }\r\n      });\r\n      taskCopy.complete = check;\r\n      setSubtasklist(items);\r\n      taskCopy.subTasks = subtasklist;\r\n      setUpdated(true);\r\n      setTaskCopyFinal(taskCopy);\r\n    }\r\n    setError(\"\");\r\n  }\r\n\r\n  function checkComplete() {\r\n    let check = true;\r\n    if (taskCopy.subTasks.length > 0) {\r\n      taskCopy.subTasks.forEach((item) => {\r\n        if (item.complete) {\r\n        } else {\r\n          check = false;\r\n        }\r\n      });\r\n      taskCopy.complete = check;\r\n      setUpdated(true);\r\n      setTaskCopyFinal(taskCopy);\r\n    }\r\n  }\r\n\r\n  function addItem() {\r\n    if (subTaskName.value !== \"\") {\r\n      var joined = [];\r\n      if (subtasklist.length > 0) {\r\n        var found = -1;\r\n        for (let index = 0; index < subtasklist.length; index++) {\r\n          if (subTaskName.value === subtasklist[index].name) {\r\n            found = 1;\r\n          }\r\n        }\r\n        if (found === -1) {\r\n          joined = subtasklist.concat({\r\n            name: subTaskName.value,\r\n            complete: false,\r\n          });\r\n          setSubtasklist(joined);\r\n          taskCopy.subTasks = joined;\r\n          setUpdated(true);\r\n          setTaskCopyFinal(taskCopy);\r\n          checkComplete();\r\n          subTaskName.value = \"\";\r\n        } else {\r\n          return setError(\"Duplicate SubTask Was Entered!\");\r\n        }\r\n      } else {\r\n        joined = subtasklist.concat({\r\n          name: subTaskName.value,\r\n          complete: false,\r\n        });\r\n\r\n        setSubtasklist(joined);\r\n        taskCopy.subTasks = joined;\r\n        setUpdated(true);\r\n        setTaskCopyFinal(taskCopy);\r\n\r\n        subTaskName.value = \"\";\r\n        checkComplete();\r\n      }\r\n    }\r\n\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleSelectWorker(sub, temp) {\r\n    for (let i = 0; i < taskCopy.subTasks.length; i++) {\r\n      if (taskCopy.subTasks[i].name === sub.name) {\r\n        if (temp === \"Remove Assigned\") {\r\n          delete taskCopy.subTasks[i].assigned;\r\n        } else {\r\n          taskCopy.subTasks[i].assigned = temp;\r\n        }\r\n      }\r\n    }\r\n\r\n    taskCopyFinal.subTasks = taskCopy.subTasks;\r\n    setSubtasklist(taskCopy.subTasks);\r\n    setUpdated(true);\r\n    setTaskCopyFinal(taskCopy);\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleDelete(task) {\r\n    deleteTask(task);\r\n  }\r\n\r\n  function handleRemove(sub) {\r\n    const subs = taskCopy.subTasks.filter((temp) => temp.name !== sub.name);\r\n    taskCopy.subTasks = subs;\r\n    taskCopyFinal.subTasks = subs;\r\n    setSubtasklist(subs);\r\n    setUpdated(true);\r\n    setTaskCopyFinal(taskCopy);\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleSubmit() {\r\n    handleSubTaskChange(taskCopyFinal);\r\n    setError(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (updated) {\r\n      setTaskCopy(taskCopy);\r\n      setTaskCopyFinal(taskCopy);\r\n      setSubtasklist(taskCopy.subTasks);\r\n      setUpdated(false);\r\n    }\r\n    setTaskCopy(task);\r\n    setTaskCopyFinal(task);\r\n    setSubtasklist(task.subTasks);\r\n  }, [updated, taskCopy, task]);\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button>Edit</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n      contentStyle={{ marginTop: \"10%\" }}\r\n    >\r\n      {(close) => (\r\n        <Card\r\n          className=\"main-shadow\"\r\n          style={{ width: \"800px\", height: \"780px\" }}\r\n        >\r\n          <Card.Body>\r\n            <div\r\n              style={{\r\n                right: \"10px\",\r\n                top: \"10px\",\r\n                position: \"absolute\",\r\n              }}\r\n            >\r\n              <Dropdown drop=\"down\">\r\n                <Dropdown.Toggle\r\n                  variant=\"transperant\"\r\n                  style={{ fontSize: \"0px\" }}\r\n                  id=\"dropdown-basic\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-three-dots-vertical\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n                  </svg>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <div>\r\n                    <Dropdown.Item\r\n                      as=\"button\"\r\n                      onClick={() => {\r\n                        handleDelete(task);\r\n                      }}\r\n                    >\r\n                      <h6>Delete Task</h6>\r\n                    </Dropdown.Item>\r\n                  </div>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-center mb-4\">{task.taskName} Details</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form>\r\n                <Row>\r\n                  <Col md={12} className=\"text-center\">\r\n                    <h5>{task.taskDescripiton}</h5>\r\n                  </Col>\r\n\r\n                  <Col md={6} className=\"text-center\">\r\n                    <h6>Start: {task.startDate}</h6>\r\n                  </Col>\r\n                  <Col md={6} className=\"text-center\">\r\n                    <h6>End: {task.endDate}</h6>\r\n                  </Col>\r\n\r\n                  <Col md={12} className=\"mt-3\">\r\n                    <Form.Group\r\n                      id=\"taskDiscription\"\r\n                      style={{ display: \"flex\" }}\r\n                    >\r\n                      <Form.Control\r\n                        ref={(a) => (subTaskName = a)}\r\n                        placeholder=\"Enter Subtask Name\"\r\n                        className=\"form-control \"\r\n                        style={{ width: \"50%\" }}\r\n                      />\r\n\r\n                      <Button\r\n                        style={{ width: \"40%\", marginLeft: \"10%\" }}\r\n                        onClick={(e) => {\r\n                          addItem();\r\n                        }}\r\n                      >\r\n                        Add Subtask\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Container\r\n                    fluid\r\n                    style={{\r\n                      width: \"700px\",\r\n                      height: \"300px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <Col md={3} style={{ marginLeft: \"-30px\" }}>\r\n                        Subtask name\r\n                      </Col>\r\n                      <Col md={2}>Complete</Col>\r\n                      <Col md={3}>Last Modified</Col>\r\n                      <Col md={3}>Assigned Employee</Col>\r\n                      <Col md={2}>Delete</Col>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: \"10px\",\r\n                        height: \"300px\",\r\n                        overflow: \"auto\",\r\n                        width: \"700px\",\r\n                      }}\r\n                    >\r\n                      <hr></hr>\r\n                      {subtasklist.length > 0 ? (\r\n                        subtasklist.map((sub) => (\r\n                          <Container\r\n                            style={{\r\n                              display: \"inline-flex\",\r\n                              width: \"380px\",\r\n                              height: \"30px\",\r\n                              marginBottom: \"20px\",\r\n                            }}\r\n                          >\r\n                            <Col md={6}>{sub.name}</Col>\r\n\r\n                            <Col md={3}>\r\n                              {sub.complete ? (\r\n                                <div>\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"22\"\r\n                                    height=\"22\"\r\n                                    fill=\"#F5A494\"\r\n                                    className=\"bi bi-check-square-fill svgOnClick\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    onClick={() => handleClick(sub)}\r\n                                  >\r\n                                    <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm10.03 4.97a.75.75 0 0 1 .011 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.75.75 0 0 1 1.08-.022z\" />\r\n                                  </svg>\r\n                                </div>\r\n                              ) : (\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"22\"\r\n                                  height=\"22\"\r\n                                  fill=\"#F5A494\"\r\n                                  className=\"bi bi-square svgOnClick\"\r\n                                  viewBox=\"0 0 16 16\"\r\n                                  onClick={() => handleClick(sub)}\r\n                                >\r\n                                  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                                </svg>\r\n                              )}\r\n                            </Col>\r\n                            <Col md={3}>\r\n                              {sub.lastModified !== undefined ? (\r\n                                <div>\r\n                                  {sub.lastModified.photoURL ? (\r\n                                    <OverlayTrigger\r\n                                      placement=\"right\"\r\n                                      delay={{ show: 250, hide: 400 }}\r\n                                      overlay={\r\n                                        <Tooltip id=\"button-tooltip-2\">\r\n                                          Last modified by:{\" \"}\r\n                                          {sub.lastModified.name}\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <img\r\n                                        style={{\r\n                                          borderRadius: \"50%\",\r\n                                          width: \"35px\",\r\n                                        }}\r\n                                        src={sub.lastModified.photoURL}\r\n                                        alt=\"Profile_Picture\"\r\n                                      ></img>\r\n                                    </OverlayTrigger>\r\n                                  ) : (\r\n                                    <OverlayTrigger\r\n                                      placement=\"right\"\r\n                                      delay={{ show: 250, hide: 400 }}\r\n                                      overlay={\r\n                                        <Tooltip id=\"button-tooltip-2\">\r\n                                          Last modified by:{\" \"}\r\n                                          {sub.lastModified.name}\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"35\"\r\n                                        height=\"35\"\r\n                                        fill=\"currentColor\"\r\n                                        className=\"bi bi-person-circle\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                      >\r\n                                        <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                        <path\r\n                                          fillRule=\"evenodd\"\r\n                                          d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\r\n                                        />\r\n                                      </svg>\r\n                                    </OverlayTrigger>\r\n                                  )}\r\n                                </div>\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </Col>\r\n                            <Col md={8} className=\"\">\r\n                              <DropdownButton\r\n                                as={ButtonGroup}\r\n                                key=\"right\"\r\n                                id={`dropdown-button-drop-right`}\r\n                                drop=\"down\"\r\n                                style={{ width: \"30%\" }}\r\n                                title={\r\n                                  sub.assigned !== undefined\r\n                                    ? sub.assigned.name\r\n                                    : \"Select Worker\"\r\n                                }\r\n                              >\r\n                                {selectedProject.assigned.length > 0 ? (\r\n                                  <div>\r\n                                    {sub.assigned !== undefined ? (\r\n                                      <Dropdown.Item\r\n                                        onSelect={() => {\r\n                                          handleSelectWorker(\r\n                                            sub,\r\n                                            \"Remove Assigned\"\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                          <div style={{ width: \"40%\" }}>\r\n                                            {\"Remove Assigned\"}\r\n                                          </div>\r\n                                        </div>\r\n                                      </Dropdown.Item>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                    {selectedProject.assigned.map((temp) => (\r\n                                      <>\r\n                                        {temp.type !== \"owner\" ? (\r\n                                          <Dropdown.Item\r\n                                            onSelect={() => {\r\n                                              handleSelectWorker(sub, temp);\r\n                                            }}\r\n                                          >\r\n                                            <div style={{ display: \"flex\" }}>\r\n                                              <div style={{ width: \"40%\" }}>\r\n                                                {temp.name}\r\n                                              </div>\r\n                                            </div>\r\n                                          </Dropdown.Item>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </>\r\n                                    ))}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div></div>\r\n                                )}\r\n                              </DropdownButton>\r\n                            </Col>\r\n                            <Col md={1}>\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"22\"\r\n                                height=\"22\"\r\n                                fill=\"#F5A494\"\r\n                                className=\"bi bi-trash svgOnClick\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                onClick={() => handleRemove(sub)}\r\n                              >\r\n                                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                <path\r\n                                  fillRule=\"evenodd\"\r\n                                  d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                                />\r\n                              </svg>\r\n                            </Col>\r\n                          </Container>\r\n                        ))\r\n                      ) : (\r\n                        <div className=\"text-center\">\r\n                          there is no subtasks in this task\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Container>\r\n\r\n                  <Col md={12} style={{ marginTop: \"15px\" }}>\r\n                    <div className=\"text-center\">\r\n                      <Button\r\n                        className=\"w-50  mt-3\"\r\n                        onClick={() => {\r\n                          handleSubmit();\r\n                          close();\r\n                        }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <div className=\"text-center\">\r\n                      <Button\r\n                        className=\"w-50  mt-3\"\r\n                        onClick={() => {\r\n                          close();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpEmpDetailsAssigned(props) {\r\n  const Emp = props.Emp;\r\n  const { selectedProjectTasks } = useAuth();\r\n  let tasks = [];\r\n  let majorTasks = [];\r\n  var taskObj = {};\r\n  var joined = [];\r\n//looping through the selected project tasks\r\n  for (let i = 0; i < selectedProjectTasks.length; i++) {\r\n    //looping through the subtasks of the task\r\n    for (let j = 0; j < selectedProjectTasks[i].subTasks.length; j++) {\r\n      //checking if the subtask is assigned to  a worker\r\n      if (selectedProjectTasks[i].subTasks[j].assigned !== undefined) {\r\n        //checking if the current user is assigned to this subtask\r\n        if (selectedProjectTasks[i].subTasks[j].assigned.email === Emp.email) {\r\n          //checking if the tasks that he is assigned to is so far empty or already got data in it\r\n          if (tasks.length < 1) {\r\n            taskObj = {\r\n              name: selectedProjectTasks[i].subTasks[j].name,\r\n              complete: selectedProjectTasks[i].subTasks[j].complete,\r\n              completeDate: selectedProjectTasks[i].subTasks[j].completionDate,\r\n              majorTask: selectedProjectTasks[i].taskName,\r\n            };\r\n            joined = tasks.concat(taskObj);\r\n            tasks = joined;\r\n          } else {\r\n            //this else is for if wokrer had other tasks that he is assigned to\r\n            //boolean to check with \r\n            var found = -1;\r\n            taskObj = {\r\n              name: selectedProjectTasks[i].subTasks[j].name,\r\n              complete: selectedProjectTasks[i].subTasks[j].complete,\r\n              completeDate: selectedProjectTasks[i].subTasks[j].completionDate,\r\n              majorTask: selectedProjectTasks[i].taskName,\r\n            };\r\n            //checking if the task is already in the array for duplication correction\r\n            for (let dublicate = 0; dublicate < tasks.length; dublicate++) {\r\n              if (tasks[dublicate].majorTask === taskObj.majorTask) {\r\n                if (tasks[dublicate].name === taskObj.name) {\r\n                  found = 1;\r\n                }\r\n              }\r\n            }\r\n            //if its not already inserted in the array it will insert it\r\n            if (found !== 1) {\r\n              joined = [];\r\n              joined = tasks.concat(taskObj);\r\n              tasks = joined;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //looping to  have the major tasks and format them \r\n  for (let i = 0; i < tasks.length; i++) {\r\n    majorTasks.push({ majorTaskName: tasks[i].majorTask, subTasks: [] });\r\n  }\r\n//removing any duplication\r\n  majorTasks = majorTasks.filter(\r\n    (v, i, a) =>\r\n      a.findIndex((t) => JSON.stringify(t) === JSON.stringify(v)) === i\r\n  );\r\n//looping through major tasks to have them formatted !\r\n  for (let i = 0; i < majorTasks.length; i++) {\r\n    //looping through tasks that the worker is assigned to\r\n    for (let j = 0; j < tasks.length; j++) {\r\n      //checking if the subtask is on this major task and then adds it to subtasks array of the major task!\r\n      if (tasks[j].majorTask === majorTasks[i].majorTaskName) {\r\n        majorTasks[i].subTasks = majorTasks[i].subTasks.concat(tasks[j]);\r\n      }\r\n    }\r\n  }\r\n//function to calculate the preformance of the employee ...worker!\r\n  function calculateProgress(task) {\r\n    let counter = 0;\r\n    for (let i = 0; i < task.subTasks.length; i++) {\r\n      if (task.subTasks[i].complete) {\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <Button style={{ marginLeft: \"-17px\", fontSize: \"12px\" }}>\r\n          Details\r\n        </Button>\r\n      }\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card\r\n          className=\"main-shadow\"\r\n          style={{ width: \"500px\", height: \"700px\" }}\r\n        >\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Employee Details</h2>\r\n            <div className=\"text-center\">\r\n              <h6>Employee Name: {Emp.name}</h6>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h6>Employee Email: {Emp.email}</h6>\r\n            </div>\r\n\r\n            <Container className=\" text-center\" fluid>\r\n              {Emp.type !== \"Administrator\" ? (\r\n                <div\r\n                  style={{\r\n                    height: \"420px\",\r\n                    overflow: \"auto\",\r\n                    marginBottom: \"20px\",\r\n                  }}\r\n                >\r\n                  <h6 className=\"text-center\">Assigned Tasks:</h6>\r\n                  {majorTasks.length !== 0 ? (\r\n                    majorTasks.map((task) => (\r\n                      <div style={{ width: \"95%\" }}>\r\n                        <Col md={12}>\r\n                          <h6>{task.majorTaskName}</h6>\r\n                        </Col>\r\n                        {task.subTasks.length > 0 ? (\r\n                          <div>\r\n                            {task.subTasks.map((sub) => (\r\n                              <Row style={{ marginBottom: \"-10px\" }}>\r\n                                <Col md={6}>\r\n                                  <p>{sub.name}</p>\r\n                                </Col>\r\n\r\n                                <Col md={6}>\r\n                                  <p>\r\n                                    {sub.complete === true\r\n                                      ? \"Complete\"\r\n                                      : \"Incomplete\"}\r\n                                  </p>\r\n                                </Col>\r\n                              </Row>\r\n                            ))}\r\n                          </div>\r\n                        ) : (\r\n                          <div>No Subtasks</div>\r\n                        )}\r\n                        <h6>Completion Percentage of their assigned tasks</h6>\r\n                        <ProgressBar\r\n                          className=\"mt-3 mb-3 test22\"\r\n                          variant={\"YOU_PICK_A_NAME\"}\r\n                          now={\r\n                            (calculateProgress(task) / task.subTasks.length) *\r\n                            100\r\n                          }\r\n                          label={\r\n                            (calculateProgress(task) / task.subTasks.length) *\r\n                              100 !==\r\n                            100\r\n                              ? (\r\n                                  (calculateProgress(task) /\r\n                                    task.subTasks.length) *\r\n                                  100\r\n                                ).toFixed(2) + \"%\"\r\n                              : (calculateProgress(task) /\r\n                                  task.subTasks.length) *\r\n                                  100 +\r\n                                \"%\"\r\n                          }\r\n                        />\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div>this employee is not assigned to any task</div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </Container>\r\n\r\n            <div className=\"text-center\">\r\n              <Button\r\n                className=\"w-50  mt-3\"\r\n                onClick={() => {\r\n                  close();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { auth } from \"../firebase.js\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Tooltip,\r\n  OverlayTrigger,\r\n} from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"react-google-flight-datepicker/dist/main.css\";\r\nimport { format } from \"date-fns\";\r\nimport \"./styles/PopUp.css\";\r\n\r\nexport default function PopUpTaskDetailsWorker(props) {\r\n  const task = props.task;\r\n  const currentUser = props.currentUser;\r\n  const projectAssigned = props.assignedUsers;\r\n  const [updated, setUpdated] = useState(false);\r\n  let [taskCopy, setTaskCopy] = useState(task);\r\n  let [subtasklist, setSubtasklist] = useState(taskCopy.subTasks);\r\n  const { handleSubTaskChangeWorker } = useAuth();\r\n  const [taskCopyFinal, setTaskCopyFinal] = useState(taskCopy);\r\n\r\n  if (task.subTasks.length > 0) {\r\n    subtasklist = [];\r\n    task.subTasks.forEach((sub) => {\r\n      if (sub.assigned !== undefined) {\r\n        if (sub.assigned.email === currentUser.email) {\r\n          subtasklist.push(sub);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleClick(sub) {\r\n    let check = true;\r\n    let items = [];\r\n    if (taskCopy.subTasks.length > 0) {\r\n      taskCopy.subTasks.forEach((temp) => {\r\n        if (sub.name === temp.name) {\r\n          temp.complete = !sub.complete;\r\n          temp.lastModified = {\r\n            name: auth.currentUser.displayName,\r\n            uid: auth.currentUser.uid,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n          };\r\n          if (sub.complete) {\r\n            temp.completionDate = format(new Date(), \"MMM-dd-yyyy HH:mm\");\r\n            if (\r\n              new Date(temp.completionDate).getTime() >\r\n              new Date(task.endDate).getTime()\r\n            ) {\r\n              temp.late =\r\n                (new Date(temp.completionDate).getTime() -\r\n                  new Date(task.endDate).getTime()) /\r\n                (1000 * 3600 * 24);\r\n            }\r\n          } else {\r\n            temp.completionDate = null;\r\n            delete temp.late;\r\n          }\r\n          items.push(temp);\r\n        } else {\r\n          items.push(temp);\r\n        }\r\n      });\r\n    }\r\n    if (taskCopy.subTasks.length > 0) {\r\n      taskCopy.subTasks.forEach((item) => {\r\n        if (item.complete) {\r\n        } else {\r\n          check = false;\r\n        }\r\n      });\r\n      taskCopy.complete = check;\r\n      setSubtasklist(items);\r\n      taskCopy.subTasks = subtasklist;\r\n      setUpdated(true);\r\n      setTaskCopyFinal(taskCopy);\r\n    }\r\n  }\r\n\r\n  function handleSubmit() {\r\n    handleSubTaskChangeWorker(taskCopyFinal, projectAssigned, currentUser);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (updated) {\r\n      setTaskCopy(taskCopy);\r\n      setTaskCopyFinal(taskCopy);\r\n      setSubtasklist(taskCopy.subTasks);\r\n      setUpdated(false);\r\n    }\r\n  }, [updated, taskCopy]);\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        subtasklist.length > 0 ? (\r\n          <Button>Edit</Button>\r\n        ) : (\r\n          <div style={{ marginBottom: \"20px\" }}></div>\r\n        )\r\n      }\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n      contentStyle={{ marginTop: \"10%\" }}\r\n    >\r\n      {(close) => (\r\n        <Card\r\n          className=\"main-shadow\"\r\n          style={{ width: \"500px\", height: \"650px\" }}\r\n        >\r\n          <Card.Body>\r\n            <div\r\n              style={{\r\n                right: \"10px\",\r\n                top: \"10px\",\r\n                position: \"absolute\",\r\n              }}\r\n            ></div>\r\n            <div>\r\n              <h2 className=\"text-center mb-4\">{task.taskName} Details</h2>\r\n              <Form>\r\n                <Row>\r\n                  <Col md={12} className=\"text-center\">\r\n                    <h5>{task.taskDescripiton}</h5>\r\n                  </Col>\r\n\r\n                  <Col md={6} className=\"text-center\">\r\n                    <h6>Start: {task.startDate}</h6>\r\n                  </Col>\r\n                  <Col md={6} className=\"text-center\">\r\n                    <h6>End: {task.endDate}</h6>\r\n                  </Col>\r\n                  <Container\r\n                    fluid\r\n                    style={{\r\n                      width: \"420px\",\r\n                      height: \"300px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <Col md={6} style={{ marginLeft: \"-30px\" }}>\r\n                        Subtask name\r\n                      </Col>\r\n                      <Col md={4}>Complete</Col>\r\n                      <Col md={5}>Last Modified</Col>\r\n                    </div>\r\n\r\n                    <Row>\r\n                      <div\r\n                        style={{\r\n                          marginBottom: \"10px\",\r\n                          height: \"300px\",\r\n                          overflow: \"auto\",\r\n                          width: \"420px\",\r\n                        }}\r\n                      >\r\n                        <hr></hr>\r\n                        {subtasklist.length > 0 ? (\r\n                          subtasklist.map((sub) => (\r\n                            <Container\r\n                              style={{\r\n                                display: \"inline-flex\",\r\n                                width: \"235px\",\r\n                                height: \"30px\",\r\n                                marginBottom: \"20px\",\r\n                              }}\r\n                            >\r\n                              <Col md={12}>{sub.name}</Col>\r\n\r\n                              <Col md={3}>\r\n                                {sub.complete ? (\r\n                                  <div>\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      width=\"22\"\r\n                                      height=\"22\"\r\n                                      fill=\"#F5A494\"\r\n                                      className=\"bi bi-check-square-fill svgOnClick\"\r\n                                      viewBox=\"0 0 16 16\"\r\n                                      onClick={() => handleClick(sub)}\r\n                                    >\r\n                                      <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm10.03 4.97a.75.75 0 0 1 .011 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.75.75 0 0 1 1.08-.022z\" />\r\n                                    </svg>\r\n                                  </div>\r\n                                ) : (\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"22\"\r\n                                    height=\"22\"\r\n                                    fill=\"#F5A494\"\r\n                                    className=\"bi bi-square svgOnClick\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    onClick={() => handleClick(sub)}\r\n                                  >\r\n                                    <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                                  </svg>\r\n                                )}\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                {sub.lastModified !== undefined ? (\r\n                                  <div>\r\n                                    {sub.lastModified.photoURL ? (\r\n                                      <OverlayTrigger\r\n                                        placement=\"right\"\r\n                                        delay={{ show: 250, hide: 400 }}\r\n                                        overlay={\r\n                                          <Tooltip id=\"button-tooltip-2\">\r\n                                            Last modified by:{\" \"}\r\n                                            {sub.lastModified.name}\r\n                                          </Tooltip>\r\n                                        }\r\n                                      >\r\n                                        <img\r\n                                          style={{\r\n                                            borderRadius: \"50%\",\r\n                                            width: \"35px\",\r\n                                          }}\r\n                                          src={sub.lastModified.photoURL}\r\n                                          alt=\"Profile_Picture\"\r\n                                        ></img>\r\n                                      </OverlayTrigger>\r\n                                    ) : (\r\n                                      <OverlayTrigger\r\n                                        placement=\"right\"\r\n                                        delay={{ show: 250, hide: 400 }}\r\n                                        overlay={\r\n                                          <Tooltip id=\"button-tooltip-2\">\r\n                                            Last modified by:{\" \"}\r\n                                            {sub.lastModified.name}\r\n                                          </Tooltip>\r\n                                        }\r\n                                      >\r\n                                        <svg\r\n                                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                                          width=\"35\"\r\n                                          height=\"35\"\r\n                                          fill=\"currentColor\"\r\n                                          className=\"bi bi-person-circle\"\r\n                                          viewBox=\"0 0 16 16\"\r\n                                        >\r\n                                          <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                          <path\r\n                                            fillRule=\"evenodd\"\r\n                                            d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\r\n                                          />\r\n                                        </svg>\r\n                                      </OverlayTrigger>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div></div>\r\n                                )}\r\n                              </Col>\r\n                            </Container>\r\n                          ))\r\n                        ) : (\r\n                          <div className=\"text-center\">\r\n                            there is no subtasks in this task\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </Row>\r\n                  </Container>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                  <Button\r\n                    className=\"w-50  mt-3\"\r\n                    onClick={() => {\r\n                      handleSubmit();\r\n                      close();\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50  mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TaskPopUp from \"../popUptask\";\r\nimport NotePopUp from \"../PopUpNote\";\r\nimport LineChart from \"../LineChart\";\r\nimport PopUpAssign from \"../PopUpAssign.js\";\r\nimport PopUpTaskDetails from \"../PopUpTaskDetails\";\r\nimport PopUpEmpDetailsAssigned from \"../PopUpEmpDetailsAssigned\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  ProgressBar,\r\n  Dropdown,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport \"../styles/currentWork.css\";\r\nimport PopUpTaskDetailsWorker from \"../PopUpTaskDetailsWorker\";\r\n\r\nexport default function CurrentWork() {\r\n  const selectedProject = JSON.parse(localStorage.getItem(\"selectedProject\"));\r\n  const {\r\n    selectedProjectTasks,\r\n    handleSubTaskChange,\r\n    selectedProjectNotes,\r\n    deleteNote,\r\n    userDetails,\r\n  } = useAuth();\r\n\r\n  function handleDelete(note) {\r\n    deleteNote(note);\r\n  }\r\n\r\n  let currentUser = {};\r\n\r\n  for (let index = 0; index < selectedProject.assigned.length; index++) {\r\n    if (selectedProject.assigned[index].email === userDetails.email) {\r\n      currentUser = selectedProject.assigned[index];\r\n    }\r\n  }\r\n\r\n  function calculateProgress() {\r\n    let counter = 0;\r\n    if (selectedProjectTasks.length > 0) {\r\n      selectedProjectTasks.forEach((temp) => {\r\n        if (temp.complete) {\r\n          counter++;\r\n        }\r\n      });\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  function calculateSubProgress(task) {\r\n    let counter = 0;\r\n    if (selectedProjectTasks) {\r\n      for (let index = 0; index < task.subTasks.length; index++) {\r\n        if (task.subTasks[index].complete) {\r\n          counter++;\r\n        }\r\n      }\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <LineChart />\r\n      </div>\r\n\r\n      <Container\r\n        style={{\r\n          padding: \"10px\",\r\n          display: \"inline-flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n        fluid\r\n      >\r\n        <Row style={{ width: \"100%\", alignContent: \"center\" }}>\r\n          <Col md={4} style={{ alignContent: \"center\" }}>\r\n            <Card\r\n              className=\"main-shadow\"\r\n              style={{\r\n                width: \"400px\",\r\n                height: \"520px\",\r\n                marginLeft: \"15px\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Card.Body>\r\n                <h4>Tasks</h4>\r\n                <ProgressBar\r\n                  variant={\"YOU_PICK_A_NAME\"}\r\n                  className=\"mt-3 mb-3\"\r\n                  now={\r\n                    (calculateProgress() / selectedProjectTasks.length) * 100\r\n                  }\r\n                  label={\r\n                    (calculateProgress() / selectedProjectTasks.length) *\r\n                      100 !==\r\n                    100\r\n                      ? (\r\n                          (calculateProgress() / selectedProjectTasks.length) *\r\n                          100\r\n                        ).toFixed(2) + \"%\"\r\n                      : (calculateProgress() / selectedProjectTasks.length) *\r\n                          100 +\r\n                        \"%\"\r\n                  }\r\n                ></ProgressBar>\r\n                <div\r\n                  style={{\r\n                    overflow: \"auto\",\r\n                    maxHeight: \"350px\",\r\n                    padding: \"25 px\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {selectedProjectTasks.length > 0 ? (\r\n                      selectedProjectTasks.map((task) => (\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: \"15px\",\r\n                          }}\r\n                          key={task.taskName}\r\n                        >\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <Col md={10}>\r\n                              <h5>{task.taskName}</h5>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                              {task.complete ? (\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"22\"\r\n                                  height=\"22\"\r\n                                  fill=\"#F5A494\"\r\n                                  className=\"bi bi-check-square-fill\"\r\n                                  viewBox=\"0 0 16 16\"\r\n                                >\r\n                                  <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm10.03 4.97a.75.75 0 0 1 .011 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.75.75 0 0 1 1.08-.022z\" />\r\n                                </svg>\r\n                              ) : (\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"22\"\r\n                                  height=\"22\"\r\n                                  fill=\"#F5A494\"\r\n                                  className=\"bi bi-square\"\r\n                                  viewBox=\"0 0 16 16\"\r\n                                >\r\n                                  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                                </svg>\r\n                              )}\r\n                            </Col>\r\n                          </div>\r\n\r\n                          <Col\r\n                            style={{\r\n                              marginBottom: \"-10px\",\r\n                              marginTop: \"-10px\",\r\n                            }}\r\n                          >\r\n                            <ProgressBar\r\n                              className=\"mt-3 mb-3 test22\"\r\n                              variant={\"YOU_PICK_A_NAME\"}\r\n                              now={\r\n                                (calculateSubProgress(task) /\r\n                                  task.subTasks.length) *\r\n                                100\r\n                              }\r\n                              label={\r\n                                (calculateSubProgress(task) /\r\n                                  task.subTasks.length) *\r\n                                  100 !==\r\n                                100\r\n                                  ? (\r\n                                      (calculateSubProgress(task) /\r\n                                        task.subTasks.length) *\r\n                                      100\r\n                                    ).toFixed(2) + \"%\"\r\n                                  : (calculateSubProgress(task) /\r\n                                      task.subTasks.length) *\r\n                                      100 +\r\n                                    \"%\"\r\n                              }\r\n                            />\r\n                          </Col>\r\n\r\n                          <div className=\"text-center mt-3\">\r\n                            {currentUser.type === \"owner\" ? (\r\n                              <>\r\n                                <PopUpTaskDetails\r\n                                  task={task}\r\n                                  handleSubTaskChange={handleSubTaskChange}\r\n                                ></PopUpTaskDetails>\r\n                              </>\r\n                            ) : (\r\n                              <div>\r\n                                {currentUser.type === \"Worker\" ? (\r\n                                  <PopUpTaskDetailsWorker\r\n                                    task={task}\r\n                                    handleSubTaskChange={handleSubTaskChange}\r\n                                    currentUser={currentUser}\r\n                                    assignedUsers={selectedProject.assigned}\r\n                                  ></PopUpTaskDetailsWorker>\r\n                                ) : (\r\n                                  <PopUpTaskDetails\r\n                                    task={task}\r\n                                    handleSubTaskChange={handleSubTaskChange}\r\n                                  ></PopUpTaskDetails>\r\n                                )}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          <hr />\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{ position: \"absolute\", right: \"5%\", bottom: \"5%\" }}\r\n                >\r\n                  {currentUser.type !== \"Worker\" ? <TaskPopUp /> : <div></div>}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Row>\r\n              <Card\r\n                className=\"main-shadow\"\r\n                style={{ width: \"400px\", height: \"100px\", marginTop: \"20px\" }}\r\n              >\r\n                <Card.Body>\r\n                  <h4>Project Description</h4>\r\n                  {selectedProject.description ? (\r\n                    selectedProject.description\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n            <Row>\r\n              <Card\r\n                className=\"main-shadow\"\r\n                style={{\r\n                  width: \"400px\",\r\n                  height: \"400px\",\r\n                  marginBottom: \"50px\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <Card.Body>\r\n                  <h4>Notes</h4>\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        overflow: \"auto\",\r\n                        maxHeight: \"270px\",\r\n                      }}\r\n                    >\r\n                      {selectedProjectNotes.length > 0 ? (\r\n                        selectedProjectNotes.map((note) => (\r\n                          <Container\r\n                            style={{ marginBottom: \"10px\" }}\r\n                            key={note.id}\r\n                          >\r\n                            <Row>\r\n                              <Col md={12}>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: \"right\",\r\n                                    top: \"0\",\r\n                                    marginTop: \"5px\",\r\n                                  }}\r\n                                >\r\n                                  {\" \"}\r\n                                  <Dropdown drop=\"down\">\r\n                                    <Dropdown.Toggle\r\n                                      variant=\"transperant\"\r\n                                      style={{ fontSize: \"0px\" }}\r\n                                      id=\"dropdown-basic\"\r\n                                    >\r\n                                      <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"20\"\r\n                                        height=\"20\"\r\n                                        fill=\"currentColor\"\r\n                                        className=\"bi bi-three-dots-vertical\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                      >\r\n                                        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n                                      </svg>\r\n                                    </Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                      <div>\r\n                                        <Dropdown.Item\r\n                                          as=\"button\"\r\n                                          onClick={() => {\r\n                                            handleDelete(note);\r\n                                          }}\r\n                                        >\r\n                                          <h6 style={{ fontSize: \"14px\" }}>\r\n                                            Delete Note\r\n                                          </h6>\r\n                                        </Dropdown.Item>\r\n                                      </div>\r\n                                    </Dropdown.Menu>\r\n                                  </Dropdown>\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                {note.creator.photoURL ? (\r\n                                  <img\r\n                                    style={{\r\n                                      borderRadius: \"50%\",\r\n                                      width: \"35px\",\r\n                                      padding: \"4px\",\r\n                                    }}\r\n                                    src={note.creator.photoURL}\r\n                                    alt=\"Profile_Picture\"\r\n                                  ></img>\r\n                                ) : (\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"35\"\r\n                                    height=\"35\"\r\n                                    fill=\"currentColor\"\r\n                                    className=\"bi bi-person-circle\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                  >\r\n                                    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                    <path\r\n                                      fillRule=\"evenodd\"\r\n                                      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\r\n                                    />\r\n                                  </svg>\r\n                                )}\r\n                              </Col>\r\n                              <Col md={9}>{note.creator.name}</Col>\r\n\r\n                              <Col md={12} style={{ textAlign: \"center\" }}>\r\n                                <hr\r\n                                  style={{\r\n                                    marginTop: \"-1px\",\r\n                                    marginBottom: \"-2px\",\r\n                                  }}\r\n                                ></hr>\r\n                                {note.msg}\r\n                              </Col>\r\n                              <Col md={8}></Col>\r\n                              <Col md={4} style={{ textAlign: \"right\" }}>\r\n                                <Row>{note.dateOfCreation} </Row>\r\n                              </Col>\r\n                              <Col md={12}>\r\n                                {\" \"}\r\n                                <hr\r\n                                  style={{\r\n                                    marginTop: \"-1px\",\r\n                                    marginBottom: \"-2px\",\r\n                                  }}\r\n                                ></hr>\r\n                              </Col>\r\n                            </Row>\r\n                          </Container>\r\n                        ))\r\n                      ) : (\r\n                        <div className=\"text-center\"> There are no Notes! </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{ position: \"absolute\", right: \"5%\", bottom: \"5%\" }}\r\n                  >\r\n                    <NotePopUp />\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col md={4} style={{ alignContent: \"center\" }}>\r\n            <Card\r\n              className=\"main-shadow\"\r\n              style={{\r\n                width: \"400px\",\r\n                height: \"520px\",\r\n                marginLeft: \"-15px\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Card.Body>\r\n                <h4>Assigned Workers</h4>\r\n                <div\r\n                  style={{\r\n                    overflow: \"auto\",\r\n                    maxHeight: \"350px\",\r\n                    padding: \"25 px\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {selectedProject.assigned.length > 0 ? (\r\n                      selectedProject.assigned.map((worker) => (\r\n                        <div\r\n                          style={{\r\n                            width: \"79%\",\r\n                            marginTop: \"15px\",\r\n                          }}\r\n                          key={worker.email}\r\n                        >\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <Col md={2}>\r\n                              <div>\r\n                                {\" \"}\r\n                                {worker.photoURL ? (\r\n                                  <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={\r\n                                      <Tooltip id=\"button-tooltip-2\">\r\n                                        {worker.name}\r\n                                      </Tooltip>\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      style={{\r\n                                        borderRadius: \"50%\",\r\n                                        width: \"35px\",\r\n                                      }}\r\n                                      src={worker.photoURL}\r\n                                      alt=\"Profile_Picture\"\r\n                                    ></img>\r\n                                  </OverlayTrigger>\r\n                                ) : (\r\n                                  <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={\r\n                                      <Tooltip id=\"button-tooltip-2\">\r\n                                        {worker.name}\r\n                                      </Tooltip>\r\n                                    }\r\n                                  >\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      width=\"35\"\r\n                                      height=\"35\"\r\n                                      fill=\"currentColor\"\r\n                                      className=\"bi bi-person-circle\"\r\n                                      viewBox=\"0 0 16 16\"\r\n                                    >\r\n                                      <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                      <path\r\n                                        fillRule=\"evenodd\"\r\n                                        d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\r\n                                      />\r\n                                    </svg>\r\n                                  </OverlayTrigger>\r\n                                )}\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={5}>\r\n                              {\" \"}\r\n                              <h6 style={{ fontSize: \"14px\" }}>\r\n                                {worker.name}\r\n                              </h6>\r\n                            </Col>\r\n                            <Col md={5}>\r\n                              <h6 style={{ fontSize: \"14px\" }}>\r\n                                {worker.type}\r\n                              </h6>\r\n                            </Col>\r\n\r\n                            {currentUser.type === \"Worker\" ? (\r\n                              <></>\r\n                            ) : (\r\n                              <Col>\r\n                                {worker.type === \"owner\" ||\r\n                                currentUser.type === \"Worker\" ||\r\n                                currentUser.type === \"owner\" ? (\r\n                                  <></>\r\n                                ) : (\r\n                                  <PopUpEmpDetailsAssigned Emp={worker} />\r\n                                )}\r\n                              </Col>\r\n                            )}\r\n                          </div>\r\n\r\n                          <Col\r\n                            style={{\r\n                              marginBottom: \"-10px\",\r\n                              marginTop: \"-10px\",\r\n                            }}\r\n                          ></Col>\r\n\r\n                          <hr />\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{ position: \"absolute\", right: \"5%\", bottom: \"5%\" }}\r\n                  >\r\n                    {currentUser.type !== \"Worker\" ? (\r\n                      <PopUpAssign currentUser={currentUser} />\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useRef} from \"react\";\r\nimport {Button}from 'react-bootstrap'\r\nimport { useAuth } from \"../../Context/AuthContext.js\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { exportComponentAsPNG } from 'react-component-export-image';\r\nexport default function GanttChart() {\r\n  const { selectedProject, selectedProjectTasks } = useAuth();\r\n  const componentRef = useRef();\r\n  //default google charts api settings\r\n  const defaultSettings = [\r\n    { type: \"string\", label: \"Task ID\" },\r\n    { type: \"string\", label: \"Task Name\" },\r\n    { type: \"date\", label: \"Start Date\" },\r\n    { type: \"date\", label: \"End Date\" },\r\n    { type: \"number\", label: \"Duration\" },\r\n    { type: \"number\", label: \"Percent Complete\" },\r\n    { type: \"string\", label: \"Dependencies\" },\r\n  ];\r\n\r\n  let formattedData = [];\r\n  //inserting the default setting into formatted data array object\r\n  formattedData.push(defaultSettings);\r\n //formatting the project object as default settings of google charts api\r\n  let projectData = [\r\n    \"\" + selectedProject.projectName,\r\n    \"\" + selectedProject.projectName,\r\n    new Date(selectedProject.startDate),\r\n    new Date(selectedProject.endDate),\r\n    null,\r\n    \"\" + calculateProgress(),\r\n    null,\r\n  ];\r\n  //inserting it to index 1 of the array so it read the default settings at index 0 (Note!: this is how google charts api works)\r\n  formattedData.push(projectData);\r\n//this function for calculating the project progress\r\n  function calculateProgress() {\r\n    let counter = 0;\r\n    selectedProjectTasks.forEach((task) => {\r\n      if (task.complete) {\r\n        counter++;\r\n      }\r\n    });\r\n    //the output of this function is a percentage of progress out of 100%\r\n    return (counter / selectedProjectTasks.length) * 100;\r\n  }\r\n//defined an object of formatted tasks array \r\n  let formattedTask = [];\r\n  //looping through each task and adds it with the formatted settings of google charts api\r\n  selectedProjectTasks.forEach((task) => {\r\n    formattedTask = [];\r\n    formattedTask = [\r\n      \"\" + task.taskName,\r\n      \"\" + task.taskName,\r\n      new Date(task.startDate),\r\n      new Date(task.endDate),\r\n      null,\r\n      \"\" + calculateTaskProgress(task),\r\n      null,\r\n    ];\r\n    //pushing the formatted task into the array \r\n    formattedData.push(formattedTask);\r\n  });\r\n  \r\n  //this function input is a whole task which has subtasks in it\r\n  function calculateTaskProgress(task) {\r\n    let counter = 0;\r\n    //will loop through the subtasks array of the major task \r\n    task.subTasks.forEach((sub) => {\r\n      //checking if subtask is completed so we increase the counter to calculate progress of the major task\r\n      if (sub.complete) {\r\n        counter++;\r\n      }\r\n    });\r\n    //return the progress of this task in percentage out of 100%\r\n    return (counter / task.subTasks.length) * 100;\r\n  }\r\n\r\n  return (\r\n    //the html code for displaying the user  interface \r\n    //exportComponentAsPng is gonna export the chart as an image to be downloaded!\r\n    <div >\r\n      <div className='mr-3 mb-2' style={{textAlign:'right'}}><Button  onClick={()=>exportComponentAsPNG(componentRef)}>Export as Image</Button></div>\r\n      <h5>Gannt Chart of the project {selectedProject.projectName}</h5>\r\n      <div ref={componentRef} style={{ width: \"100%\",height:'1000px',overflow:'auto',marginBottom:'100px',paddingRight:'50px'}}>\r\n        {/*google chart api its input will be the formatted Data we did above */}\r\n        <Chart\r\n        width={\"100%\"}\r\n        height={\"100%\"}\r\n        chartType=\"Gantt\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={formattedData}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      /></div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","import \"reactjs-popup/dist/index.css\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { RangeDatePicker } from \"react-google-flight-datepicker\";\r\nimport \"../styles/DatePicker.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default function ProjectSettings() {\r\n  const {\r\n    updateProject,\r\n    selectedProject,\r\n    deleteProject,\r\n    userDetails,\r\n  } = useAuth();\r\n  const ProjectName = useRef();\r\n  const ProjectDescription = useRef();\r\n  const DeleteConfirmation = useRef();\r\n  const [error, setError] = useState(\"\");\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n  const history = useHistory();\r\n  const [startDate, setStartDate] = useState(\r\n    format(new Date(selectedProject.startDate), \"MMM-dd-yyyy\")\r\n  );\r\n\r\n  const [endDate, setEndDate] = useState(\r\n    format(new Date(selectedProject.endDate), \"MMM-dd-yyyy\")\r\n  );\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (startDate === undefined || endDate === undefined) {\r\n      return setError(\"Please Enter Date!\");\r\n    }\r\n\r\n    let updatedProject = selectedProject;\r\n    updatedProject.projectName = ProjectName.current.value;\r\n    updatedProject.startDate = startDate;\r\n    updatedProject.endDate = endDate;\r\n    updatedProject.description = ProjectDescription.current.value;\r\n\r\n    updateProject(updatedProject);\r\n\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleDelete() {\r\n    if (DeleteConfirmation.current.value === \"\") {\r\n      return setError(\"Please Enter Delete Confirmation!\");\r\n    } else if (\r\n      DeleteConfirmation.current.value === selectedProject.projectName\r\n    ) {\r\n      deleteProject(selectedProject);\r\n      history.push(\"/\");\r\n    } else {\r\n      return setError(\"Please Enter Correct Delete Confirmation!\");\r\n    }\r\n\r\n    setError(\"\");\r\n  }\r\n\r\n  function onDateChange(startDate, endDate) {\r\n    if (startDate && endDate) {\r\n      setStartDate(format(startDate, \"MMM-dd-yyyy\"));\r\n      setEndDate(format(endDate, \"MMM-dd-yyyy\"));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    for (let index = 0; index < selectedProject.assigned.length; index++) {\r\n      if (selectedProject.assigned[index].email === userDetails.email) {\r\n        setCurrentUser(selectedProject.assigned[index]);\r\n      }\r\n    }\r\n  }, [selectedProject.assigned, userDetails.email]);\r\n\r\n  return (\r\n    <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Add Project</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"ProjectName\">\r\n            <Form.Label>Project Name:</Form.Label>\r\n            <Form.Control\r\n              type=\"Name\"\r\n              defaultValue={selectedProject.projectName}\r\n              ref={ProjectName}\r\n              className=\"form-control button-bg \"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"ProjectDescription\">\r\n            <Form.Label>Project Description:</Form.Label>\r\n            <Form.Control\r\n              type=\"Name\"\r\n              defaultValue={selectedProject.description}\r\n              ref={ProjectDescription}\r\n              className=\"form-control button-bg\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"ProjectDate\">\r\n            <label>Start Date & End Date:</label>\r\n            <RangeDatePicker\r\n              className=\" react-google-flight-datepicker w-100\"\r\n              onChange={(startDate, endDate) =>\r\n                onDateChange(startDate, endDate)\r\n              }\r\n              startDate={new Date(startDate)}\r\n              endDate={new Date(endDate)}\r\n              minDate={new Date(1900, 0, 1)}\r\n              maxDate={new Date(2100, 0, 1)}\r\n              dateFormat=\"DD MM YYYY\"\r\n              monthFormat=\"MMM YYYY\"\r\n              startDatePlaceholder={startDate}\r\n              endDatePlaceholder={endDate}\r\n              disabled={false}\r\n              startWeekDay=\"sunday\"\r\n              highlightToday=\"true\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group id=\"DeleteConfirmation\">\r\n            <Form.Label>Delete Confirmation:</Form.Label>\r\n            <Form.Control\r\n              type=\"Name\"\r\n              ref={DeleteConfirmation}\r\n              placeholder={\"Name of Project: \" + selectedProject.projectName}\r\n              className=\"form-control button-bg\"\r\n            />\r\n          </Form.Group>\r\n          <div className=\"text-center flex\">\r\n            <Button\r\n              className=\"w-40  mt-3\"\r\n              type=\"submit\"\r\n              disabled={currentUser.type !== \"owner\"}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              className=\"w-40 ml-2 mt-3\"\r\n              variant=\"danger\"\r\n              disabled={currentUser.type !== \"owner\"}\r\n              onClick={() => handleDelete()}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n          <div className=\"text-center\"></div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\n\r\nimport \"./styles/tabs.css\";\r\n\r\nimport NPV from \"./Tabs/NPV.js\";\r\nimport Inventory from \"./Tabs/Inventory.js\";\r\nimport CurrentWork from \"./Tabs/CurrentWork.js\";\r\nimport GanttChart from \"./Tabs/GanttChart.js\";\r\n\r\nimport ProjectSettings from \"./Tabs/ProjectSettings\";\r\n\r\nexport default function ProjectPage() {\r\n  const project = JSON.parse(localStorage.getItem(\"selectedProject\"));\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        textAlign: \"left\",\r\n        margin: \"5px\",\r\n      }}\r\n    >\r\n      <h1>{project.projectName}</h1>\r\n      <div>\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab key=\"0\">Current Work</Tab>\r\n            <Tab key=\"1\">Gantt Chart</Tab>\r\n            <Tab key=\"2\">NPV</Tab>\r\n            <Tab key=\"3\">Inventory</Tab>\r\n            <Tab key=\"4\">Settings</Tab>\r\n          </TabList>\r\n          <div style={{ height: \"86vh\", overflow: \"auto\" }}>\r\n            <TabPanel key=\"0\">\r\n              <CurrentWork />\r\n            </TabPanel>\r\n            <TabPanel key=\"1\">\r\n              <GanttChart />\r\n            </TabPanel>\r\n            <TabPanel key=\"2\">\r\n              <NPV />\r\n            </TabPanel>\r\n            <TabPanel key=\"3\">\r\n              <Inventory />\r\n            </TabPanel>\r\n            <TabPanel className=\"d-flex align-items-center justify-content-center\" key=\"4\">\r\n              <ProjectSettings />\r\n            </TabPanel>\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Dropdown,\r\n  DropdownButton,\r\n  ButtonGroup,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nimport \"./styles/PopUp.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nexport default function PopUpAddEmployee(props) {\r\n  const { insertEmployeeToFirestore, projects } = useAuth();\r\n  const [selected, setSelected] = useState(projects[0]);\r\n  const [Employee, setEmployee] = useState(\"Administrator\");\r\n  const EmployeeName = useRef();\r\n  const EmployeeEmail = useRef();\r\n  let [projectlist, setProjectlist] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  function handleSubmit() {\r\n    insertEmployeeToFirestore(\r\n      EmployeeName.current.value,\r\n      EmployeeEmail.current.value,\r\n      Employee,\r\n      projectlist\r\n    );\r\n  }\r\n\r\n  function handleSelect(project) {\r\n    setSelected(project);\r\n  }\r\n\r\n  function addItem() {\r\n    if (selected !== null) {\r\n      var joined = [];\r\n      if (projectlist.length > 0) {\r\n        var found = -1;\r\n        for (let index = 0; index < projectlist.length; index++) {\r\n          if (selected.projectName === projectlist[index].projectName) {\r\n            found = 1;\r\n          }\r\n        }\r\n        if (found === -1) {\r\n          joined = projectlist.concat(selected);\r\n          setProjectlist(joined);\r\n        } else {\r\n          return setError(\"Duplicate Project Was Entered!\");\r\n        }\r\n      } else {\r\n        joined = projectlist.concat(selected);\r\n\r\n        setProjectlist(joined);\r\n      }\r\n    }\r\n    setError(\"\");\r\n  }\r\n\r\n  function handleRemove(temp) {\r\n    const newList = projectlist.filter(\r\n      (temp2) => temp2.projectName !== temp.projectName\r\n    );\r\n    setProjectlist(newList);\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<Button disabled={!props.checkOwner()}> Add Employee</Button>}\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"500px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Employee to Company</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form>\r\n              <Form.Group id=\"EmployeeName\">\r\n                <Form.Label>Employee Name:</Form.Label>\r\n\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={EmployeeName}\r\n                  required\r\n                  className=\"form-control button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"ProjectName\">\r\n                <Form.Label>Employee Email: </Form.Label>\r\n\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={EmployeeEmail}\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"Employeetype\">\r\n                <Form.Label>Employee type:</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"mr-sm-2\"\r\n                  id=\"inlineFormCustomSelect\"\r\n                  custom\r\n                  onChange={(Event) => setEmployee(Event.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"Administrator\">Administrator</option>\r\n                  <option value=\"Worker\">Worker</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Label>Assign Employee to Project:</Form.Label>\r\n              <Form.Group\r\n                id=\"taskDiscription\"\r\n                style={{ display: \"inline-flex\", width: \"100%\" }}\r\n              >\r\n                <DropdownButton\r\n                  as={ButtonGroup}\r\n                  key=\"right\"\r\n                  id={`dropdown-button-drop-right`}\r\n                  drop=\"right\"\r\n                  style={{ width: \"50%\", margin: \"20px\" }}\r\n                  title={\r\n                    selected !== undefined\r\n                      ? selected.projectName\r\n                      : \"No Projects\"\r\n                  }\r\n                >\r\n                  {projects.length > 0 ? (\r\n                    <div>\r\n                      {projects.map((temp) => (\r\n                        <Dropdown.Item\r\n                          onSelect={() => {\r\n                            handleSelect(temp);\r\n                          }}\r\n                        >\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <div style={{ width: \"90%\" }}>\r\n                              {temp.projectName}\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </DropdownButton>\r\n\r\n                <Button\r\n                  style={{ width: \"50%\", margin: \"20px\" }}\r\n                  onClick={(e) => {\r\n                    addItem();\r\n                  }}\r\n                >\r\n                  Assign Project\r\n                </Button>\r\n              </Form.Group>\r\n              {projectlist.length > 0 ? (\r\n                <div>\r\n                  {projectlist.map((temp) => (\r\n                    <Container className=\"mb-3\">\r\n                      <Row>\r\n                        <Col md={6} className=\"text-center\">\r\n                          {temp.projectName}\r\n                        </Col>\r\n                        <Col md={6} className=\"text-center\">\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"22\"\r\n                            height=\"22\"\r\n                            fill=\"#F5A494\"\r\n                            className=\"bi bi-trash svgOnClick\"\r\n                            onClick={() => {\r\n                              handleRemove(temp);\r\n                            }}\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                            <path\r\n                              fill-rule=\"evenodd\"\r\n                              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                            />\r\n                          </svg>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div />\r\n              )}\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Add Employee\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport React, { useRef } from \"react\";\r\nimport \"./styles/PopUp.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nexport default function PopUpAddClient(props) {\r\n  const ClientName = useRef();\r\n  const ClientEmail = useRef();\r\n  const { insertClientToFirestore } = useAuth();\r\n\r\n  function handleSubmit() {\r\n    insertClientToFirestore(\r\n      ClientName.current.value,\r\n      ClientEmail.current.value\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <Button\r\n          disabled={!props.checkOwner()}\r\n          className=\"mb-2\"\r\n          style={{ marginRight: \"66%\" }}\r\n        >\r\n          Add Client\r\n        </Button>\r\n      }\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Client</h2>\r\n            <Form>\r\n              <Form.Group id=\"ClientName\">\r\n                <Form.Label>Client Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ClientName}\r\n                  required\r\n                  className=\"button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"ClientEmail\">\r\n                <Form.Label>Client Email:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ClientEmail}\r\n                  required\r\n                  className=\"button-bg\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport React, { useRef } from \"react\";\r\nimport emailJS from \"emailjs-com\";\r\nimport \"./styles/PopUp.css\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nexport default function PopUpAddEmployee(props) {\r\n  let Email = props.Email;\r\n  const alert = useAlert();\r\n  const Subject = useRef();\r\n  const msg = useRef();\r\n  const Name = useRef();\r\n  function handleSubmit() {\r\n    let variables = {\r\n      msg: msg.current.value,\r\n      Name: Name.current.value,\r\n      Subject: Subject.current.value,\r\n      reciever: props.Email,\r\n    };\r\n    console.log(variables);\r\n    emailJS\r\n      .send(\r\n        \"Gmail\",\r\n        \"Development_email\",\r\n        variables,\r\n        \"user_Ufgqez1YDtVtHo6gPiYox\"\r\n      )\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          alert.success(\"Email Sent Successfully!\");\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n          alert.success(\"Failed to Send Email!\");\r\n        }\r\n      );\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <Button\r\n          disabled={Email === \"\"}\r\n          style={{ width: \"20%\", margin: \"50px\" }}\r\n        >\r\n          {\" \"}\r\n          Send Email\r\n        </Button>\r\n      }\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Send Email</h2>\r\n            <Form>\r\n              <Form.Group id=\"Subject\">\r\n                <Form.Label>Subject:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                  name=\"Subject\"\r\n                  ref={Subject}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"from\">\r\n                <Form.Label>Name of Sender:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                  name=\"Name\"\r\n                  ref={Name}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"reciever\">\r\n                <Form.Label>Recipient:</Form.Label>\r\n                <Form.Control\r\n                  type=\"string\"\r\n                  required\r\n                  className=\"form-control button-bg \"\r\n                  name=\"reciever\"\r\n                  value={Email}\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"msg\">\r\n                <Form.Label>Message:</Form.Label>\r\n                <br />\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  ref={msg}\r\n                  rows={5}\r\n                  name=\"msg\"\r\n                  style={{ width: \"100%\" }}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    Email = \"\";\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport React, { useRef } from \"react\";\r\nimport \"./styles/PopUp.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nexport default function PopUpEditClient(props) {\r\n  const client = props.client;\r\n  const ClientName = useRef();\r\n  const ClientEmail = useRef();\r\n  const { updateClient } = useAuth();\r\n\r\n  function handleSubmit() {\r\n    updateClient(\r\n      ClientName.current.value,\r\n      ClientEmail.current.value,\r\n      client.id\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <Button\r\n          disabled={props.client === \"\" || !props.checkOwner()}\r\n          style={{ width: \"20%\" }}\r\n        >\r\n          Edit\r\n        </Button>\r\n      }\r\n      position=\"center center\"\r\n      modal\r\n      nested\r\n    >\r\n      {(close) => (\r\n        <Card className=\"main-shadow\" style={{ width: \"400px\" }}>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Add Client</h2>\r\n            <Form>\r\n              <Form.Group id=\"ClientName\">\r\n                <Form.Label>Client Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Name\"\r\n                  ref={ClientName}\r\n                  defaultValue={client.ClientName}\r\n                  required\r\n                  className=\"button-bg\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"ClientEmail\">\r\n                <Form.Label>Client Email:</Form.Label>\r\n                <Form.Control\r\n                  type=\"Email\"\r\n                  ref={ClientEmail}\r\n                  defaultValue={client.ClientEmail}\r\n                  required\r\n                  className=\"button-bg\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    handleSubmit();\r\n                    close();\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"w-50 mt-3\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/ContactsPage.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Card, Button, Col, Container } from \"react-bootstrap\";\r\nimport PopUpAddEmployee from \"./PopUpAddEmployee\";\r\nimport PopUpAddClient from \"./PopUpClients\";\r\nimport PopUpEmail from \"./PopUpEmail\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport PopUpEditClient from \"./PopUpEditClient\";\r\n\r\nexport default function ContactsPage() {\r\n  const {\r\n    selectedCompanyClients,\r\n    selectedCompanyEmployee,\r\n    deleteEmployee,\r\n    deleteClient,\r\n    userDetails,\r\n    selectCompany,\r\n  } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [email1, setEmail1] = useState(\"\");\r\n  const [client, setClient] = useState(\"\");\r\n\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    for (let index = 0; index < selectCompany.users.length; index++) {\r\n      if (selectCompany.users[index].email === userDetails.email) {\r\n        setCurrentUser(selectCompany.users[index]);\r\n      }\r\n    }\r\n  }, [currentUser, userDetails.email, selectCompany.users]);\r\n\r\n  function checkOwner() {\r\n    let isOwner = false;\r\n    if (currentUser.type !== undefined) {\r\n      if (currentUser.type === \"owner\") {\r\n        isOwner = true;\r\n      }\r\n    }\r\n\r\n    return isOwner;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"ClientName\",\r\n      text: \"Client Name\",\r\n    },\r\n    {\r\n      dataField: \"ClientEmail\",\r\n      text: \"Email\",\r\n    },\r\n  ];\r\n\r\n  const col = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Employee Name\",\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n    },\r\n  ];\r\n\r\n  const selectRow = {\r\n    mode: \"radio\",\r\n    clickToSelect: true,\r\n    style: { backgroundColor: \"#f5a494\" },\r\n    onSelect: (row, isSelect, rowIndex, e) => {\r\n      setEmail(row.email);\r\n    },\r\n  };\r\n  const selectRow2 = {\r\n    mode: \"radio\",\r\n    clickToSelect: true,\r\n    style: { backgroundColor: \"#f5a494\" },\r\n    onSelect: (row, isSelect, rowIndex, e) => {\r\n      setEmail1(row.ClientEmail);\r\n      setClient(row);\r\n    },\r\n  };\r\n  function handledelete() {\r\n    if (email) {\r\n      deleteEmployee(email);\r\n    }\r\n  }\r\n  function handledeleteClient() {\r\n    if (email1) {\r\n      deleteClient(email1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid style={{ display: \"inline-flex\" }}>\r\n      <Col md={6}>\r\n        <div>\r\n          <Card\r\n            className=\"main-shadow\"\r\n            style={{ height: \"85vh\", padding: \"50px\", marginTop: \"50px\" }}\r\n          >\r\n            <div>\r\n              <PopUpAddEmployee checkOwner={checkOwner} />\r\n            </div>\r\n            <Card.Body>\r\n              <BootstrapTable\r\n                style={{ maxHeight: \"550px\" }}\r\n                keyField=\"email\"\r\n                data={selectedCompanyEmployee}\r\n                columns={col}\r\n                pagination={paginationFactory()}\r\n                selectRow={selectRow}\r\n              />\r\n            </Card.Body>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            >\r\n              <PopUpEmail Email={email}></PopUpEmail>\r\n              <Button\r\n                variant=\"danger\"\r\n                style={{ width: \"20%\", margin: \"50px\" }}\r\n                disabled={email === \"\" || !checkOwner()}\r\n                onClick={() => {\r\n                  handledelete();\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col md={6}>\r\n        <div>\r\n          <Card\r\n            className=\"main-shadow\"\r\n            style={{ height: \"85vh\", padding: \"50px\", marginTop: \"50px\" }}\r\n          >\r\n            <div>\r\n              <PopUpAddClient className=\"Btn mb-2\" checkOwner={checkOwner}>\r\n                Add\r\n              </PopUpAddClient>\r\n            </div>\r\n            <Card.Body>\r\n              <BootstrapTable\r\n                style={{ height: \"550px\" }}\r\n                keyField=\"ClientEmail\"\r\n                data={selectedCompanyClients}\r\n                columns={columns}\r\n                pagination={paginationFactory()}\r\n                selectRow={selectRow2}\r\n              />\r\n            </Card.Body>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            >\r\n              <PopUpEmail Email={email1}></PopUpEmail>\r\n              <PopUpEditClient client={client} checkOwner={checkOwner} />\r\n              <Button\r\n                variant=\"danger\"\r\n                disabled={email1 === \"\" || !checkOwner()}\r\n                style={{ width: \"20%\", margin: \"50px\" }}\r\n                onClick={() => {\r\n                  handledeleteClient();\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </Col>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport {\r\n  Document,\r\n  Page,\r\n  Text,\r\n  StyleSheet,\r\n  PDFViewer,\r\n} from \"@react-pdf/renderer\";\r\n\r\nexport default function ContractsPage() {\r\n  //states (variables) to be used in the pdf\r\n  const [content, setcontent] = useState(\"\");\r\n  const [subtitle, setsubtitle] = useState(\"\");\r\n  const [title, settitle] = useState(\"\");\r\n  const [save, setsave] = useState(false);\r\n//to adjust the content with a good preformance which when the user edit it will return to the default template we made \r\n//when he hits save it will take his input to be printed in the page!\r\n  function handleSave() {\r\n    setsave(!save);\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div className=\" ml-5\" style={{ marginRight: \"15%\" }}>\r\n        <Form>\r\n          <Form.Group id=\"title\">\r\n            <Form.Label>Title:</Form.Label>\r\n            <Form.Control\r\n              style={{ width: \"400px\" }}\r\n              as=\"textarea\"\r\n              type=\"string\"\r\n              onChange={(e) => {\r\n                if (e.target) {\r\n                  console.log(e.target.value);\r\n                  settitle(e.target.value);\r\n                  setsave(false);\r\n                }\r\n              }}\r\n              required\r\n              className=\"button-bg\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group id=\"title\">\r\n            <Form.Label>Sub-Title:</Form.Label>\r\n            <Form.Control\r\n              style={{ width: \"400px\" }}\r\n              as=\"textarea\"\r\n              type=\"string\"\r\n              onChange={(e) => {\r\n                if (e.target) {\r\n                  console.log(e.target.value);\r\n                  setsubtitle(e.target.value);\r\n                  setsave(false);\r\n                }\r\n              }}\r\n              required\r\n              className=\"button-bg\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group id=\"content\">\r\n            <Form.Label>Body:</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              type=\"string\"\r\n              onChange={(e) => {\r\n                if (e.target) {\r\n                  console.log(e.target.value);\r\n                  setcontent(e.target.value);\r\n                  setsave(false);\r\n                }\r\n              }}\r\n              required\r\n              className=\"button-bg\"\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Button onClick={() => handleSave()}>Save</Button>\r\n      </div>\r\n\r\n      <div style={{ width: \"fit-content\" }}>\r\n        {/* basically when the user hit save we will take his input into the imported package of pdf  elemants */}\r\n        <PDFViewer style={{ width: \"8in\", height: \"8in\", marginTop: \"2%\" }}>\r\n          <Document>\r\n            <Page style={styles.body}>\r\n              \r\n              <Text style={styles.title} fixed>\r\n                {save ? title : \"this is the page title\"}\r\n              </Text>\r\n              <Text style={styles.author}>\r\n                {save ? subtitle : \"this is the Company Name\"}\r\n              </Text>\r\n              <Text style={styles.author}>\r\n                ------------------------------------------------------------------\r\n              </Text>\r\n\r\n              <Text style={styles.text}>\r\n                {save ? content : \"this is the body of the page\"}\r\n              </Text>\r\n              <Text style={styles.text}>\r\n                {save\r\n                  ? \"\"\r\n                  : \"Note!: it wont update unless you save and once you start editing again it will reverse the additions till you save again\"}\r\n              </Text>\r\n              <Text style={styles.text}>\r\n                {save\r\n                  ? \"\"\r\n                  : \"Note!:you can write praragraphs inside the body and separate them by pressing the KEY (ENTER)\"}\r\n              </Text>\r\n            </Page>\r\n          </Document>\r\n        </PDFViewer>\r\n        {/*elements ends */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n    fontFamily: \"Times-Roman\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Scheduler,\r\n  MonthView,\r\n  Toolbar,\r\n  ViewSwitcher,\r\n  DateNavigator,\r\n  TodayButton,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst style = ({ palette }) => ({\r\n  icon: {\r\n    color: palette.action.active,\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n  },\r\n  firstRoom: {\r\n    background:\r\n      \"url(https://js.devexpress.com/Demos/DXHotels/Content/Pictures/Lobby-4.jpg)\",\r\n  },\r\n  secondRoom: {\r\n    background:\r\n      \"url(https://js.devexpress.com/Demos/DXHotels/Content/Pictures/MeetingRoom-4.jpg)\",\r\n  },\r\n  thirdRoom: {\r\n    background:\r\n      \"url(https://js.devexpress.com/Demos/DXHotels/Content/Pictures/MeetingRoom-0.jpg)\",\r\n  },\r\n  header: {\r\n    height: \"260px\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n  commandButton: {\r\n    backgroundColor: \"rgba(255,255,255,0.65)\",\r\n  },\r\n});\r\n\r\nfunction calculateProgress(temp) {\r\n  let counter = 0;\r\n\r\n  temp.subTasks.forEach((sub) => {\r\n    if (sub.complete) {\r\n      counter++;\r\n    }\r\n  });\r\n\r\n  return counter;\r\n}\r\n\r\nconst Header = withStyles(style, {\r\n  name: \"Header\",\r\n})(({ children, appointmentData, classes, ...restProps }) => (\r\n  <AppointmentTooltip.Header {...restProps} appointmentData={appointmentData}>\r\n    <Container\r\n      fluid\r\n      style={{\r\n        backgroundColor: appointmentData.color,\r\n        textAlign: \"center\",\r\n        borderRadius: \"4px\",\r\n        margin: \"5px\",\r\n      }}\r\n    >\r\n      <Row style={{ textAlign: \"center\" }}>\r\n        <Col md={12}>\r\n          <h6 style={{ color: \"white\", fontSize: \"18px\" }}>\r\n            {appointmentData.belongsTo.projectName}\r\n          </h6>\r\n        </Col>\r\n        {/* <hr style={{ color: \"black\", width: \"100%\" }} /> */}\r\n        <Col md={12}>\r\n          <h6 style={{ color: \"white\" }}>{appointmentData.title}</h6>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </AppointmentTooltip.Header>\r\n));\r\n\r\nexport default class CalendarScheduler extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.data,\r\n      viewDetails: this.props.data,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    const Content = withStyles(style, {\r\n      name: \"Content\",\r\n    })(({ children, appointmentData, classes, ...restProps }) => (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ width: \"75px\", height: \"75px\" }}>\r\n              <CircularProgressbar\r\n                value={\r\n                  appointmentData.subTasks.length > 0\r\n                    ? (\r\n                        (calculateProgress(appointmentData) /\r\n                          appointmentData.subTasks.length) *\r\n                        100\r\n                      ).toFixed(2)\r\n                    : 0\r\n                }\r\n                text={\r\n                  appointmentData.subTasks.length > 0\r\n                    ? (\r\n                        (calculateProgress(appointmentData) /\r\n                          appointmentData.subTasks.length) *\r\n                        100\r\n                      ).toFixed(2) + \"%\"\r\n                    : \"No sub tasks\"\r\n                }\r\n                styles={buildStyles({\r\n                  rotation: 0.25,\r\n                  strokeLinecap: \"butt\",\r\n                  textSize: \"16px\",\r\n                  pathColor: appointmentData.color,\r\n                  textColor: appointmentData.color,\r\n                  trailColor: \"#dcdcdc\",\r\n                })}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md={12}>\r\n            <Row className=\"mb-2\">\r\n              <Col md={4}>Subtask Name</Col>\r\n              <Col md={4}>Completed</Col>\r\n              <Col md={4}>Assigned to</Col>\r\n            </Row>\r\n            {appointmentData.subTasks.length > 0 ? (\r\n              <div\r\n                style={{\r\n                  height: \"120px\",\r\n                  width: \"100%\",\r\n                  overflow: \"auto\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                {appointmentData.subTasks.map((sub) => (\r\n                  <Row\r\n                    style={{ width: \"99%\", marginBottom: \"10px\" }}\r\n                    key={sub.name}\r\n                  >\r\n                    <Col md={6}>{sub.name}</Col>\r\n                    <Col md={4}>\r\n                      {sub.complete ? (\r\n                        <div>\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"22\"\r\n                            height=\"22\"\r\n                            fill=\"#F5A494\"\r\n                            className=\"bi bi-check-square-fill\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm10.03 4.97a.75.75 0 0 1 .011 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.75.75 0 0 1 1.08-.022z\" />\r\n                          </svg>\r\n                        </div>\r\n                      ) : (\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"22\"\r\n                          height=\"22\"\r\n                          fill=\"#F5A494\"\r\n                          className=\"bi bi-square\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                        </svg>\r\n                      )}\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      {sub.assigned !== undefined ? (\r\n                        <div>\r\n                          {sub.assigned.photoURL ? (\r\n                            <OverlayTrigger\r\n                              placement=\"right\"\r\n                              delay={{ show: 250, hide: 400 }}\r\n                              overlay={\r\n                                <Tooltip\r\n                                  id=\"button-tooltip-2\"\r\n                                  style={{ zIndex: \"1500\" }}\r\n                                >\r\n                                  Assigned to: {sub.assigned.name}\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <img\r\n                                style={{\r\n                                  borderRadius: \"50%\",\r\n                                  width: \"30px\",\r\n                                }}\r\n                                src={sub.assigned.photoURL}\r\n                                alt=\"Profile_Picture\"\r\n                              ></img>\r\n                            </OverlayTrigger>\r\n                          ) : (\r\n                            <OverlayTrigger\r\n                              placement=\"right\"\r\n                              delay={{ show: 250, hide: 400 }}\r\n                              overlay={\r\n                                <Tooltip\r\n                                  id=\"button-tooltip-2\"\r\n                                  style={{ zIndex: \"1500\" }}\r\n                                >\r\n                                  Assigned to: {sub.assigned.name}\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                fill=\"currentColor\"\r\n                                className=\"bi bi-person-circle\"\r\n                                viewBox=\"0 0 16 16\"\r\n                              >\r\n                                <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                <path\r\n                                  fillRule=\"evenodd\"\r\n                                  d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\r\n                                />\r\n                              </svg>\r\n                            </OverlayTrigger>\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div>No sub tasks</div>\r\n            )}\r\n          </Col>\r\n          <Col md={12} className=\"text-center\">\r\n            <Button\r\n              className=\"mt-3 mb-3\"\r\n              onClick={() => this.props.viewDetails(appointmentData.belongsTo)}\r\n            >\r\n              Go to Project Page\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    ));\r\n\r\n    const Appointment = ({ children, style, ...restProps }) => (\r\n      <Appointments.Appointment\r\n        {...restProps}\r\n        style={{\r\n          ...style,\r\n          height: \"20px\",\r\n          backgroundColor: restProps.data.color,\r\n          borderRadius: \"4px\",\r\n        }}\r\n      >\r\n        {children}\r\n      </Appointments.Appointment>\r\n    );\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler data={data} height=\"100%\">\r\n          <ViewState defaultCurrentViewName=\"Month\" />\r\n          <MonthView height=\"100%\" />\r\n          <Toolbar />\r\n          <ViewSwitcher />\r\n          <DateNavigator />\r\n          <TodayButton />\r\n\r\n          <Appointments appointmentComponent={Appointment} />\r\n\r\n          <AppointmentTooltip\r\n            contentComponent={Content}\r\n            headerComponent={Header}\r\n            showCloseButton\r\n          />\r\n        </Scheduler>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n// headerComponent={Header}\r\n","import React from \"react\";\r\nimport CalenderScheduler from \"./CalendarScheduler.js\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Calendar() {\r\n  const {\r\n    allCompanyTasks,\r\n    userDetails,\r\n    selectCompany,\r\n    setSelectedProject1,\r\n    projects,\r\n  } = useAuth();\r\n  let currentUser = {};\r\n  let projectsTemp = [];\r\n  let taskTemp = [];\r\n  const history = useHistory();\r\n\r\n  //getting the current user role from state\r\n  for (let i = 0; i < allCompanyTasks.length; i++) {\r\n    for (let j = 0; j < allCompanyTasks[i].belongsTo.assigned.length; j++) {\r\n      if (\r\n        allCompanyTasks[i].belongsTo.assigned[j].email === userDetails.email\r\n      ) {\r\n        currentUser = allCompanyTasks[i].belongsTo.assigned[j];\r\n      }\r\n    }\r\n  }\r\n\r\n  //looping through all projects in selected company\r\n  for (let i = 0; i < projects.length; i++) {\r\n    //checking if user exists and is assigned in the company\r\n    if (currentUser) {\r\n      //if the user type was owner we will store all the projects\r\n      if (currentUser.type === \"owner\") {\r\n        projectsTemp.push(projects[i]);\r\n      } else {\r\n        //if the user type was admin or worker we will store only the projects they are assigned to\r\n        for (let j = 0; j < projects[i].assigned.length; j++) {\r\n          if (currentUser.email === projects[i].assigned[j].email) {\r\n            projectsTemp.push(projects[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //checking if the task exists in the previous array of assigned projects (projectsTemp)\r\n  let allTasks = [];\r\n  //looping through all company tasks\r\n  for (let i = 0; i < allCompanyTasks.length; i++) {\r\n    //nested loop of all assigned projects array that we took earlier\r\n    for (let j = 0; j < projectsTemp.length; j++) {\r\n      //checking if the current user is assigned to the project\r\n      if (\r\n        allCompanyTasks[i].belongsTo.projectName === projectsTemp[j].projectName\r\n      ) {\r\n        //checking the user type\r\n        if (currentUser.type === \"Worker\") {\r\n          //if the type was worker we will only show the tasks that they are assigned to\r\n          for (let k = 0; k < allCompanyTasks[i].subTasks.length; k++) {\r\n            if (allCompanyTasks[i].subTasks[k].assigned !== undefined) {\r\n              if (\r\n                allCompanyTasks[i].subTasks[k].assigned.email ===\r\n                currentUser.email\r\n              ) {\r\n                allTasks.push(allCompanyTasks[i]);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          //if the user was an admin or owner we will show all the tasks of the projects\r\n          //NOTE: that the admin will only be shown the tasks of a project that they are assigned to administrate\r\n          allTasks.push(allCompanyTasks[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //copying the array of tasks into the final array which will be used\r\n  //to display the data in the dexextreme scheduler api\r\n  taskTemp = allTasks;\r\n\r\n  function viewDetails(project) {\r\n    setSelectedProject1(project);\r\n    history.push(\r\n      selectCompany.companyName + \"/projects/\" + project.projectName\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {taskTemp.length > 0 ? (\r\n        <CalenderScheduler\r\n          data={taskTemp}\r\n          viewDetails={viewDetails}\r\n        ></CalenderScheduler>\r\n      ) : (\r\n        <CalenderScheduler viewDetails={viewDetails}></CalenderScheduler>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { React } from \"react\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport CompleteDetails from \"./CompleteDetails\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport InnerCompleteDetails from \"./InnerCompleteDetails\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\nimport { AuthProvider } from \"../Context/AuthContext\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport \"./styles/App.css\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport ProjectPage from \"./ProjectPage\";\r\nimport ContactsPage from \"./ContactsPage\";\r\nimport ContractsPage from \"./ContractsPage\";\r\nimport Calendar from \"./Calendar.js\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n\r\nfunction App() {\r\n  const options = {\r\n    position: positions.BOTTOM_CENTER,\r\n    timeout: 5000,\r\n    offset: \"30px\",\r\n    transition: transitions.SCALE,\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-background\">\r\n      <Router>\r\n        <AlertProvider template={AlertTemplate} {...options}>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n              <PrivateRoute path=\"/calendar\" component={Calendar} />\r\n              <PrivateRoute\r\n                path=\"/:company/projects/:project\"\r\n                component={ProjectPage}\r\n              />\r\n              <PrivateRoute path=\"/profile-details\" component={UpdateProfile} />\r\n              <PrivateRoute path=\"/clients\" component={ContactsPage} />\r\n              <PrivateRoute path=\"/contracts\" component={ContractsPage} />\r\n              <InnerCompleteDetails\r\n                path=\"/complete-details\"\r\n                component={CompleteDetails}\r\n              />\r\n\r\n              <PublicRoute path=\"/signup\" component={Signup} />\r\n              <PublicRoute path=\"/ezb\" component={Login} />\r\n              <PublicRoute path=\"/login\" component={Login} />\r\n              <PublicRoute path=\"/forgot-password\" component={ForgotPassword} />\r\n            </Switch>\r\n          </AuthProvider>\r\n        </AlertProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}